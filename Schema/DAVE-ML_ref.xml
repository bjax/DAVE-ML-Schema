<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!-- Internal entity definition of appendix material (the DAVE-ML DTD ref stuff) -->
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"file:///Users/bjax/xml/DTDs/docbook-xml-4.5/docbookx.dtd" 
[
<!ENTITY DAVEfunc_ref_auto SYSTEM "Auto_DTD/DAVEfunc_ref_auto.xml">
]>

<article>
  <articleinfo>
    <title>Dynamic Aerospace Vehicle Exchange Markup Language (<acronym>DAVE-ML</acronym>)
      Reference</title>
    <titleabbrev>DAVE-ML 2</titleabbrev>
    <subtitle>Version 2.0 (Release Candidate 4)</subtitle>
    <releaseinfo>2010-11-08</releaseinfo>
    <corpauthor>
      <ulink url="https://info.aiaa.org/tac/ASG/MSTC"> AIAA Modeling and
        Simulation Technical Committee </ulink>
    </corpauthor>

    <editor>
      <firstname>E. Bruce</firstname>
      <surname>Jackson</surname>
      <affiliation>
        <shortaffil>NASA Langley Research Center</shortaffil>
        <jobtitle>Senior Aerospace Technologist</jobtitle>
        <orgname>National Aeronautics and Space Administration</orgname>
        <address>
          <street>MS 308 NASA</street>
          <city>Hampton</city>
          <state>VA</state>
          <postcode>23681</postcode>
          <email>bruce.jackson@nasa.gov</email>
        </address>
      </affiliation>
    </editor>

    <abstract>
      <para>
	The Dynamic Aerospace Vehicle Exchange Markup Language (<acronym>DAVE-ML</acronym>) is a
	text-based file format intended for encoding the principal elements of a flight simulation
	model for an aerospace vehicle. It is based on two other open standards: the Extensible
	Markup Language (<acronym>XML</acronym>) version 1.1 and the Mathematical Markup Language
	(<acronym>MathML</acronym>) version 2.0, both products of the World Wide Web
	Consortium. <acronym>DAVE-ML</acronym> defines additional grammar (markup elements) to
	provide a domain-specific language capable of aerospace flight dynamics modeling,
	verification, and documentation.
      </para>
      <para>
	This markup language represents the encoding format for BSR/AIAA S-119 Flight Dynamic Model
	Exchange Standard <link linkend="AIAA10"><citation>AIAA10</citation></link>.
      </para>
      <para>
	This is a draft version of the reference manual for <acronym>DAVE-ML</acronym> syntax and
	markup. <acronym>DAVE-ML</acronym> syntax is specified by the
	<filename>DAVEfunc.dtd</filename> Document Type Definition (<acronym>DTD</acronym>) file;
	the version number above refers to the version of the <filename>DAVEfunc.dtd.</filename>
      </para>
      <para>
	<acronym>DAVE-ML</acronym> is an open standard, being developed by an informal team of
	American Institute of Aeronautics and Astronautics (<acronym>AIAA</acronym>) members.
	Contact the author above for more information or comments regarding refinement of
	<acronym>DAVE-ML</acronym>.
      </para>
    </abstract>
  </articleinfo>

  <?hard-pagebreak?>

  <sect1 id="changes">
    <title>Changes to this document</title>
    <titleabbrev>Changes</titleabbrev>
    <para>
      This section contains a list of changes during the development of the
      <acronym>DAVE-ML</acronym> <acronym>DTD</acronym>.
    </para>

    <sect2 id="changes_20rc3" revisionflag="added">
      <title>Changes since version 2.0RC3</title>
      <titleabbrev>RC4 changes</titleabbrev>
      <para>
	This section outlines changes to the DTD and this reference manual since version 2, release
	candidate 3, was released in May 2010.
      </para>
      <para>
	The changes are divided into <emphasis>structural</emphasis> changes to the DTD and
	<emphasis>non-structural</emphasis> changes to the DTD and reference manual.
      </para>

      <sect3 id="dtd-changes-20rc4">
	<title><acronym>DTD</acronym> structural changes since version 2.0RC3</title>
	<titleabbrev>RC4 DTD changes</titleabbrev>
	<para>
	  <itemizedlist>
	    <listitem>
	      <para>
		Made <sgmltag>gtID</sgmltag> and <sgmltag>utID</sgmltag> attributes of
		<sgmltag>griddedTableDef</sgmltag> and <sgmltag>ungriddedTableDef</sgmltag> required
		instead of optional, to make it easier for parsers to deal with the table
		definitions. Previously these attributes were only required of tables that were to
		be reused by more than one function, but feedback from several tool implementers
		made this change desirable.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Changed the definition of the <sgmltag>staticShot</sgmltag> element to allow zero or
		more <sgmltag>checkInput</sgmltag> children. Previously at least one input had to be
		specified in a checkcase, which didn't allow verification of constant-only models
		with no inputs.
	      </para>
	    </listitem>
	  </itemizedlist>
	</para>
      </sect3>

      <sect3 id="refman-changes-20rc4">
	<title>Non-structural <acronym>DTD</acronym> and reference manual changes since version 2.0RC3</title>
	<titleabbrev>RC4 non-DTD changes</titleabbrev>
	<para>
	  <itemizedlist>
	    <listitem>
	      <para>
		Noted that any <sgmltag>math</sgmltag> elements should include an
		<sgmltag>xmlns</sgmltag> attribute with the value of
		<sgmltag>"http://www.w3.org/1998/Math/MathML"</sgmltag>. This is not a new
		requirement but helps parsers recognize the MathML namespace. Added this attribute
		to two examples that contained a <sgmltag>math</sgmltag> element.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Noted that the <sgmltag>calculation</sgmltag> element must contain exactly one
		<sgmltag>math</sgmltag> subelement.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Added definition of the <sgmltag>math</sgmltag> MathML2 element.
	    </listitem>
	  </itemizedlist>
	</para>
      </sect3>
    </sect2>

    <sect2 id="changes_20rc2">
      <title>Changes since version 2.0RC2</title>
      <titleabbrev>RC3 changes</titleabbrev>
      <para>
	This section outlines changes to the DTD and this reference manual since version 2, release
	candidate 2, was released in October 2008.
      </para>
      <para>
	The changes are divided into <emphasis>structural</emphasis> changes to the DTD and
	<emphasis>non-structural</emphasis> changes to the DTD and reference manual.
      </para>

      <sect3 id="dtd-changes-20rc3">
	<title><acronym>DTD</acronym> structural changes since version 2.0RC2</title>
	<titleabbrev>RC3 DTD changes</titleabbrev>
	<para>
	  <itemizedlist>
	    <listitem>
	      <para>
		Corrected the DTD to require at least one <link
		linkend="staticShot"><sgmltag>staticShot</sgmltag></link> child element of the <link
		linkend="checkData"><sgmltag>checkData</sgmltag></link> element.
	      </para>
	    </listitem>
	  </itemizedlist>
	  <itemizedlist>
	    <listitem>
	      <para>
		Changed the DTD logic for inclusion of provenance information for elements
		<link linkend="griddedTableDef"><sgmltag>griddedTableDef</sgmltag></link>,
		<link linkend="ungriddedTableDef"><sgmltag>ungriddedTableDef</sgmltag></link>,
		<link linkend="function"><sgmltag>function</sgmltag></link>,
		<link linkend="checkData"><sgmltag>checkData</sgmltag></link>, and
		<link linkend="staticShot"><sgmltag>staticShot</sgmltag></link> from
<programlisting>
    ( provenance? | provenanceRef? )
</programlisting>
		to
<programlisting>
    ( provenance | provenanceRef )?
</programlisting>

		which is the more correct way to display an optional selection from two
		choices. However, use of <sgmltag>provenance</sgmltag> or
		<sgmltag>provenanceRef</sgmltag> is now deprecated for <sgmltag>checkData</sgmltag>
		elements as described in the non-structural changes below; this change was made for
		consistency with the other elements that have provenance information.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Added optional, mutually exclusive flag elements <link
		linkend="isInput"><sgmltag>isInput</sgmltag></link>, <link
		linkend="isControl"><sgmltag>isControl</sgmltag></link>, and <link
		linkend="isDisturbance"><sgmltag>isDisturbance</sgmltag></link> to conform with the
		latest draft of <link linkend="AIAA10"><citation>AIAA10</citation></link>. These
		flags are intended to help clarify the role of all defined variables and to assist
		in analyses such as linear model extraction.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Changed the Uniform Resource Identifier (URI) for the <emphasis>atan2</emphasis>
		function definition to the daveml.org domain.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Changed SYSTEM ID to reflect new daveml.org domain; changed PUBLIC ID from NASA to
		AIAA.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		In the <acronym>DTD</acronym>, the default DAVE-ML namespace definition was added to
		the top-level <link linkend="DAVEfunc"><sgmltag>DAVEfunc</sgmltag></link> element to
		observe a best-practice for <acronym>XML</acronym> <acronym>DTD</acronym>s, at the
		suggestion of Dan Newman.<indexterm><primary>Newman, Daniel M.</primary></indexterm>
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		In the <acronym>DTD</acronym> and reference manual, changed the <link
		linkend="bpVals"><sgmltag>bpVals</sgmltag></link> elements to allow white space
		separation of values in addition to comma separation (which has always been the case
		for the <link linkend="dataTable"><sgmltag>dataTable</sgmltag></link> 
		element). Ditto for <link
		linkend="dependentVarPts"><sgmltag>dependentVarPts</sgmltag></link> and <link
		linkend=" independentVarPts"><sgmltag>independentVarPts</sgmltag></link>. 
		This may cause a problem for some existing parsers.
	      </para>
	    </listitem>
	  </itemizedlist>
	</para>
	<para>
	  No other changes have been made to the DAVE-ML grammar since 2.0RC2, but this version of
	  the <acronym>DTD</acronym> and reference manual include clean-up of a number of
	  inconsistencies (found by Dennis Linse<indexterm><primary>Linse,
	  Dennis</primary></indexterm> and Trey Arthur<indexterm><primary>Arthur, Jarvis A.,
	  III</primary></indexterm>) between the reference manual and element descriptions, as noted
	  below.
	</para>
      </sect3>

      <sect3 id="refman-changes-20rc3">
	<title>Non-structural <acronym>DTD</acronym> and reference manual changes since version 2.0RC2</title>
	<titleabbrev>RC3 non-DTD changes</titleabbrev>
	<para>
	  <itemizedlist>
	    <listitem>
	      <para>
		Corrected second ungridded table definition example and CLRUD0 function example;
		reformatted page references from [xx] to (p. xx) in the PDF reference manual, thanks
		to suggestions by Dennis Linse<indexterm><primary>Linse,
		Dennis</primary></indexterm>.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Amplified and elaborated on possible values for <sgmltag>interpolate</sgmltag> and
		<sgmltag>extrapolate</sgmltag> attributes for independent variables of function
		definitions.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Added  an index to the reference manual.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Removed the sign convention list as this is now in the overlying AIAA draft
		standard, S-119 <citation>AIAA10</citation>.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Added clarification that, while uncertainty can be applied in multiple places in the
		model (including input, calculations, functions, and outputs), it is probably not a
		good practice to do so.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Changed the non-dimensional signal units-of-measure indication from blank or ND to 'nd',
		in accordance with the latest draft standard <citation>AIAA10</citation>; removed
		plus sign from front of sign convention since it doesn't always apply and is
		redundant to the definition.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Added references to earlier standards papers by B. Hildreth
		<citation>Hildreth94</citation>, <citation>Hildreth98</citation>.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Cleaned up formatting in the element descriptions found in <xref
		linkend="elementDescriptions"/>; corrected the grammar in the BNF descriptions of
		the major elements within this text.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Added two sentences to the description of the calculation element, explaining how to
		tie variables in the model to the MathML expression via the MathML content
		identifier (<sgmltag>ci</sgmltag>) element. Thanks to Missy
		Hill<indexterm><primary>Hill, Melissa</primary></indexterm> and Curtis
		Zimmerman<indexterm><primary>Zimmerman, Curtis</primary></indexterm> for pointing
		out the lack of explanation.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Changed email address for B. Hildreth; added persistent email at daveml.org; changed
		default Uniform Resource Locator (URL) to daveml.org
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Changed the description of <link linkend="bounds"><sgmltag>bounds</sgmltag></link>
		element in the <acronym>DTD</acronym> to remove out-of-date reference to
		[un]griddedTable[Def|Ref] since this is no longer supported. In the reference
		manual, removed a misleading second bounds element for the uniformPDF element case
		and added notes to imply the presence of PCDATA (either one or two, depending on the
		case). Thanks to Dan Newman for prompting this review and
		change.<indexterm><primary>Newman, Daniel M.</primary></indexterm>
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Did more <acronym>DTD</acronym> clean-up to remove redundant 'optional' specifiers
		on elements and attributes; made the 'internal identifier' descriptions consistent
		throughout the <acronym>DTD</acronym> and reference manual; tweaked the style of the
		reference pages in the reference manual; fixed poor grammar in the
		<acronym>DTD</acronym>; replaced parentheses with brackets in the
		<acronym>BNF</acronym> syntax in the reference manual for comments to avoid
		confusion; reformatted the reference pages in the manual for readability; and added
		references to W3C on-line documentation where necessary. Thanks to Dennis
		Linse<indexterm><primary>Linse, Dennis</primary></indexterm> for encouraging the
		correction of these long-standing inconsistencies and distractions.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Put editorial comments in BNF syntaxes in braces ({}) to avoid confusion with
		parentheses, which are used to indicate a choice. Thanks to Dennis
		Linse<indexterm><primary>Linse, Dennis</primary></indexterm> for the catch.
	      </para>
	    </listitem>
	    <listitem>
	      <para>In the <acronym>DTD</acronym>, a sentence was added to the description of the
	      deprecated <link linkend="fileCreationDate"><sgmltag>fileCreationDate</sgmltag></link>
	      element and a similar description was added to the deprecated <link
	      linkend="functionCreationDate"><sgmltag>functionCreationDate</sgmltag></link> element
	      mentioning that both of them have been deprecated in version 2.0. The clarification
	      was made after near-simultaneous suggestions from both Trey Arthur
	      <indexterm><primary>Arthur, Jarvis A., III</primary></indexterm>and Dan
	      Newman.<indexterm><primary>Newman, Daniel M.</primary></indexterm></para>
	    </listitem>
	    <listitem>
	      <para>
		Added a paragraph about the <sgmltag>alias</sgmltag> attribute of the <link
		linkend="variableDef"><sgmltag>variableDef</sgmltag></link> element; it's a valid
		attribute but was missing an explanation. Thanks to Trey
		Arthur<indexterm><primary>Arthur, Jarvis A., III</primary></indexterm> for catching
		this long-standing omission.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Changed the definition of <emphasis>atan2</emphasis> so that the input arguments are
		not limited to &#xB1;1 and are not referred to as 'sine' and 'cosine' to better
		match ANSI C. Thanks to Dan Newman <indexterm><primary>Newman, Daniel
		M.</primary></indexterm>for catching this inconsistency.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Corrected typographical errors in <link
		linkend="fileHeader"><sgmltag>fileHeader</sgmltag></link>, <link
		linkend="variableDef"><sgmltag>variableDef</sgmltag></link>, <link
		linkend="griddedTableDef"><sgmltag>griddedTableDef</sgmltag></link>, <link
		linkend="ungriddedTableDef"><sgmltag>ungriddedTableDef</sgmltag></link>, and <link
		linkend="function"><sgmltag>function</sgmltag></link> element schematic overview
		syntaxes in sections 6.2.1-6.2.6. Thanks to Dennis Linse<indexterm><primary>Linse,
		Dennis</primary></indexterm> for catching these errors.
	      </para>
	    </listitem>
	    <listitem>
	      <para> Added a sentence about the <link linkend="tol">
	      <sgmltag>tol</sgmltag>
	      </link> sub-element being an absolute difference to remove ambiguity over its
	      interpretation. </para>
	    </listitem>
	    <listitem>
	      <para>
		In the reference manual syntax layout, moved the <link linkend="provenance">
		<sgmltag>provenance</sgmltag></link> and <link linkend="provenanceRef">
		<sgmltag>provenanceRef</sgmltag></link> sub-elements out of <link
		linkend="checkData"><sgmltag>checkData</sgmltag></link> and into <link
		linkend="staticShot"><sgmltag>staticShot</sgmltag></link> sub-elements since
		<sgmltag>checkData</sgmltag>, a singleton place-holder, doesn't warrant a description
		but each <sgmltag>staticShot</sgmltag> does.  <sgmltag>provenance</sgmltag> and
		<sgmltag>provenanceRef</sgmltag> are still in the <acronym>DTD</acronym> for
		<sgmltag>checkData</sgmltag> but only for backwards compatibility; their use in a
		<sgmltag>checkData</sgmltag> element is deprecated and may be removed in a future
		version. Thanks to Dennis Linse<indexterm><primary>Linse,
		Dennis</primary></indexterm> for prompting this needed change.
	      </para>
	    </listitem>
	    <listitem>
	      <para> Added a note to <link
	      linkend="documentRef"><sgmltag>documentRef</sgmltag></link> <sgmltag>docID</sgmltag>
	      attribute that it is deprecated. Thanks to Dennis Linse<indexterm><primary>Linse,
	      Dennis</primary></indexterm> for catching this omission. </para>
	    </listitem>
	    <listitem>
	      <para> 
		Removed the redundant "optional" in the description of <link linkend="reference">
		<sgmltag>reference</sgmltag></link> element's <sgmltag>xlink:href</sgmltag>
		attribute. Added the constant value for attributes <sgmltag>xmlns:xlink</sgmltag>
		and <sgmltag>xlink:type</sgmltag>.  Expanded the somewhat terse description of this
		element. Thanks to Dennis Linse<indexterm><primary>Linse,
		Dennis</primary></indexterm> for this correction and other helpful suggestions.
	      </para>
	    </listitem>

	  </itemizedlist>
	</para>
      </sect3>
    </sect2>

    <sect2 id="changes-20rc2">
      <title>Changes since version 2.0RC1</title>
      <titleabbrev>RC2 changes</titleabbrev>
      <para>
        <itemizedlist>

          <listitem>
            <para> 
	      Tweaked examples and syntaxes to match the 2.0 RC 2 <acronym>DTD</acronym>. Cleaned up
	      a couple of figures and incorporated several new reference citations. Added <link
	      linkend="interpolation">interpolation</link> paragraph.
	    </para>
          </listitem>

          <listitem>
            <para>
	      Deprecated <link linkend="signalID">
                <sgmltag>signalID</sgmltag>
              </link> used for internal signals in check-case data in favor of the more consistent
                <link linkend="varID">
                <sgmltag>varID</sgmltag> </link> (which meant the introduction of a formal
                <sgmltag>varID</sgmltag> element) and made the specification of <link
                linkend="signalUnits"><sgmltag>signalUnits</sgmltag> sub-element</link> mandatory
                for input and output signals for consistency. Thanks to Dan Newman
                <indexterm><primary>Newman, Daniel M.</primary></indexterm>for helping solidify the
                thinking about this issue.<indexterm><primary
                sortas="signalID">'signalID' element</primary>
	      <secondary>deprecation</secondary>
	    </indexterm>

	    </para>
          </listitem>

          <listitem>
            <para> 
	      Changed examples in this text to use updated AIAA variable names to match a revised
	      (but unpublished) draft standard of September 2008. Changed many 'examples' to
	      'excerpts' to emphasize the missing portions of a valid DAVE-ML file. Corrected units
	      in check-case examples to match the draft AIAA standard.
	    </para>
          </listitem>

          <listitem>
            <para> 
	      Removed the <sgmltag>symmetric</sgmltag> attribute of the <link
	      linkend="uniformPDF"><sgmltag>uniformPDF</sgmltag> sub-element</link>; this attribute
	      was redundant as symmetric distribution is implied with a single <link
	      linkend="bounds"><sgmltag>bounds</sgmltag> sub-element</link>, and asymmetric is
	      implied by two <sgmltag>bounds</sgmltag> sub-elements. Kudos to Dan Newman
	      <indexterm><primary>Newman, Daniel M.</primary></indexterm>and Dennis
	      Linse<indexterm><primary>Linse, Dennis</primary></indexterm> for catching the
	      inconsistent examples and for suggesting this convention.
	    </para>
          </listitem>

          <listitem>
            <para> 
	      Corrected the <acronym>DTD</acronym> by reversing the definition of the
	      <sgmltag>floor</sgmltag> and <sgmltag>ceiling</sgmltag> values of the
	      <sgmltag>interpolate</sgmltag> attribute of the <link linkend="independentVarPts">
	      <sgmltag>independentVarPts</sgmltag> </link> element; also corrected the correlated
	      uncertainty example. Thanks to Dan Newman <indexterm><primary>Newman, Daniel
	      M.</primary></indexterm>for catching both of these problems in 2.0 RC1.
	    </para>
          </listitem>

          <listitem>
            <para> 
	      Corrected the <acronym>DTD</acronym> so that only one <link
	      linkend="checkData"><sgmltag>checkData</sgmltag> element</link> is allowed (but it can
	      have multiple different <link linkend="staticShot"><sgmltag>staticShot</sgmltag> test
	      conditions</link>). Thanks to Dan and Dennis for reporting this inconsistency between
	      the reference manual and the <acronym>DTD</acronym>.
	    </para>
          </listitem>

          <listitem>
            <para> 
	      Added a <link linkend="description"><sgmltag>description</sgmltag> sub-element</link>
	      to the <link linkend="staticShot"><sgmltag>staticShot</sgmltag> element</link> in
	      response to a suggestion by Dennis Linse<indexterm><primary>Linse,
	      Dennis</primary></indexterm>; and added a typical description to example listings.
	    </para>
          </listitem>

          <listitem>
            <para> 
	      Added a section about namespaces and removed the hard link in the
	      <acronym>DTD</acronym> that incorrectly set the namespace for the <link
	      linkend="calculation"><sgmltag>calculation</sgmltag> element.</link>
            </para>
          </listitem>

          <listitem>
            <para> 
	      Added new multi-purpose <link linkend="creationDate"><sgmltag>creationDate</sgmltag>
              </link> element to replace the single-purpose <link linkend="fileCreationDate">
                <sgmltag>fileCreationDate</sgmltag>
              </link> and <link linkend="functionCreationDate">
                <sgmltag>functionCreationDate</sgmltag> </link> elements, at the suggestion of
                Dennis Linse<indexterm><primary>Linse, Dennis</primary></indexterm> of SAIC.
	      <link linkend="fileCreationDate">
                <sgmltag>fileCreationDate</sgmltag>
              </link> and <link linkend="functionCreationDate">
                <sgmltag>functionCreationDate</sgmltag>
              </link> are now deprecated. 
	    </para>
          </listitem>

          <listitem>
            <para> Corrected descriptions of <link linkend="ungriddedTableDef">
                <sgmltag>ungriddedTableDef</sgmltag>
              </link> and <link linkend="griddedTableDef">
                <sgmltag>griddedTableDef</sgmltag>
              </link> to reflect the possible use of an internal <link linkend="function">
                <sgmltag>function</sgmltag>
              </link> element; previously the descriptions implied that these elements were only
              specified external to functions and thus the <sgmltag>utID</sgmltag> and
                <sgmltag>gtID</sgmltag> attributes, respectively, were required. Thanks to Dennis
              Linse<indexterm><primary>Linse, Dennis</primary></indexterm> for the correction. </para>
          </listitem>
          <listitem>
            <para> 
	      Depicted <link linkend="provenanceRef"><sgmltag>provenanceRef</sgmltag></link> as an
	      option to the <link linkend="provenance"><sgmltag>provenance</sgmltag></link>
	      sub-element for <link linkend="griddedTableDef"><sgmltag>griddedTableDef</sgmltag>
	      </link>, <link linkend="ungriddedTableDef"><sgmltag>ungriddedTableDef</sgmltag>
	      </link>, and <link linkend="function"><sgmltag>function</sgmltag></link> elements in
	      the narrative part of this manual (it was described correctly in the reference
	      section). Also added both <link linkend="provenance">
	      <sgmltag>provenance</sgmltag></link> and <link linkend="provenanceRef">
	      <sgmltag>provenanceRef</sgmltag></link> as optional sub-elements of the <link
	      linkend="variableDef"><sgmltag>variableDef</sgmltag></link> and <link
	      linkend="checkData"><sgmltag>checkData</sgmltag></link> elements. Thanks to Dennis
	      Linse<indexterm><primary>Linse, Dennis</primary></indexterm> for the correction.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Added '[Deprecated]' to the description of <link linkend="griddedTable">
	      <sgmltag>griddedTable</sgmltag></link>, <link linkend="ungriddedTable">
	      <sgmltag>ungriddedTable</sgmltag></link>, and <link
	      linkend="confidenceBound"><sgmltag>confidenceBound</sgmltag></link> elements for
	      consistency; these were previously deprecated but not marked clearly in each element's
	      'purpose' section. Thanks to Dennis Linse<indexterm><primary>Linse,
	      Dennis</primary></indexterm> for the suggestion.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Updated the acknowledgment paragraph of the <acronym>DTD</acronym>; significantly
	      reformatted the .PDF version of this document, and added section numbers to all
	      versions. 
	    </para>
          </listitem>

        </itemizedlist>
      </para>
    </sect2>

    <sect2 id="changes-20rc1">
      <title>Changes since version 1.9b3</title>
      <titleabbrev>RC1 changes</titleabbrev>
      <para>
        <itemizedlist>
          <listitem>
            <para> Added <sgmltag>ceiling</sgmltag> and <sgmltag>floor</sgmltag> enumeration
            selections to <sgmltag>interpolate</sgmltag> attribute of <link
            linkend="independentVarPts"> <sgmltag>independentVarPts</sgmltag> </link> and <link
            linkend="independentVarRef"> <sgmltag>independentVarRef</sgmltag> </link> elements at
            the suggestions of Geoff Brian<indexterm><primary>Brian, Geoffrey</primary></indexterm>,
            Giovanni Cignoni<indexterm><primary>Cignoni, Giovanni A.</primary></indexterm>, Randy
            Brumbaugh<indexterm><primary>Brumbaugh, Randy</primary></indexterm>, and Dan
            Newman.<indexterm><primary>Newman, Daniel M.</primary></indexterm> </para>
          </listitem>
          <listitem>
            <para> Added five uncertainty examples. </para>
          </listitem>
          <listitem>
            <para> Cleaned up all FIXME and BUG notes. </para>
          </listitem>
          <listitem>
            <para> Corrected and expanded the labels on the DAVE-ML excerpt figure. </para>
          </listitem>
        </itemizedlist>
      </para>
    </sect2>

    <sect2 id="changes-19b3">
      <title>Changes since version 1.9b2</title>
      <titleabbrev>1.9b3 changes</titleabbrev>
      <para>
        <itemizedlist>
          <listitem>
	    <para> 
	      Corrected link to the DAVE-ML exchange test
	      <citation><link linkend="Jackson04">Jackson04</link></citation> paper. 
	    </para>
          </listitem>
          <listitem>
            <para> Added <sgmltag>discrete</sgmltag> enumeration selection to
                <sgmltag>interpolate</sgmltag> attribute of <link linkend="independentVarPts">
                <sgmltag>independentVarPts</sgmltag>
              </link> and <link linkend="independentVarRef">
                <sgmltag>independentVarRef</sgmltag> </link> elements at the suggestion of Geoff
                Brian<indexterm><primary>Brian, Geoffrey</primary></indexterm>, Australian Defence
                Science and Technology Organisation
                (<acronym>DSTO</acronym>)<indexterm><primary>DSTO</primary></indexterm>. </para>
          </listitem>
          <listitem>
            <para>Added a section and a <link linkend="variableDef">
                <sgmltag>variableDef</sgmltag>
              </link>
              <link linkend="variableDef_example_5">example</link> on extending the MathML-2
              function set with <emphasis>atan2</emphasis>.</para>
          </listitem>
          <listitem>
            <para>Removed all <sgmltag>xns</sgmltag> attributes from examples.</para>
          </listitem>
          <listitem>
            <para>Emphasized that it is a good practice to provide
                <sgmltag>variableDef</sgmltag>s in sorted sequence.</para>
          </listitem>
        </itemizedlist>
      </para>
    </sect2>

    <sect2 id="changes-19b2">
      <title>Changes since version 1.8b1</title>
      <titleabbrev>1.9b2 changes</titleabbrev>
      <para>
        <itemizedlist>
          <listitem>
            <para> 
	      Added a <sgmltag>quadraticSpline</sgmltag> enumerated value to the
	      <sgmltag>interpolate</sgmltag> attributes of the <link linkend="independentVarPts">
	      <sgmltag>independentVarPts</sgmltag></link> and <link
	      linkend="independentVarRef"><sgmltag>independentVarRef</sgmltag></link>
	      elements (in response to a request from Geoff Brian<indexterm><primary>Brian, Geoffrey</primary></indexterm> of DSTO) and fixed a typographical
	      error in <sgmltag>cubicSpline</sgmltag> attribute string. Added reference to <link
	      linkend="wiki01">Wikipedia article</link> on <ulink
	      url="http://en.wikipedia.org/wiki/Spline_interpolation">spline interpolation</ulink>.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Added a <sgmltag>classification</sgmltag> attribute to the <link linkend="reference">
	      <sgmltag>reference</sgmltag></link> element and added a
	      <sgmltag>date</sgmltag> attribute to the <link linkend="modificationRecord">
	      <sgmltag>modificationRecord</sgmltag></link> element, at the suggestion of
	      Geoff Brian<indexterm><primary>Brian, Geoffrey</primary></indexterm> of DSTO.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Added 2D and 3D ungridded table examples and figures and corrected a typographical
	      error in the ungridded table definition syntax (thanks to Dr. Peter Grant of
	      U. Toronto's UTIAS and Geoff Brian<indexterm><primary>Brian,
	      Geoffrey</primary></indexterm> of DSTO).
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Reintroduced &lt;!ENTITY&gt; to include MathML-2 <acronym>DTD</acronym> (complete) in
	      the body of this <acronym>DTD</acronym>. This entity definition quietly went away in
	      version 1.6 due to a misunderstanding of the proper way to include external
	      <acronym>DTD</acronym>s. It was reintroduced to assist with validating parsers.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Added a <link linkend="description"><sgmltag>description</sgmltag> </link> sub-element
	      to the <link linkend="provenance"> <sgmltag>provenance</sgmltag></link> element, so
	      the provenance entry can contain more information about change justification documents
	      and made <link linkend="provenance"><sgmltag>provenance</sgmltag></link> or <link
	      linkend="provenanceRef"><sgmltag>provenanceRef</sgmltag></link> acceptable
	      sub-elements to <link linkend="variableDef"><sgmltag>variableDef</sgmltag> </link> and
	      <link linkend="checkData"><sgmltag>checkData</sgmltag></link> elements at the request
	      of Geoff Brian<indexterm><primary>Brian, Geoffrey</primary></indexterm> of DSTO.
	    </para>
          </listitem>
        </itemizedlist>
      </para>
    </sect2>
    <sect2 id="changes-18b1">
      <title>Changes since version 1.7b1</title>
      <titleabbrev>1.8b1 changes</titleabbrev>
      <para>
        <itemizedlist>
          <listitem>
            <para> 
	      Renamed <sgmltag>docID</sgmltag> attribute to <sgmltag>refID</sgmltag> in the <link
	      linkend="modificationRecord"><sgmltag>modificationRecord</sgmltag></link> so
	      the attribute name is consistent; the <sgmltag>docID</sgmltag> attribute is deprecated
	      but remains in place for compatibility with older documents.
	    </para>
          </listitem>
          <listitem>
            <para> Added <link linkend="correlatesWith">
                <sgmltag>correlatesWith</sgmltag>
              </link> and <link linkend="correlation">
                <sgmltag>correlation</sgmltag>
              </link> sub-elements of <link linkend="uncertainty">
                <sgmltag>uncertainty</sgmltag>
              </link> element to allow for multiple-dimensioned linear correlation of uncertainty of
              selected functions and variables. </para>
          </listitem>
          <listitem>
            <para> 
	      Added a new element, <link linkend="contactInfo">
	      <sgmltag>contactInfo</sgmltag></link>, to replace the single <link
	      linkend="address"><sgmltag>address</sgmltag></link> element. This format
	      supports multiple ways to indicate how to contact the author of a document or
	      reference.  <sgmltag>address</sgmltag> is deprecated but is retained for
	      backwards compatibility. This element also replaces the <sgmltag>email</sgmltag> and
	      <sgmltag>xns</sgmltag> attributes of <link linkend="author">
	      <sgmltag>author</sgmltag></link>.
	    <indexterm>
	      <primary sortas="contactInfo">'contactInfo' element</primary>
	      <secondary>discussion</secondary>
	    </indexterm>
	    <indexterm>
	      <primary sortas="address">'address' element (deprecated)</primary>
	      <secondary>deprecation</secondary>
	    </indexterm>
	    <indexterm>
	      <primary sortas="xns">'xns' attribute (deprecated)</primary>
	      <secondary>deprecation</secondary>
	    </indexterm>
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Fixed a typographical error in <link linkend="ungriddedTableRef">
	      <sgmltag>ungriddedTableRef</sgmltag></link> element: incorrect
	      <sgmltag>gtID</sgmltag> attribute corrected to <sgmltag>utID</sgmltag>.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Allowed multiple <link linkend="author"><sgmltag>author</sgmltag></link>
	      elements wherever only one had been allowed before.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Added a new tag, <link linkend="isStdAIAA"><sgmltag>isStdAIAA</sgmltag>
	      </link>, to indicate that a <sgmltag>variableDef</sgmltag> refers to one of the
	      standard AIAA variables.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Removed <sgmltag>[un]griddedTable[Ref|Def]</sgmltag> sub-elements of the <link
	      linkend="confidenceBound"><sgmltag>confidenceBound</sgmltag></link> element
	      since this leads to circular logic. 
	    </para>
          </listitem>
          <listitem>
            <para> Changed SYSTEM ID to reflect new daveml.nasa.gov domain availability. </para>
          </listitem>
          <listitem>
            <para> Removed true email from examples to protect privacy of individual
            contributors. </para>
          </listitem>
          <listitem>
            <para> Added a new attribute, <sgmltag>interpolate</sgmltag>, to the <link
                linkend="independentVarPts">
                <sgmltag>independentVarPts</sgmltag>
              </link> element to indicate whether the table interpolation should be linear or cubic
              spline in the given dimension [modified to include quadratic in version 1.9]. </para>
          </listitem>
          <listitem>
            <para> 
	      Added a new tag, <link linkend="isState"><sgmltag>isState</sgmltag></link>,
	      to indicate that a <sgmltag>variableDef</sgmltag> refers to a state variable in the
	      model.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Added a new tag, <link linkend="isStateDeriv">
	      <sgmltag>isStateDeriv</sgmltag></link>, to indicate that a <link
	      linkend="variableDef"><sgmltag>variableDef</sgmltag></link> refers to a
	      state derivative variable in the model. </para>
          </listitem>
        </itemizedlist>
      </para>
    </sect2>
    <sect2 id="changes-17b1">
      <title>Changes since version 1.6b1</title>
      <titleabbrev>1.7b1 changes</titleabbrev>
      <para> Added <link linkend="checkData">
          <sgmltag>checkData</sgmltag>
        </link> and associated elements. Added <link linkend="description">
          <sgmltag>description</sgmltag>
        </link> sub-element to <link linkend="reference">
          <sgmltag>reference</sgmltag>
        </link> element. </para>
    </sect2>
    <sect2 id="changes-16b1">
      <title>Changes since version 1.5b3</title>
      <titleabbrev>1.6b1 changes</titleabbrev>
      <para> 
	Added an <link linkend="uncertainty"><sgmltag>uncertainty</sgmltag></link>
	element. Emphasized MathML-2 content markup over presentation markup. Fixed several
	grammatical and typographical errors and added figure 1. Added ISO 8601 (Dates and Times)
	reference.
      </para>
    </sect2>
    <sect2 id="changes-15b3">
      <title>Changes since version 1.5b2</title>
      <titleabbrev>1.5b3 changes</titleabbrev>
      <para>
        <itemizedlist>
          <listitem>
            <para> 
	      Added Bill Cleveland<indexterm><primary>Cleveland, William</primary></indexterm> (NASA
	      Ames Research Center's SimLab) and Brent York<indexterm><primary>York,
	      Brent</primary></indexterm> (NAVAIR's Manned Flight Simulator) to the acknowledgments
	      section, to thank them for their pioneering initial trials of DAVE-ML.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Added <link linkend="provenanceRef"><sgmltag>provenanceRef</sgmltag></link>
	      element and changed all parents (specifically <link linkend="function">
	      <sgmltag>function</sgmltag></link>, <link linkend="griddedTableDef">
	      <sgmltag>griddedTableDef</sgmltag></link> and <link
	      linkend="ungriddedTableDef"><sgmltag>ungriddedTableDef</sgmltag></link>
	      elements) of <link linkend="provenance"><sgmltag>provenance</sgmltag></link>
	      elements to enable them to use a <link linkend="provenanceRef">
	      <sgmltag>provenanceRef</sgmltag></link> reference instead to eliminate
	      duplicate <link linkend="provenance"><sgmltag>provenance</sgmltag></link>
	      elements.
	    </para>
          </listitem>
          <listitem>
            <para>
	      Realization dawned that there was little difference between <link
	      linkend="griddedTable"><sgmltag>griddedTable</sgmltag></link>s and <link
	      linkend="griddedTableDef"><sgmltag>griddedTableDef</sgmltag></link>s but that
	      the latter was more flexible (ditto <link linkend="ungriddedTable">
	      <sgmltag>ungriddedTable</sgmltag></link>s and <link
	      linkend="ungriddedTableDef"><sgmltag>ungriddedTableDef</sgmltag></link>s). 
	      By making the <sgmltag>gtID</sgmltag> and <sgmltag>utID</sgmltag>
	      attributes 'implied' instead of 'required,' we can use the <sgmltag>Def</sgmltag>
	      versions in both referenced-table and embedded-table <link linkend="function">
	      <sgmltag>function</sgmltag></link>s. Thus the original <link
	      linkend="griddedTable"><sgmltag>griddedTable</sgmltag></link> and <link
	      linkend="ungriddedTable"><sgmltag>ungriddedTable</sgmltag></link> elements
	      have been marked as 'deprecated.' They are still supported in this
	      <acronym>DTD</acronym> for backwards compatibility but should be avoided in future
	      use. The easiest way to modify older DAVE-ML models would be to rename all
	      <sgmltag>griddedTable</sgmltag>s as
	      <sgmltag>griddedTableDef</sgmltag>s. 
	      <indexterm>
		<primary sortas="griddedTable">'griddedTable' element (deprecated)</primary>
		<secondary>deprecation</secondary>
	      </indexterm>
	      <indexterm>
		<primary sortas="ungriddedTable">'ungriddedTable' element (deprecated)</primary>
		<secondary>deprecation</secondary>
	      </indexterm>
	    </para>
          </listitem>
        </itemizedlist>
      </para>
    </sect2>

    <sect2 id="changes-15b2">
      <title>Changes since version 1.5b</title>
      <titleabbrev>1.5b2 changes</titleabbrev>
      <para>
        <itemizedlist>
          <listitem>
            <para> 
	      Fixed typographical errors pointed out by Bill Cleveland<indexterm><primary>Cleveland,
	      William</primary></indexterm>.
	    </para>
          </listitem>
          <listitem>
            <para> Added <link linkend="fileVersion">
                <sgmltag>fileVersion</sgmltag>
              </link> element to <link linkend="fileHeader">
                <sgmltag>fileHeader</sgmltag>
              </link> element, so each version of a particular <sgmltag>DAVEfunc</sgmltag> model can
              be uniquely identified. Format of the version identifier is undefined. </para>
          </listitem>
          <listitem>
            <para> Added an <sgmltag>email</sgmltag> attribute to the <link linkend="author">
                <sgmltag>author</sgmltag></link> element. The Extensible Name Service
                (<ulink url="http://www.xns.org">xns</ulink>) standard does not appear to be
                catching on as rapidly as hoped, so a static e-mail link will have to do for now, at
                least until the replacement XRI technology is more widely adopted. </para>
          </listitem>
          <listitem>
            <para> 
	      Added a mandatory <sgmltag>varID</sgmltag> attribute to both <link
	      linkend="independentVarPts"><sgmltag>independentVarPts</sgmltag></link> and
	      <link linkend="dependentVarPts"><sgmltag>dependentVarPts</sgmltag></link> so
	      these can be associated with an input and output signal name (<link
	      linkend="variableDef"><sgmltag>variableDef</sgmltag></link>), respectively.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      Added an optional <link linkend="extraDocRef"><sgmltag>extraDocRef</sgmltag>
	      </link> element to the <link linkend="modificationRecord">
	      <sgmltag>modificationRecord</sgmltag></link> element so more than one
	      document can be associated with each modification event. If only one document needs to
	      be referenced, use of the optional refID in the <link linkend="modificationRecord">
	      <sgmltag>modificationRecord</sgmltag></link> itself will suffice. 
	    </para>
          </listitem>
        </itemizedlist>
      </para>
    </sect2>
  </sect1>

  <?hard-pagebreak?>

  <!-- BODY OF DOCUMENT -->

  <sect1 id="intro">
    <title>Introduction</title>
    <titleabbrev>Introduction</titleabbrev>

    <beginpage/>

    <para> 
      This document describes the format for <acronym>DAVE-ML</acronym> model definition files.
      <acronym>DAVE-ML</acronym> is a proposed standard format for the interchange of aerospace
      vehicle flight dynamics models. The intent of <acronym>DAVE-ML</acronym> is to significantly
      expedite the process of re-hosting a simulation model from one facility to another and
      function as an improved method to promulgate changes to a particular model between various
      facilities.
    </para>

    <para>
      <acronym>DAVE-ML</acronym> is based on the Extensible Markup Language
      (<acronym>XML</acronym>), a World-Wide Web Consortium (W3C) standard. More information on
      <acronym>XML</acronym> is available <ulink url="http://www.w3.org/XML/">here</ulink>.
      <indexterm><primary>XML</primary></indexterm>
    </para>

    <para>
      The exchange of aerospace vehicle flight dynamics models may derive many benefits from the
      application of <acronym>XML</acronym> in general, and <acronym>DAVE-ML</acronym> in
      particular:

      <itemizedlist>

        <listitem>
          <para>
	    Provides a human-readable text description of the model
	  </para>
        </listitem>

        <listitem>
          <para>
	    Provides an unambiguous machine-readable model description, suitable for conversion into
	    programming language or direct import into object-oriented data structures at run-time
	  </para>
        </listitem>

        <listitem>
          <para>
	    Allows use of the same source file for computer-aided design and real-time piloted
	    simulation
	  </para>
        </listitem>

        <listitem>
          <para>
	    Based on open, non-proprietary, standards that are language- and facility-independent
	  </para>
        </listitem>

        <listitem>
          <para>
	    Allows inclusion of statistical properties, such as confidence bounds and uncertainty
	    ranges, suitable for Monte Carlo or other statistical analysis of the model
	  </para>
        </listitem>

        <listitem>
          <para>
	    Complies with emerging AIAA simulation data standards
	  </para>
        </listitem>

        <listitem>
          <para>
	    Represents a self-contained, complete, archivable data package, including references to
	    reports, wind-tunnel tests, author contact information, and data provenance
	  </para>
        </listitem>

        <listitem>
          <para>
	    Is self-documenting and easily convertible to on-line and hard-copy documentation
	  </para>
        </listitem>

      </itemizedlist>
    </para>

    <para>
      A more complete discussion on the benefits and design of <acronym>DAVE-ML</acronym> can be
      found at the <acronym>DAVE-ML</acronym> web site: <ulink url="http://daveml.org">
        <citetitle>http://daveml.org</citetitle>
	<indexterm>
	  <primary>DAVE-ML</primary>
	  <secondary>additional resources</secondary>
	</indexterm>
	<indexterm>
	  <primary>DAVE-ML</primary>
	  <secondary>web site</secondary>
	</indexterm>
      </ulink>
    </para>

  </sect1>

  <?hard-pagebreak?>

  <sect1 id="purpose">
    <title>Purpose</title>
    <titleabbrev>Purpose</titleabbrev>
    <beginpage/>

    <para>
      <acronym>DAVE-ML</acronym> is intended to encode (for exchange and long-term archive) an
      entire flight vehicle dynamic simulation data package, as is traditionally done in initial
      delivery and updates to engineering development, flight training, and accident investigation
      simulations. It is intended to provide a programming-language-independent representation of
      the aerodynamic, mass/inertia, landing gear, propulsion, and guidance, navigation and control
      laws for a particular vehicle. </para>

    <para> 
      Traditionally, flight simulation data packages are often a combination of paper documents and
      data files on magnetic or optical media. This collection of information is very much
      vendor-specific and is often incomplete or inconsistent. Many times, the preparing facility
      makes incorrect assumptions about how the receiving facility's simulation environment is
      structured. As a result, the re-hosting of the dynamic flight model by the receiving facility
      can take weeks or longer as the receiving facility staff learns the contents and arrangement
      of the data package, the model structure, the various data formats, and variable names/units/sign
      conventions. The staff then spends additional time running check-cases (if any were included
      in the transmittal) and tracking down inevitable differences in results.
    </para>

    <para> 
      There are obvious benefits to automating most of this tedious, manual process.  Often, when a
      pair of facilities has already exchanged one model, the transmission of another model is much
      faster since the receiving facility will probably have devised some scripts and processes to
      convert the data (both model and check-case data). </para>

    <para> The purpose of <acronym>DAVE-ML</acronym> is to develop a common exchange format for these
      flight dynamic models. The advantage gained is to enable any simulation facility or laboratory,
      after having written a <acronym>DAVE-ML</acronym> import and/or export script, to
      automatically receive and/or transmit such packages (and updates to those packages) rapidly
      with other DAVE-ML-compliant facilities. </para>

    <para>
      To accomplish this goal, the <acronym>DAVE-ML</acronym> project is starting with the
      bulkiest part of most aircraft simulation packages: the aerodynamics model. This initial
      version of <acronym>DAVE-ML</acronym> can be used to transport a complete aerodynamics model,
      including descriptions of the aerodynamic build-up equations and data tables, and
      include references to the documentation about the aerodynamics model and check-case data. This
      format also lends itself to any static subsystem model (i.e. one that contains no state
      vector) such as the mass and inertia model, or a weapons load-out model, or perhaps a
      navigational database. The only requirement is that model outputs must be unambiguously defined
      in terms of inputs, with no past history (state) information required.
    </para>
     
    <para>
      DAVE-ML forms the encoding portion of the Flight Simulation Model Exchange Standard, BSR/AIAA
      S-119-2010 (currently in draft form). More information is available at the S-119 web site
      <link linkend="AIAA10"><citation>AIAA10</citation></link>.
      <indexterm>
	<primary>AIAA</primary>
	<secondary>Standards</secondary>
      </indexterm>
      <indexterm>
	<primary>AIAA</primary>
	<secondary>Draft Standard S-119</secondary>
      </indexterm>
      <indexterm>
	<primary>AIAA</primary>
	<secondary>web site</secondary>
      </indexterm>
    </para>

  </sect1>

  <?hard-pagebreak?>

  <sect1 id="background">
    <title>Background</title>
    <titleabbrev>Background</titleabbrev>

    <para> 
      The idea of a universally understood flight dynamics data package has been discussed for at
      least two decades within the <acronym>AIAA</acronym> technical committees
      <citation>Hildreth94</citation>, <citation>Hildreth98</citation>. There have been proposals in
      the past to standardize on <acronym>Fortran</acronym> as well as proprietary, vendor-specified
      modeling packages, including graphical ones. The National Aerospace Plane
      (<acronym>NASP</acronym>) Program<indexterm><primary>NASP</primary></indexterm>, under the
      guidance of Larry Schilling<indexterm><primary>Schilling, Larry</primary></indexterm> of
      <acronym>NASA</acronym> Dryden Flight Research Center<indexterm><primary>NASA</primary>
      <secondary>Dryden Flight Research Center</secondary></indexterm>, developed a hybrid Web- and
      secure-FTP-based system for exchanging NASP subsystem models as well as a naming convention
      for variables, file names, and other simulation components in the early 1990s. Some other
      simulation standards have subsequently been proposed by the AIAA and are under active
      consideration at this writing <citation><link linkend="AIAA10">AIAA10</link></citation>.
    </para>

    <sect2 id="background-existing">

      <title>Existing standards</title>
      <titleabbrev>Existing standards</titleabbrev>

      <para>
	The AIAA has published a Recommended Practice concerning sign
	conventions, axes systems, and symbolic notation for
	flight-vehicle models <citation><link
	linkend="AIAA92">AIAA92</link></citation>. 
	<indexterm>
	  <primary>AIAA</primary>
	  <secondary>Recommended Practice R-004-1992</secondary>
	</indexterm>
      </para>

      <para>
	The AIAA Modeling and Simulation Technical Committee has prepared a draft standard for the
	exchange of simulation modeling data. This includes a methodology for accomplishing the
	gradual standardization of simulation model components, a mechanism for standardizing
	variable names within math models, and proposed Hierarchical Data Format 5
	(<acronym>HDF5</acronym>) <indexterm><primary>HDF5</primary></indexterm> as the data
	format. This document is included as an Annex to the standard
	<citation><link linkend="AIAA01">AIAA01</link></citation>, 
	<citation><link linkend="AIAA03">AIAA03</link></citation>,
	<citation><link linkend="AIAA10">AIAA10</link></citation>.
	<indexterm>
	  <primary>AIAA</primary>
	  <secondary>Modeling and Simulation Technical Committee</secondary>
	</indexterm>
      </para>

    </sect2>

    <sect2 id="background-proposal">

      <title><acronym>DAVE-ML</acronym> proposal</title>
      <titleabbrev><acronym>DAVE-ML</acronym> proposal</titleabbrev>

      <para>
	In a 2002 AIAA paper, Jackson and Hildreth proposed using <acronym>XML</acronym> to exchange
	flight dynamic models <citation><link linkend="Jackson02">Jackson02</link></citation>. This
	paper gave outlines for how such a standard could be accomplished, and provided a business
	justification for pursuing such a goal.
      </para>

      <para>
	The 2002 proposal included several key aspects from the draft standard, including allowing
	use of a standard variable-name convention and data table schema and including traceability
	for each data point back to a referenced document or change order.
      </para>

      <para>
	In a subsequent paper, Jackson, Hildreth, York<indexterm><primary>York,
	Brent</primary></indexterm> and Cleveland<indexterm><primary>Cleveland,
	William</primary></indexterm> <citation><link
	linkend="Jackson04">Jackson04</link></citation> reported on the results of a demonstration
	using DAVE-ML to exchange two aerodynamic models between simulation facilities, showing the
	feasibility of the idea.
      </para>

    </sect2>

    <sect2 id="background-recent">
      <title>Recent applications</title>
      <titleabbrev>DAVE-ML applications</titleabbrev>
      <para> 
	Several successful applications of DAVE-ML have been reported. These include the adoption of
	DAVE-ML by the Australian DSTO<indexterm><primary>DSTO</primary></indexterm> for threat
	models <citation><link linkend="Brian05">Brian05</link></citation> and the U.S. Navy for
	their Next Generation Threat System <citation><link
	linkend="Hildreth08">Hildreth08</link></citation>. Import tools to allow the direct use of
	DAVE-ML models (without recompilation) in real-time piloted simulations have been reported
	by NASA Langley Research Center (<acronym>LaRC</acronym>)
	<indexterm><primary>NASA</primary><secondary>Langley Research Center</secondary></indexterm>
	<citation><link linkend="Hill07">Hill07</link></citation> and at NASA Ames Research Center
	<indexterm><primary>NASA</primary><secondary>Ames Research Center</secondary></indexterm>
	(<acronym>ARC</acronym>). Some interest has been generated within NASA's Orion Project
	<indexterm><primary>NASA</primary><secondary>Project Orion</secondary></indexterm> as well
	<citation><link linkend="Acevedo07">Acevedo07</link></citation>. Other applications include
	TSONT<indexterm><primary>TSONT</primary></indexterm>, a trajectory optimization tool
	(<citation><link linkend="Durak06">Durak06</link></citation>) and aircraft engine
	simulations (<citation><link linkend="Lin04">Lin04</link></citation>).
      </para>
      <para> 
	DAVE-ML format for models has also been supported by the <ulink
	url="http://genesim.sourceforge.net">GeneSim</ulink>
	Project<indexterm><primary>GeneSim</primary></indexterm>, which is providing open-source
	utility programs that realize a DAVE-ML model in object-oriented source code such as C++,
	Java and C#.
      </para>
    </sect2>

  </sect1>

  <?hard-pagebreak?>

  <sect1 id="tech">
    <title>Supporting technologies</title>
    <titleabbrev>Supporting technologies</titleabbrev>
    <beginpage/>

    <para id="math-ml">
      <acronym>DAVE-ML</acronym> relies on <acronym>MathML</acronym>, version 2.0, to define
      mathematical relationships. MathML-2 is an <acronym>XML</acronym> grammar for describing
      mathematics as a basis for machine-to-machine communication. It is used in DAVE-ML to describe
      relationships between variables and function tables and may also be used for providing
      high-quality typeset documentation from the DAVE-ML source files. More information is
      available at the MathML-2 home web page, found at <ulink
      url="http://www.w3.org/Math/"/>.
      <indexterm><primary>MathML-2</primary></indexterm>
    </para>

    <para>
      <acronym>MathML-2</acronym> provides a mostly complete set of mathematical functions,
      including trigonometric, exponential and switching functions. One function that is available
      in most programming languages and computer-aided design tools but is missing from MathML-2 is
      the two-argument arctangent function which provides a continuous angle calculation by
      comparing the sine and cosine components of a 2D coordinate set. DAVE-ML provides a means of
      extending MathML-2 for a predefined set of functions (currently only the
      <emphasis>atan2</emphasis> function is defined). Thus, a DAVE-ML-compliant processing tool
      should recognize this extension (which is accomplished by using the MathML-2
      <sgmltag>csymbol</sgmltag> element). See <xref linkend="variableDef_overview"/> for a
      discussion and <xref linkend="variableDef_example_5"/>.
      <indexterm><primary><sgmltag>atan2</sgmltag></primary></indexterm>
      <indexterm><primary>DAVE-ML</primary><secondary>extending</secondary></indexterm>
    </para>

  </sect1>

  <?hard-pagebreak?>

  <sect1 id="top-element">
    <title>Major elements</title>
    <titleabbrev>Major elements</titleabbrev>
    <beginpage/>

    <para> At present, only one major element of <acronym>DAVE-ML</acronym> has been defined: the
      function definition element, or <sgmltag>DAVEfunc</sgmltag>. <sgmltag>DAVEfunc</sgmltag> is
      used to describe static models such as aerodynamic and inertia/mass models, where an internal
      state is not included. Static check-cases can also be provided for verification of proper
      implementation. </para>

    <para> Other major elements are envisioned to describe dynamic portions of the vehicle model
      (such as propulsion, landing gear, control systems, etc.) and dynamic check-case (time
      history) data. Ultimately <acronym>DAVE-ML</acronym> should be capable of describing a
      complete flight-dynamics model with sufficient data to validate the proper implementation
      thereof. </para>

    <sect2 id="top-element-davefunc">
      <title>The <sgmltag>DAVEfunc</sgmltag> major element</title>
      <titleabbrev><sgmltag>DAVEfunc</sgmltag></titleabbrev>
      <para> 
	The <link linkend="DAVEfunc"><sgmltag>DAVEfunc</sgmltag></link> element contains both data
	tables and equations for a particular static model. A <link linkend="davefunc_overview">
	<sgmltag>DAVEfunc</sgmltag></link> element is broken into six components: a file header,
	variable definitions, breakpoint definitions, table definitions, function definitions and
	optional check-cases.  This decomposition reflects common practice in engineering
	development flight-simulation models in which the aerodynamic database is usually captured
	in multi-dimensional, linearly interpolated function tables. The inputs to these tables are
	usually state variables of the simulation (such as Mach number or angle-of-attack). The
	outputs from these interpolated tables are combined to represent forces and moments acting
	on the vehicle due to aerodynamics. 
      <indexterm>
	<primary sortas="DAVEfunc">'DAVEfunc' element</primary>
	<secondary>root element</secondary>
      </indexterm>
      <indexterm>
	<primary sortas="DAVEfunc">'DAVEfunc' element</primary>
	<secondary>discussion</secondary>
      </indexterm>
      <indexterm>
	<primary sortas="DAVEfunc">'DAVEfunc' element</primary>
	<secondary>overview</secondary>
      </indexterm>
      </para>

      <para> It is possible, using <sgmltag>DAVEfunc</sgmltag> and <acronym>MathML-2</acronym>
        elements, to completely define an aerodynamic model without use of function tables (by
        mathematical combinations of input variables, such as a polynomial model) but this is not
        yet common in the American flight-simulation industry. 
      </para>

      <para> 
	A <link linkend="fileHeader_overview"><sgmltag>fileHeader</sgmltag></link> element is
	included to give background and reference data for the represented model.
	<indexterm>
	  <primary sortas="fileHeader">'fileHeader' element</primary>
	  <secondary>introduction</secondary>
	</indexterm>
      </para>

      <para>
	Variables, or more properly <emphasis>signals</emphasis>, are used to route inputs and
	calculations through the subsystem model into outputs. Each variable is defined with a <link
	linkend="variableDef_overview"><sgmltag>variableDef</sgmltag></link> element. Variables can
	be thought of as parameters in a computer program or signal paths on a block diagram. They
	can be inputs to the subsystem model, constant values, outputs from the model, and/or the
	results of intermediate calculations. Variables must be defined for each input and output of
	any function element as well as any input or output of the subsystem represented. <ulink
	url="http://www.w3.org/Math">MathML-2</ulink> <emphasis>content</emphasis> markup can be
	used to define constant, intermediate, or output variables as mathematical combination of
	constant values, function table outputs, and other variables, but any
	<emphasis>presentation</emphasis> markup is not required and should be ignored by the
	processing application (except as required to generate documentation). Variables also
	represent the current value of a function (the <sgmltag>dependentVariableDef</sgmltag> in a
	<link linkend="function_overview"><sgmltag>function</sgmltag></link> definition) so the
	output of functions can be used as inputs to other variables or functions.
      <indexterm>
	<primary sortas="variableDef">'variableDef' element</primary>
	<secondary>introduction</secondary>
      </indexterm>
      <indexterm><primary>signals</primary></indexterm>
      <indexterm><primary>variable definitions</primary></indexterm>
      </para>

      <para>
	Breakpoint definitions, captured in <link
	linkend="breakpointDef_overview"><sgmltag>breakpointDef</sgmltag></link> elements, consist
	of a list of monotonically increasing floating-point values separated by commas or white
	space. These sets are referenced by "gridded" function table definitions and may be
	referenced by more than one <link
	linkend="function_overview"><sgmltag>function</sgmltag></link> definition.
      <indexterm>
	<primary sortas="breakpointDef">'breakpointDef' element</primary>
	<secondary>introduction</secondary>
      </indexterm>
      </para>

      <para> 
	Function table definitions, described by <link
	linkend="griddedTableDef_overview"><sgmltag>griddedTableDef</sgmltag></link> and <link
	linkend="ungriddedTableDef_overview"><sgmltag>ungriddedTableDef</sgmltag></link> elements,
	generally contain the bulk of data points in an aerodynamics model, and typically represent
	a smooth hyper-surface representing the value of some aerodynamic non-dimensional
	coefficient as a function of one or more vehicle states (typically Mach number,
	angle-of-attack, control surface deflection, and/or angular body rates). These function
	tables can be either "gridded," meaning the function has a value at every intersection of
	each dimension's breakpoint, or "ungridded," meaning each data point has a specified
	coordinate location in n-space. The same table can be reused in several functions, such as a
	left- and right-aileron moment contribution.
      <indexterm>
	<primary sortas="griddedTableDef">'griddedTableDef' element</primary>
	<secondary>introduction</secondary>
      </indexterm>
      <indexterm>
	<primary sortas="ungriddedTableDef">'ungriddedTableDef' element</primary>
	<secondary>introduction</secondary>
      </indexterm>
      <indexterm>
	<primary>function table</primary>
	<secondary>reuse</secondary>
      </indexterm>
      </para>

      <para> 
	Function definitions (described by <link
	linkend="function_overview"><sgmltag>function</sgmltag></link> elements) connect breakpoint
	sets and data tables to define how an output signal (or dependent variable) should vary with
	one or more input signals (or independent variables).  The valid ranges of input-signal
	magnitudes, along with extrapolation requirements for out-of-range inputs, can be
	defined. There is no limit to the number of independent variables, or function
	dimensionality, of the function.
      <indexterm>
	<primary sortas="function">'function' element</primary>
	<secondary>introduction</secondary>
      </indexterm>
      <indexterm>
	<primary>function table</primary>
	<secondary>dimensionality</secondary>
      </indexterm>
      </para>

      <para>
	Check-case data (described by a single <link
	linkend="checkData_overview"><sgmltag>checkData</sgmltag></link> element) can be included
	to provide information to automatically verify the proper implementation of the model by the
	recipient. Multiple check-cases can (and should) be specified using multiple <link
	linkend="staticShot"><sgmltag>staticShot</sgmltag> test-case definitions</link>, as well as
	optional internal signal values within the model to assist in debugging an instantiation of
	the model by the recipient.
      <indexterm>
	<primary sortas="checkData">'checkData' element</primary>
	<secondary>introduction</secondary>
      </indexterm>
      <indexterm>
	<primary sortas="staticShot">'staticShot' element</primary>
	<secondary>introduction</secondary>
      </indexterm>

      </para>

      <para>
        <xref linkend="daveml_file_excerpt_fig" xrefstyle="template:Figure %n"/> 
	contains excerpts from an example model, showing five of the six major parts of a DAVE-ML file. 
	<figure id="daveml_file_excerpt_fig">
          <title> Excerpts from an example DAVE-ML file </title>
          <mediaobject>
            <imageobject role="fo-fop">
              <imagedata fileref="figures/DAVE-ML_excerpt.jpg" format="JPG" depth="6.0in" scalefit="1"/>
            </imageobject>
            <imageobject role="html">
              <imagedata fileref="figures/DAVE-ML_excerpt.jpg" format="JPG" depth="6.0in" scalefit="1"/>
            </imageobject>
          </mediaobject>
        </figure>
      </para>

      <para> A simpler version of a <link linkend="function">
          <sgmltag>function</sgmltag>
        </link> is available in which the dependent variable breakpoint values and dependent output
        values are specified directly inside the <link linkend="function">
          <sgmltag>function</sgmltag>
        </link> body. This may be preferred for models that do not reuse function or breakpoint
        data. </para>

      <para> A third form of <link linkend="function">
          <sgmltag>function</sgmltag>
        </link> is to give the gridded table values or ungridded table values inside the <link
          linkend="function">
          <sgmltag>function</sgmltag>
        </link> body, but refer to externally defined breakpoint sets. This allows reuse of the
        breakpoint sets by other functions but keeps the table data private. </para>

    </sect2>

    <sect2 id="davefunc_overview">
      <title>Schematic overview of <sgmltag>DAVEfunc</sgmltag></title>
      <titleabbrev><sgmltag>DAVEfunc</sgmltag> overview</titleabbrev>

      <para>
	Shown below are schematic overviews of the various elements currently available in
	<sgmltag>DAVEfunc</sgmltag>. Each element is described in detail in <xref
	linkend="elementRefs"/> later in this document. The following key is used to describe the
	elements and associated attributes.
	<indexterm>
	  <primary sortas="DAVEfunc">'DAVEfunc' element</primary>
	  <secondary>overview</secondary>
	</indexterm>
      </para>

      <programlisting>
Key:
    elementname : mandatory_attributes, [optional_attributes]
            mandatory_single_sub-element
            optional_single_sub-element?                     {editorial comment}
            ( choice_1_sub-element | choice_2_sub-element )
            zero_or_more_sub-elements*     
            one_or_more_sub-elements+
            (character data) implies UNICODE text information
      </programlisting>

      <para> The <link linkend="DAVEfunc">
          <sgmltag>DAVEfunc</sgmltag>
        </link> element has six possible sub-elements: </para>

      <programlisting>
    DAVEfunc :
        <link linkend="fileHeader_overview">fileHeader</link>
        <link linkend="variableDef_overview">variableDef</link>+
        <link linkend="breakpointDef_overview">breakpointDef</link>*
        <link linkend="griddedTableDef_overview">griddedTableDef</link>*
        <link linkend="ungriddedTableDef_overview">ungriddedTableDef</link>*
        <link linkend="function_overview">function</link>*
        <link linkend="checkData_overview">checkData</link>?
      </programlisting>

      <variablelist>
        <title><sgmltag>DAVEfunc</sgmltag> sub-elements:</title>

        <varlistentry>
          <term>
	    <indexterm>
	      <primary sortas="fileHeader">'fileHeader' element</primary>
	      <secondary>as child of 'DAVEfunc' element</secondary>
	    </indexterm>
            <link linkend="fileHeader_overview">
              <sgmltag>fileHeader</sgmltag>
            </link>
          </term>
          <listitem>
            <para> This mandatory element contains information about the origin and development of
              this model. </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
	    <indexterm>
	      <primary sortas="variableDef">'variableDef' element</primary>
	      <secondary>as child of 'DAVEfunc' element</secondary>
	    </indexterm>
            <link linkend="variableDef_overview">
              <sgmltag>variableDef</sgmltag>
            </link>
          </term>
          <listitem>
            <para> 
	      Each <sgmltag>DAVEfunc</sgmltag> model must contain at least one signal path (such as
	      a constant output value). Each input, output or internal signal used by the model must
	      be specified in a separate <link
	      linkend="variableDef_overview"><sgmltag>variableDef</sgmltag></link>.
	    </para>

            <para> A signal can have only a single origin (an input block, a calculation, or a
              function output) but can be used (referenced) more than once as an input to one or
              more functions, signal calculations, and/or as a model output.
	    </para>

	    <para>
	      In DAVE-ML 2.0, all signals are real and scalar.
	    </para>

            <para> 
	      The <link linkend="variableDef"><sgmltag>variableDef</sgmltag></link>s should appear
	      in calculation order; that is, a <sgmltag>variableDef</sgmltag> should not appear
	      before the definitions of variables upon which it is dependent. This is good practice
	      since doing so avoids a circular reference. If a variable depends upon the output
	      (<sgmltag>dependentVar</sgmltag>) of a <sgmltag>function</sgmltag> it can be assumed
	      that dependence has been met, since function definitions appear later in the
	      <sgmltag>DAVEfunc</sgmltag> element.
	    <indexterm>
	      <primary sortas="variableDef">'variableDef' element</primary>
	      <secondary>order of appearance</secondary>
	    </indexterm>
	    </para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
	    <indexterm>
	      <primary sortas="breakpointDef">'breakpointDef' element</primary>
	      <secondary>as child of 'DAVEfunc' element</secondary>
	    </indexterm>
            <link linkend="breakpointDef_overview">
              <sgmltag>breakpointDef</sgmltag>
            </link>
          </term>
          <listitem>
            <para> A <sgmltag>DAVEfunc</sgmltag> model can contain zero, one, or more breakpoint set
              definitions. These definitions can be shared among several gridded function tables.
              Breakpoint definitions can appear in any order. </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <link linkend="griddedTableDef_overview">
              <sgmltag>griddedTableDef</sgmltag>
            </link>
          </term>

          <listitem>
            <para> 
	      A <sgmltag>DAVEfunc</sgmltag> model can contain zero, one, or more gridded nonlinear
	      function table definitions. Each table must be used by multiple <link
	      linkend="function"><sgmltag>function</sgmltag></link> definition if desired for
	      efficiency. Alternatively, some or all <link linkend="function_overview">
	      <sgmltag>function</sgmltag></link>s in a model can specify their tables internally
	      with an embedded <link linkend="griddedTableDef"><sgmltag>griddedTableDef</sgmltag>
	      </link> element.
	      <indexterm>
		<primary sortas="griddedTableDef">'griddedTableDef' element</primary>
		<secondary>as child of 'DAVEfunc' element</secondary>
	      </indexterm>
	      <indexterm>
		<primary sortas="griddedTableDef">'variableDef' element</primary>
		<secondary>overview</secondary>
	      </indexterm>
	      <indexterm>
		<primary sortas="griddedTableDef">'griddedTableDef' element</primary>
		<secondary>reuse</secondary>
	      </indexterm>
	      <indexterm>
		<primary sortas="function">'function' element</primary>
		<secondary>with an internal table</secondary>
	      </indexterm>
	    </para>

            <para> A gridded function table contains dependent values, or data points, corresponding
              to the value of a function at the intersection of one or more breakpoint sets (one for
              each dimension of the table). The independent values (coordinates or breakpoint sets)
              are not stored within the gridded table definition but are referenced by the parent
              function. This allows a function table to be supported by more than one set of
              breakpoint values (such as left- and right-aileron deflections). 
	      <indexterm>
		<primary sortas="breakpointDef">'breakpointDef' element</primary>
		<secondary>reuse</secondary>
	      </indexterm>
	    </para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <link linkend="ungriddedTableDef_overview">
              <sgmltag>ungriddedTableDef</sgmltag>
            </link>
          </term>
          <listitem>

            <para> 
	      A DAVEfunc model can contain zero, one, or more ungridded nonlinear function table
	      definitions. <indexterm><primary sortas="ungriddedTableDef">'ungriddedTableDef' 
	      element</primary><secondary>as child of 'DAVEfunc' 
	      element</secondary></indexterm><indexterm><primary sortas="ungriddedTableDef">'ungriddedTableDef' 
	      element</primary><secondary>overview</secondary></indexterm>
	      Unlike a rectangularly gridded table, an ungridded table specifies data
	      points as individual sets of independent and dependent values. Each table must be used
	      by at least one but can be used by multiple <link
	      linkend="function"><sgmltag>function</sgmltag></link> definitions if necessary
	      for efficiency. Alternatively, <sgmltag>function</sgmltag>s can retain their tables
	      internally with a ungriddedTable element without sharing the table values with other
	      functions.
	      <indexterm>
		<primary sortas="ungriddedTableDef">'ungriddedTableDef' element</primary>
		<secondary>reuse</secondary>
	      </indexterm>
	    </para>

            <para> 
	      Ungridded table values are specified as a single (unsorted) list of independent
	      variable (input) values and associated dependent variable (output) values. While the
	      list is not sorted, the order of the independent variable inputs is important and must
	      match the order given in the parent <link
	      linkend="function"><sgmltag>function</sgmltag></link>. Thus, functions that
	      share an ungridded table definition must have the same ordering of independent variables.
	    </para>
	    
            <para>
	      The method of interpolating the ungridded data is not specified. 
	      <indexterm>
		<primary>interpolation</primary>
		<secondary>of ungridded data</secondary>
	      </indexterm>
	    </para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
	    <indexterm>
	      <primary sortas="function">'function' element</primary>
	      <secondary>as child of 'DAVEfunc' element</secondary>
	    </indexterm>
            <link linkend="function_overview">
              <sgmltag>function</sgmltag>
            </link>
          </term>
          <listitem>

            <para> 
	      A <link linkend="function"><sgmltag>function</sgmltag></link> ties together breakpoint
	      sets (for gridded-table nonlinear functions), function values (either internally or by
	      reference to table definitions), and the input- and output-variable signal
	      definitions, as shown in <xref linkend="daveml_file_excerpt_fig" xrefstyle="template:Figure
	      %n"/>. Functions also include provenance, or background history, of the function data
	      such as wind tunnel test or other source information.
	    </para>

          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
	    <indexterm>
	      <primary sortas="checkData">'checkData' element</primary>
	      <secondary>as child of 'DAVEfunc' element</secondary>
	    </indexterm>
            <link linkend="checkData_overview">
              <sgmltag>checkData</sgmltag>
            </link>
          </term>
          <listitem>
            <para> This optional element contains information allowing the model to be automatically
              verified after implementation by the receiving party. </para>
          </listitem>
        </varlistentry>

      </variablelist>

      <para> An example of each of these sub-elements is given below. Complete descriptions of each
        element in detail are found in <xref linkend="elementRefs"/>. </para>

      <sect3 id="fileHeader_overview">
        <title>The file header element</title>
        <titleabbrev><sgmltag>fileHeader</sgmltag> overview</titleabbrev>

        <para> 
	  The <link linkend="fileHeader"><sgmltag>fileHeader</sgmltag> </link> element contains
	  information about the source of the data contained within the <link
	  linkend="DAVEfunc"><sgmltag>DAVEfunc</sgmltag></link> major element, including the author,
	  creation date, description, reference information, and modification history. 
	  <indexterm>
	    <primary sortas="fileHeader">'fileHeader' element</primary>
	    <secondary>overview</secondary>
	  </indexterm>
	</para>

        <programlisting>
    <link linkend="fileHeader">fileHeader</link> : [name]
        <link linkend="author">author</link>+ : name, org, [email]
            <link linkend="contactInfo">contactInfo</link>* : [contactInfoType, contactLocation]
                {text describing contact information for author}
        <link linkend="creationDate">creationDate</link> : date {in ISO 8601 YYYY-MM-DD format}
        <link linkend="fileVersion">fileVersion</link>? 
            {file version identifier}
        <link linkend="description">description</link>?
            {textual description of model}
        <link linkend="reference">reference</link>* : refID, author, title, date, [classification, accession, href]
            <link linkend="description">description</link>? :
                {textual information about reference}
        <link linkend="modificationRecord">modificationRecord</link>* : modID, date, [refID]
            <link linkend="author">author</link>+ : name, org, [email]
                <link linkend="contactInfo">contactInfo</link>* : [contactInfoType, contactLocation]
                    {text describing contact information for author}
            <link linkend="description">description</link>?
                {textual description of modification}
            <link linkend="extraDocRef">extraDocRef</link>* : refID
        <link linkend="provenance">provenance</link>* :
                <link linkend="author">author</link>+ : name, org, [email]
                    <link linkend="contactInfo">contactInfo</link>* : [contactInfoType, contactLocation]
                        {text describing contact information for author}
                <link linkend="creationDate">creationDate</link> : date {in ISO 8601 YYYY-MM-DD format}
                <link linkend="documentRef">documentRef</link>* : [docID,] refID
                <link linkend="modificationRef">modificationRef</link>* : modID
                <link linkend="description">description</link>?
                    {textual description of the background of the model}
        </programlisting>

        <variablelist>
          <title><link linkend="fileHeader">
              <sgmltag>fileHeader</sgmltag>
            </link> sub-elements:</title>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="author">'author' element</primary>
	      <secondary>as child of 'fileHeader' element</secondary>
	      </indexterm>
              <link linkend="author">
                <sgmltag>author</sgmltag>
              </link>
            </term>
            <listitem>
              <para>Name, organization, optional email address and other contact information for
                each author.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="creationDate">'creationDate' element</primary>
	      <secondary>as child of 'fileHeader' element</secondary>
	      </indexterm>
              <link linkend="creationDate">
                <sgmltag>creationDate</sgmltag>
              </link>
            </term>
            <listitem>
              <para>
		Creation date of this file. See <xref linkend="date_format_note"/>
                for the recommended format for encoding dates.
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="fileVersion">'fileVersion' element</primary>
	      <secondary>as child of 'fileHeader' element</secondary>
	      </indexterm>
              <link linkend="fileVersion">
                <sgmltag>fileVersion</sgmltag>
              </link>
            </term>
            <listitem>
              <para>A string that indicates the version of the document. No convention is specified
                for the format, but a good practice would include an automated revision number from a
                version control system.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="description">'description' element</primary>
	      <secondary>as child of 'fileHeader' element</secondary>
	      </indexterm>
              <link linkend="description">
                <sgmltag>description</sgmltag>
              </link>
            </term>
            <listitem>
              <para>An optional but recommended text description: what does this
                  <acronym>DAVE-ML</acronym> file represent?</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="reference">'reference' element</primary>
	      <secondary>as child of 'fileHeader' element</secondary>
	      </indexterm>
              <link linkend="reference">
                <sgmltag>reference</sgmltag>
              </link>
            </term>
            <listitem>
              <para> An optional list of one or more references with a document-unique ID (must
                begin with alpha character), author, title, date, and optional accession and URL of
                the reference. This sub-element can include a description of the reference. </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="modificationRecord">'modificationRecord' element</primary>
		<secondary>as child of 'fileHeader' element</secondary>
	      </indexterm>
              <link linkend="modificationRecord">
                <sgmltag>modificationRecord</sgmltag>
              </link>
            </term>
            <listitem>
              <para> An optional list of one or more modifications with
              optional reference IDs, as well as author information and descriptions for each
              modification record. These modifications are referred to by individual function tables
              and/or data points, using the AIAA modification letter convention. If more than one
              document is associated with the modification, multiple sub-element <link
              linkend="extraDocRef">extraDocRef</link>s may be used in place of the <link
              linkend="modificationRecord"><sgmltag>modificationRecord</sgmltag></link>'s
              <sgmltag>refID</sgmltag> attribute. </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="provenance">'provenance' element</primary>
		<secondary>as child of 'fileHeader' element</secondary>
	      </indexterm>
              <link linkend="provenance">
                <sgmltag>provenance</sgmltag>
              </link>
            </term>
            <listitem>
              <para> 
		An optional list of one or more <link linkend="provenance">provenance</link>
		elements allows the author to describe the source and history of the data within
		this model. Since the model may be constructed from several sources, more than one
		provenance may be provided, one for each source of data. Use of a
		<sgmltag>provID</sgmltag> attribute in the <link
		linkend="fileHeader"><sgmltag>fileHeader</sgmltag></link> is unnecessary since this
		provenance applies to the entire model unless otherwise specified.
	      </para>
            </listitem>
          </varlistentry>

        </variablelist>

        <beginpage/>

        <example id="fileHeader_example">
	  <?dbfo keep-together="auto"?>
          <title>An excerpt with an example of a <sgmltag>fileHeader</sgmltag> element</title>
	  <indexterm><primary sortas="fileHeader">'fileHeader' element</primary><secondary>example of</secondary></indexterm>
          <programlisting>
&lt;!--                          =================                          --&gt; <co id="fh-note-1-co" linkends="fh-note-1"/>
&lt;!-- =========================   FILE HEADER   ========================= --&gt;
&lt;!--                          =================                          --&gt;


  &lt;<link linkend="fileHeader">fileHeader</link>&gt; <co id="fh-note-2-co" linkends="fh-note-2"/>
    &lt;<link linkend="author">author</link> name="Bruce Jackson" org="NASA Langley Research Center"&gt;
      &lt;<link linkend="contactInfo">contactInfo</link> contactInfoType='address' contactLocation='professional'&gt;
         MS 308 NASA, Hampton, VA 23681
      &lt;/contactInfo&gt;
      &lt;<link linkend="contactInfo">contactInfo</link> contactInfoType='email' contactLocation='professional'&gt;
        Bruce.Jackson@nospam.nasa.gov
      &lt;/contactInfo&gt;
    &lt;/author&gt;
    &lt;<link linkend="creationDate">creationDate</link> date="2003-03-18"/&gt; <co id="fh-note-3-co" linkends="fh-note-3"/>

    &lt;<link linkend="fileVersion">fileVersion</link>&gt;$<sgmltag>Revision</sgmltag>: 1.24 $&lt;/fileVersion&gt; <co id="fh-note-4-co" linkends="fh-note-4"/>

    &lt;<link linkend="description">description</link>&gt;
     Version 2.0 aero model for HL-20 lifting body, as described in
     NASA TM-107580. This aero model was used for HL-20 approach and
     landing studies at NASA Langley Research Center during 1989-1995
     and for follow-on studies at NASA Johnson Space Center in 1994
     and NASA Ames Research Center in 2001. This DAVE-ML version was
     created in March 2003 by Bruce Jackson to demonstrate DAVE-ML.
    &lt;/description&gt;

    &lt;<link linkend="reference">reference</link> refID="REF01" <co id="fh-note-5-co" linkends="fh-note-5"/>
        author="Jackson, E. Bruce; Cruz, Christopher I. &amp; and Ragsdale, W. A." 
        title="Real-Time Simulation Model of the HL-20 Lifting Body" 
        accession="NASA TM-107580"
        date="1992-07-01"
    /&gt;

    &lt;<link linkend="reference">reference</link> refID="REF02" 
        author="Cleveland, William B. &lt;nospam@mail.arc.nasa.gov&gt;" 
        title="Possible Typo in HL20_aero.xml" 
        accession="email" 
        date="2003-08-19"
    /&gt;

    &lt;<link linkend="modificationRecord">modificationRecord</link> modID="A" refID="REF02"&gt; <co id="fh-note-6-co" linkends="fh-note-6"/>
      &lt;<link linkend="author">author</link> name="Bruce Jackson" org="NASA Langley Research Center"&gt;
        &lt;<link linkend="contactInfo">contactInfo</link> contactInfoType='address' contactLocation='professional'&gt;
           MS 308 NASA, Hampton, VA 23681
        &lt;/contactInfo&gt;
      &lt;/author&gt;
      &lt;<link linkend="description">description</link>&gt;
        Revision 1.24: Fixed typo in CLRUD0 function description which
        gave dependent signal name as "CLRUD1." Bill Cleveland of NASA
        Ames caught this in his xml2ftp script. Also made use of 1.5b2
        fileHeader fields and changed date formats to comply with
        convention.
      &lt;/description&gt;
    &lt;/modificationRecord&gt;

  &lt;/fileHeader&gt;
          </programlisting>

          <calloutlist>
            <callout arearefs="fh-note-1-co" id="fh-note-1">
              <para>Use of comments make models more readable by humans.</para>
            </callout>
            <callout arearefs="fh-note-2-co" id="fh-note-2">
              <para>Start of the <sgmltag>fileHeader</sgmltag> element.</para>
            </callout>
            <callout arearefs="fh-note-3-co" id="fh-note-3">
              <para>Creation date of file, in ISO-8601 format. See <xref linkend="date_format_note"/></para>
            </callout>
            <callout arearefs="fh-note-4-co" id="fh-note-4">
              <para>
		In this example, the revision number is automatically inserted by a version control system.
	      </para>
            </callout>
            <callout arearefs="fh-note-5-co" id="fh-note-5">
              <para>
		All documents referenced by notation throughout the file should be described in the
		<link linkend="fileHeader"><sgmltag>fileHeader</sgmltag></link> as
		<sgmltag>reference</sgmltag> elements.
	      </para>
            </callout>
            <callout arearefs="fh-note-6-co" id="fh-note-6">
              <para>
		All modifications made to the contents of this file should be listed in the <link
		linkend="fileHeader"><sgmltag>fileHeader</sgmltag></link> as <link
		linkend="modificationRecord"><sgmltag>modificationRecord</sgmltag></link>
		sub-elements for easy reference by later <link
		linkend="modificationRef"><sgmltag>modificationRef</sgmltag></link>
		elements.
	      </para>
            </callout>

          </calloutlist>

        </example>
      </sect3>

      <sect3 id="variableDef_overview">
        <title>The variable definition element</title>
        <titleabbrev><sgmltag>variableDef</sgmltag> overview</titleabbrev>
        <para>
	  The <link linkend="variableDef"><sgmltag>variableDef</sgmltag></link> element is used to
	  define each constant, parameter, or variable used within or generated by the defined
	  subsystem model. It contains attributes including the variable name (used for
	  documentation), an internal and unique <sgmltag>varID</sgmltag> identifier (used for linking
	  inputs, functions and outputs), the units of measure of the variable, and optional axis
	  system, sign convention, alias, and symbol declarations. Optional sub-elements include a
	  written text description and a mathematical description, in MathML-2 content markup, of
	  the calculations needed to derive the variable from other variables or function table
	  outputs. Optional sub-element <sgmltag>isOutput</sgmltag>, serves to indicate an
	  intermediate calculation that should be brought out to the rest of the simulation. Another
	  optional sub-element, <sgmltag>isStdAIAA</sgmltag>, indicates the variable name is defined
	  in the AIAA simulation standards document. Another optional sub-element,
	  <sgmltag>uncertainty</sgmltag>, captures the statistical properties of a (normally
	  constant) parameter.
	<indexterm>
	  <primary sortas="variableDef">'variableDef' element</primary>
	  <secondary>overview</secondary>
	</indexterm>

	</para>

	<para>
	  Other optional sub-elements are provided to identify inputs, disturbances, and simulation
	  control parameters, as well as the ability to identify a variable as a state or state
	  derivative for linear model purposes.
	</para>

        <para>There must be a single <link linkend="variableDef">
            <sgmltag>variableDef</sgmltag>
          </link> for each and every input, output or intermediate constant or variable within the
          DAVEfunc model.</para>

        <programlisting>
    <link linkend="variableDef">variableDef</link> : name, varID, units, [axisSystem, sign, alias, symbol, initialValue]
        <link linkend="description">description</link>? :
                {description character data}
        (
            <link linkend="provenanceRef">provenanceRef</link> : provID
        OR
            <link linkend="provenance">provenance</link> : [provID]
                <link linkend="author">author</link>+ : name, org, [email]
                    <link linkend="contactInfo">contactInfo</link>* : [contactInfoType, contactLocation]
                        {text describing contact information}
                <link linkend="creationDate">creationDate</link> : date {in YYYY-MM-DD format}
                <link linkend="documentRef">documentRef</link>* : [docID,] refID
                <link linkend="modificationRef">modificationRef</link>* : modID
                <link linkend="description">description</link>?
        )?
        <link linkend="calculation">calculation</link>? :
            math {defined in MathML-2 <acronym>DTD</acronym>}
        (<link linkend="isInput">isInput</link> | <link linkend="isControl">isControl</link> | <link linkend="isDisturbance">isDisturbance</link>)?
        <link linkend="isState">isState</link>?
        <link linkend="isStateDeriv">isStateDeriv</link>?
        <link linkend="isOutput">isOutput</link>?
        <link linkend="isStdAIAA">isStdAIAA</link>?
        <link linkend="uncertainty">uncertainty</link>? : effect
            (<link linkend="normalPDF">normalPDF</link> : numSigmas) | (<link linkend="uniformPDF">uniformPDF</link> : bounds+)

        </programlisting>

        <variablelist>
          <title><link linkend="variableDef"><sgmltag>variableDef</sgmltag></link> attributes:</title>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="name">'name' attribute</primary>
		<secondary>of 'variableDef' element</secondary>
	      </indexterm>
              <sgmltag>name</sgmltag>
            </term>
            <listitem>
              <para>A UNICODE name for the variable (may be the same string as the
                  <sgmltag>varID</sgmltag>).</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="varID">'varID' attribute</primary>
		<secondary>of 'variableDef' element</secondary>
	      </indexterm>
              <sgmltag>varID</sgmltag>
            </term>
            <listitem>
              <para>An internal identifier that is unique within the file.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="units">'units' attribute</primary>
		<secondary>of 'variableDef' element</secondary>
	      </indexterm>
              <sgmltag>units</sgmltag>
            </term>
            <listitem>
              <para>
		The units-of-measure for the signal, using the AIAA standard units convention <link
		linkend="AIAA10"><citation>AIAA10</citation></link>.
	      </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="axisSystem">'axisSystem' attribute</primary>
		<secondary>of 'variableDef' element</secondary>
	      </indexterm>
              <sgmltag>axisSystem</sgmltag>
            </term>
            <listitem>
              <para>
		An optional indicator of the axis system (body, inertial, etc.) in which the signal
		is measured. See <link linkend="AIAA10"><citation>AIAA10</citation></link> or <xref
		linkend="conventions"/> below for recommended practice for nomenclature.
	      </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="sign">'sign' attribute</primary>
		<secondary>of 'variableDef' element</secondary>
	      </indexterm>
              <sgmltag>sign</sgmltag>
            </term>
            <listitem>
              <para>An optional indicator of which direction is considered positive (+RWD, +UP,
              etc.). See <link linkend="AIAA10"><citation>AIAA10</citation></link> or the section on
              <xref linkend="conventions"/> below for recommended practice for abbreviations.</para>
            </listitem>
          </varlistentry>
          
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="alias">'alias' attribute</primary>
		<secondary>of 'variableDef' element</secondary>
	      </indexterm>
              <sgmltag>alias</sgmltag>
            </term>
            <listitem>
              <para>An optional, facility-specific variable name, perhaps used in the equations 
                of motion or control system model, that does not conform to the AIAA standard for 
                variable names. Use of this attribute is discouraged for portability reasons.
              </para>
            </listitem>
          </varlistentry>
          
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="symbol">'symbol' attribute</primary>
		<secondary>of 'variableDef' element</secondary>
	      </indexterm>
              <sgmltag>symbol</sgmltag>
            </term>
            <listitem>
              <para>A UNICODE Greek symbol for the signal [to be superseded with more formal MathML
                or TeX element in a later release].</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="initialValue">'initialValue' attribute</primary>
		<secondary>of 'variableDef' element</secondary>
	      </indexterm>
              <sgmltag>initialValue</sgmltag>
            </term>
            <listitem>
              <para>An optional initial value for the parameter. This is normally specified for
                constant parameters only.</para>
            </listitem>
          </varlistentry>

        </variablelist>

        <variablelist>
          <title>
            <link linkend="variableDef"><sgmltag>variableDef</sgmltag></link> sub-elements: 
	  </title>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="description">'description' element</primary>
		<secondary>as child of 'variableDef' element</secondary>
	      </indexterm>
              <link linkend="description">
                <sgmltag>description</sgmltag>
              </link>
            </term>
            <listitem>
              <para>An optional text description of the variable.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="provenance">'provenance' element</primary>
		<secondary>as child of 'variableDef' element</secondary>
	      </indexterm>
              <link linkend="provenance">
                <sgmltag>provenance</sgmltag>
              </link>
            </term>
            <listitem>
              <para>The optional <link linkend="provenance">provenance</link> element allows the
                author to describe the source and history of the data within this
                  <sgmltag>variableDef</sgmltag>. Alternatively, a <link linkend="provenanceRef">
                  <sgmltag>provenanceRef</sgmltag>
                </link> reference can be made to a previously defined
                <sgmltag>provenance</sgmltag>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="calculation">'calculation' element</primary>
		<secondary>as child of 'variableDef' element</secondary>
	      </indexterm>
              <link linkend="calculation">
                <sgmltag>calculation</sgmltag>
              </link>
            </term>
            <listitem>
              <para>
		An optional container for the MathML-2 content markup that describes how this
		variable is calculated from other variables or function table outputs. This element
		contains a single <sgmltag>math</sgmltag> element which is defined in the <ulink
		url="http://www.w3.org/Math">MathML-2 markup language</ulink>.
	      </para>
              <para>
		A <acronym>MathML</acronym>-2 calculation can include both constants (using the
		content numeric <sgmltag>cn</sgmltag> element) and references to other variables
		internal to the parent <sgmltag>DAVEfunc</sgmltag> description. The variables
		(which can include the output, or dependent variable of a
		<sgmltag>function</sgmltag> table) are identified using its
		<sgmltag>varID</sgmltag> attribute string in the appropriate
		<acronym>MathML</acronym> content identifier (<sgmltag>ci</sgmltag>) element of
		the expression.
	      </para>
              <para>
		Examples of MathML expressions appear later in this reference.
              </para>
	    </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="isInput">'isInput' element</primary>
		<secondary>as child of 'variableDef' element</secondary>
	      </indexterm>
              <link linkend="isInput"><sgmltag>isInput</sgmltag></link>
            </term>
            <listitem>
              <para>
		This optional element, if present, signifies that this variable is an input to the
		model, such as a pilot inceptor deflection or Mach number. Useful for linear model
		extraction tools. It must not be the result of a calculation or be cited as the
		dependent variable of a function.
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="isControl">'isControl' element</primary>
		<secondary>as child of 'variableDef' element</secondary>
	      </indexterm>
              <link linkend="isControl"><sgmltag>isControl</sgmltag></link>
            </term>
            <listitem>
              <para>
		This optional element, if present, signifies that this variable is a simulation
		control parameter, such as a trim flag or simulation time step
		measurement. Simulation control parameters should have no influence on the dynamic
		behavior of the model and should be ignored by a linear model extraction tool.
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="isDisturbance">'isDisturbance' element</primary>
		<secondary>as child of 'variableDef' element</secondary>
	      </indexterm>
              <link linkend="isDisturbance"><sgmltag>isDisturbance</sgmltag>
              </link>
            </term>
            <listitem>
              <para>
		This optional element, if present, signifies that this variable represents an
		external disturbance input to the model; this is useful for linear model extraction tools
		to partition this input separately from the other model inputs.
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="isOutput">'isOutput' element</primary>
		<secondary>as child of 'variableDef' element</secondary>
	      </indexterm>
              <link linkend="isOutput"><sgmltag>isOutput</sgmltag></link>
            </term>
            <listitem>
              <para>
		This optional element, if present, signifies that this variable needs to be passed
		as an output. How this is accomplished is up to the implementer. Unless specified by
		this element, a variable is considered an output only if it is the result of a
		calculation or function AND is not used elsewhere in the <link
		linkend="DAVEfunc"><sgmltag>DAVEfunc</sgmltag></link>.
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="isStdAIAA">'isStdAIAA' element</primary>
		<secondary>as child of 'variableDef' element</secondary>
	      </indexterm>
              <link linkend="isStdAIAA"><sgmltag>isStdAIAA</sgmltag></link>
            </term>
            <listitem>
              <para>This optional element, if present, signifies that this variable is one of the
                standard AIAA simulation variable names that are defined as Annex A to 
		<citation><link linkend="AIAA10">AIAA10</link></citation>. 
		Such identification should make it easier for the importing process to
                connect this variable (probably an input or output of the model) to the appropriate
                variable to/from the user's simulation framework.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="isState">'isState' element</primary>
		<secondary>as child of 'variableDef' element</secondary>
	      </indexterm>
              <link linkend="isState">
                <sgmltag>isState</sgmltag>
              </link>
            </term>
            <listitem>
              <para>This optional element, if present, signifies that this variable serves as a
                state of the model.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="isStateDeriv">'isStateDeriv' element</primary>
		<secondary>as child of 'variableDef' element</secondary>
	      </indexterm>
              <link linkend="isStateDeriv">
                <sgmltag>isStateDeriv</sgmltag>
              </link>
            </term>
            <listitem>
              <para>This optional element, if present, signifies that this variable serves as a
                state derivative of the model.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="uncertainty">'uncertainty' element</primary>
		<secondary>as child of 'variableDef' element</secondary>
	      </indexterm>
              <link linkend="uncertainty">
                <sgmltag>uncertainty</sgmltag>
              </link>
            </term>
            <listitem>
              <para> 
		This optional element, if present, describes the uncertainty of this parameter.
                See the section on <link linkend="statistics">Statistics</link> below for more
                information about this element. 
	      </para>
            </listitem>
          </varlistentry>
        </variablelist>

        <beginpage/>
        <example id="variableDef_example_1">
	  <?dbfo keep-together="auto"?>
          <title>An example of two <sgmltag>variableDef</sgmltag> elements defining
            input signals</title>
          <para> 
	    In this example<indexterm><primary sortas="variableDef">'variableDef'
	    element</primary><secondary>example of</secondary></indexterm> , two input
	    variables are defined: <varname>XMACH</varname> and <varname>DBFLL</varname>. These two
	    variables are inputs to a table lookup function shown in <xref
	    linkend="function_example_1"/> below. 
	  </para>
          <programlisting>
&lt;!--                     ==========================                     --&gt;
&lt;!-- ====================   VARIABLE DEFINITIONS   ==================== --&gt;
&lt;!--                     ==========================                     --&gt;


      &lt;!-- ================== --&gt;
      &lt;!--  Input variables   --&gt;
      &lt;!-- ================== --&gt;

  &lt;variableDef name="mach"<co id="vd1-note-1-co" linkends="vd1-note-1"/> varID="XMACH"<co id="vd1-note-2-co" linkends="vd1-note-2"/> units="nd" symbol="M"&gt;
    &lt;description&gt;
        Mach number (dimensionless) 
    &lt;/description&gt;
    &lt;isInput/&gt;<co id="vd1-note-7-co" linkends="vd1-note-7"/>
    &lt;isStdAIAA/&gt;<co id="vd1-note-3-co" linkends="vd1-note-3"/>
  &lt;/variableDef&gt;
    .
    .
    .
  &lt;variableDef name="dbfll" varID="DBFLL" units="deg"<co id="vd1-note-4-co" linkends="vd1-note-4"/> sign="TED"<co id="vd1-note-5-co" linkends="vd1-note-5"/> 
                symbol="&amp;#x3B4;bfll"<co id="vd1-note-6-co" linkends="vd1-note-6"/>&gt;
    &lt;description&gt;
        Lower left body flap deflection, deg, positive trailing-edge-down (so deflections are
        always zero or positive).
    &lt;/description&gt;
    &lt;isInput/&gt;
  &lt;/variableDef&gt;
          </programlisting>
          <calloutlist>
            <callout arearefs="vd1-note-1-co" id="vd1-note-1">
              <para> 
		The <sgmltag>name</sgmltag> attribute is intended for humans to read, perhaps as the
		signal name in a wiring diagram. Note that "machNumber" is one of the standard AIAA
		simulation variable names.
	      </para>
            </callout>
            <callout arearefs="vd1-note-2-co" id="vd1-note-2">
              <para>The <sgmltag>varID</sgmltag> attribute is intended for the processing
              application to read. This is an internal identifier that must be unique within this
              model.</para>
            </callout>
            <callout arearefs="vd1-note-7-co" id="vd1-note-7">
	      <para>
		The optional <sgmltag>isInput</sgmltag> attribute indicates this variable should
		be treated as an input to the model for model hierarchy and linear model extraction
		(for example).
	      </para>
            </callout>
            <callout arearefs="vd1-note-3-co" id="vd1-note-3">
              <para>The optional <sgmltag>isStdAIAA</sgmltag> sub-element indicates this signal is
              one of the predefined standard variables that most simulation facilities define in
              their equations of motion code. The <sgmltag>name</sgmltag> attribute should
              correspond to the standard AIAA parameter name from Annex A of <citation><link
              linkend="AIAA10">AIAA10</link></citation> or subsequent standards document</para>
            </callout>
            <callout arearefs="vd1-note-4-co" id="vd1-note-4">
              <para>
		The mandatory <sgmltag>units</sgmltag> attribute describes the units of measure of
		the variable. See <xref linkend="uofm"/> below for a recommended list of
		units-of-measure abbreviations.
	      </para>
            </callout>
            <callout arearefs="vd1-note-5-co" id="vd1-note-5">
              <para>The optional <sgmltag>sign</sgmltag> attribute describes the sign convention
                that applies to this variable. In this case, the lower-left body-flap is positive
                with trailing-edge-down deflection. See <xref linkend="signs"/> below for a
                recommended list of sign abbreviations.</para>
            </callout>
            <callout arearefs="vd1-note-6-co" id="vd1-note-6">
              <para>The optional <sgmltag>symbol</sgmltag> attribute allows a UNICODE character
                string that might be used for this variable in a symbols listing.</para>
            </callout>
          </calloutlist>
        </example>

        <example id="variableDef_example_2">
	  <?dbfo keep-together="auto"?>
          <title>A simple local variable definition example</title>

          <para> 
	    This DAVE-ML excerpt<indexterm><primary
	    sortas="variableDef">'variableDef'
	    element</primary><secondary>example of a local</secondary></indexterm> defines
	    <varname>CLBFLLO</varname> which is the dependent variable (output) from a table lookup
	    function (shown later in <xref linkend="function_example_1" xrefstyle="template:Example
	    %n"/>). It is subsequently used in the calculation of the lower-left body flap lift
	    coefficient (shown in <xref linkend="variableDef_example_3" xrefstyle="template:Example
	    %n"/>).
	  </para>

          <programlisting>
      &lt;!-- ================== --&gt;
      &lt;!--  Local variables   --&gt;
      &lt;!-- ================== --&gt;

&lt;!-- PRELIMINARY BUILDUP EQUATIONS --&gt;

&lt;!--  LOWER LEFT BODY FLAP CONTRIBUTIONS --&gt;

&lt;!--    table output signal   --&gt;
  &lt;variableDef name="CLdbfll_0" varID="CLBFLL0" units="nd"&gt;
    &lt;description&gt;
        Output of CLBFLL0 function; lift force contribution of
        lower left body flap deflection due to alpha^0 (constant
        term).
    &lt;/description&gt;
  &lt;/variableDef&gt;
          </programlisting>
        </example>

	<para>
	  Since this signal is not flagged as an input, control, disturbance or output, this
	  variable is an intermediate signal local to this model.
	</para>

        <example id="variableDef_example_3">
	  <?dbfo keep-together="auto"?>
          <title>
	    A more complete <sgmltag>variableDef</sgmltag> example with a
	    <sgmltag>calculation</sgmltag> element
	  </title>
          <para> 
	    In this example<indexterm><primary sortas="variableDef">'variableDef'
	    element</primary><secondary>example of calculated</secondary></indexterm>, the local
	    variable <varname>CLBFLL</varname> is defined as a calculated quantity, based on several
	    other input or local variables including the CLBFLL0 function output variable defined in
	    the previous <xref linkend="variableDef_example_2" xrefstyle="template:example"/>. Note
	    the <link linkend="description"><sgmltag>description</sgmltag></link> element is used to
	    describe the equation in Fortran-ish human-readable text.  The <link
	    linkend="calculation"><sgmltag>calculation</sgmltag></link> element describes this same
	    equation in MathML-2 content markup syntax; this portion should be used by parsing
	    applications to create either source code, documentation, or run-time calculation
	    structures.
	  </para>
          <programlisting>
&lt;!--    lower left body flap lift buildup --&gt;
  &lt;variableDef name="CLdbfll" varID="CLBFLL" units="nd"&gt;
    &lt;description&gt;
        Lift contribution of lower left body flap deflection
        CLdbfll = CLdbfll_0 + alpha*(CLdbfll_1 + alpha*(CLdbfll_2 
                            + alpha*CLdbfll_3)) <co id="vd3-note-1-co" linkends="vd3-note-1"/>
    &lt;/description&gt;
    &lt;calculation&gt;  <co id="vd3-note-2-co" linkends="vd3-note-2"/>
      &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
        &lt;apply&gt;  <co id="vd3-note-3-co" linkends="vd3-note-3"/>
        &lt;plus/&gt;
          &lt;ci&gt;CLBFLL0&lt;/ci&gt;  <co id="vd3-note-6-co" linkends="vd3-note6"/>
          &lt;apply&gt;
            &lt;times/&gt;
            &lt;ci&gt;ALP&lt;/ci&gt;
            &lt;apply&gt;
              &lt;plus/&gt;
              &lt;ci&gt;CLBFLL1&lt;/ci&gt;
              &lt;apply&gt;
                &lt;times/&gt;
                &lt;ci&gt;ALP&lt;/ci&gt;
                &lt;apply&gt;
                  &lt;plus/&gt;
                  &lt;ci&gt;CLBFLL2&lt;/ci&gt;
                  &lt;apply&gt; <co id="vd3-note-4-co" linkends="vd3-note-4"/>
                    &lt;times/&gt;
                    &lt;ci&gt;ALP&lt;/ci&gt;
                    &lt;ci&gt;CLBFLL3&lt;/ci&gt;
                  &lt;/apply&gt; &lt;!--            a*c3   --&gt;  <co id="vd3-note-5-co" linkends="vd3-note-5"/>
                &lt;/apply&gt; &lt;!--        (c2 + a*c3)  --&gt;
              &lt;/apply&gt; &lt;!--        a*(c2 + a*c3)  --&gt;
            &lt;/apply&gt; &lt;!--    (c1 + a*(c2 + a*c3)) --&gt;
          &lt;/apply&gt; &lt;!--    a*(c1 + a*(c2 + a*c3)) --&gt;
        &lt;/apply&gt; &lt;!-- c0 + a*(c1 + a*(c2 + a*c3)) --&gt;
      &lt;/math&gt;
    &lt;/calculation&gt;
  &lt;/variableDef&gt;
          </programlisting>

          <calloutlist>
            <callout arearefs="vd3-note-1-co" id="vd3-note-1">
              <para>This Fortran-ish equation, located in the <sgmltag>description</sgmltag>
                element, is provided in this example for the benefit of human readers; it should not
                parsed by the processing application.</para>
            </callout>
            <callout arearefs="vd3-note-2-co" id="vd3-note-2">
              <para>A <sgmltag>calculation</sgmltag> element always embeds a MathML-2
                  <sgmltag>math</sgmltag> element; note the definition of the MathML-2
                namespace.</para>
            </callout>
            <callout arearefs="vd3-note-3-co" id="vd3-note-3">
              <para>Each <sgmltag>apply</sgmltag> tag pair surrounds a math operation (in this
                example, a <sgmltag>plus</sgmltag> operator) and the arguments to that operation
                (in this case, a variable <varname>CLBFLL</varname> defined elsewhere is added to
                the results of the nested <sgmltag>apply</sgmltag> operation).</para>
            </callout>
            <callout arearefs="vd3-note-6-co" id="vd3-note-6">
              <para>
		The content identifier (<sgmltag>ci</sgmltag>) MathML-2 element gives the
		<sgmltag>varID</sgmltag> of the previously defined variables used in this equation;
		this variable represents the output of the <sgmltag>CLBFLL0</sgmltag> function found
		in <xref linkend="function_example_1" xrefstyle="template:Example %n"/> that is
		captured in the <sgmltag>CLBFLL0</sgmltag> variable defined in <xref
		linkend="variableDef_example_2" xrefstyle="template:Example %n"/>. The other
		<sgmltag>ci</sgmltag> elements are not defined in this manual but are defined in the
		full model.
	      </para>
            </callout>
            <callout arearefs="vd3-note-4-co" id="vd3-note-4">
              <para>Inner-most <sgmltag>apply</sgmltag> multiplies variables <varname>ALP</varname> and
                  <varname>CLBFLL3</varname>.</para>
            </callout>
            <callout arearefs="vd3-note-5-co" id="vd3-note-5">
              <para>The comments here are useful for humans to understand how the equation is being
                built up; the processing application ignores all comments.</para>
            </callout>
          </calloutlist>

        </example>

        <example id="variableDef_example_4">
	  <?dbfo keep-together="auto"?>
          <title>Another example of an output variable based on a <sgmltag>calculation</sgmltag> element</title>
          <para>
	    This excerpt<indexterm><primary sortas="variableDef">'variableDef'
	    element</primary><secondary>example of calculated</secondary></indexterm> is an example
	    of how an output variable (<varname>CL</varname>) might be defined from previously
	    calculated local variables (in this case, <varname>CL0</varname>,
	    <varname>CLBFL</varname>, etc.). 
	  </para>
          <programlisting>

      &lt;!-- ================== --&gt;
      &lt;!--  Output variables  --&gt;
      &lt;!-- ================== --&gt;

  &lt;variableDef name="CL" varID="CL" units="nd" sign="+UP" symbol="CL"&gt;
    &lt;description&gt;
        Coefficient of lift
        CL = CL0 + CLBFUL + CLBFUR + CLBFLL + CLBFLR + 
                   CLWFL + CLWFR + CLRUD + CLGE + CLLG
    &lt;/description&gt;
    &lt;calculation&gt;
      &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
        &lt;apply&gt; <co id="vd4-note-1-co" linkends="vd4-note-1"/>
          &lt;plus/&gt;
          &lt;ci&gt;CL0&lt;/ci&gt;
          &lt;ci&gt;CLBFUL&lt;/ci&gt;
          &lt;ci&gt;CLBFUR&lt;/ci&gt;
          &lt;ci&gt;CLBFLL&lt;/ci&gt; <co id="vd4-note-2-co" linkends="vd4-note-2"/>
          &lt;ci&gt;CLBFLR&lt;/ci&gt;
          &lt;ci&gt;CLWFL&lt;/ci&gt;
          &lt;ci&gt;CLWFR&lt;/ci&gt;
          &lt;ci&gt;CLRUD&lt;/ci&gt;
          &lt;ci&gt;CLGE&lt;/ci&gt;
          &lt;ci&gt;CLLG&lt;/ci&gt;
        &lt;/apply&gt;
      &lt;/math&gt;
    &lt;/calculation&gt;
    &lt;isOutput/&gt; <co id="vd4-note-3-co" linkends="vd4-note-3"/>
  &lt;/variableDef&gt;
          </programlisting>
          <calloutlist>
            <callout arearefs="vd4-note-1-co" id="vd4-note-1">
              <para> Here <sgmltag>apply</sgmltag> simply sums the value of these
                variables, referenced by their <sgmltag>varID</sgmltag>s. </para>
            </callout>
            <callout arearefs="vd4-note-2-co" id="vd4-note-2">
              <para>
		This <sgmltag>ci</sgmltag> element refers to the lower left body flag lift
		contribution calculated in the previous <xref linkend="variableDef_example_3"
		xrefstyle="template:example"/>.
	      </para>
            </callout>
            <callout arearefs="vd4-note-3-co" id="vd4-note-3">
              <para>The <sgmltag>isOutput</sgmltag> element signifies to the processing application
                that this variable should be made visible to models external to this
                <sgmltag>DAVEfunc</sgmltag>.</para>
            </callout>
          </calloutlist>
        </example>

        <example id="variableDef_example_5">
	  <?dbfo keep-together="auto"?>
          <title>An intermediate variable with a <sgmltag>calculation</sgmltag> element that uses a
            DAVE-ML function extension to the default MathML-2 function set</title>
          <para>
	    In this excerpt<indexterm><primary sortas="variableDef">'variableDef'
	    element</primary><secondary>example with extension to MathML-2</secondary></indexterm>,
	    we demonstrate a means to encode a math function, <emphasis>atan2</emphasis>, that is
	    not available in the default MathML-2 function set. The <emphasis>atan2</emphasis>
	    function is used often in C, C++, Java and other modeling languages and has been added
	    to the DAVE-ML standard by use of the MathML-2 <sgmltag>csymbol</sgmltag> element,
	    specifically provided to allow extension of MathML-2 for cases such as this.
	  </para>

          <programlisting>

      &lt;!-- ================== --&gt;
      &lt;!--    ATAN2 example   --&gt; <co id="vd5-note-1-co" linkends="vd5-note-1"/>
      &lt;!-- ================== --&gt;

  &lt;variableDef name="Wind vector roll angle" varID="PHI" units="rad"&gt;
    &lt;description&gt;
      This encodes the equation PHI = atan2( tan(BETA), sin(ALPHA) ) where atan2
      is the two-argument arc tangent function from the ANSI C standard math
      library.
    &lt;/description&gt;
    &lt;calculation&gt;
      &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
        &lt;apply&gt;
          &lt;csymbol definitionURL="http://daveml.org/function_spaces.html#atan2"
                   encoding="text"&gt;  <co id="vd5-note-2-co" linkends="vd5-note-2"/>
            atan2
          &lt;/csymbol&gt;
          &lt;apply&gt;
            &lt;tan/&gt;
            &lt;ci&gt;BETA&lt;/ci&gt;   <co id="vd5-note-3-co" linkends="vd5-note-3"/>
          &lt;/apply&gt;
          &lt;apply&gt;
            &lt;sin/&gt;
            &lt;ci&gt;ALPHA&lt;/ci&gt;  <co id="vd5-note-4-co" linkends="vd5-note-4"/>
          &lt;/apply&gt;
        &lt;/apply&gt; 
      &lt;/math&gt;
    &lt;/calculation&gt;

  &lt;/variableDef&gt;
          </programlisting>
          <calloutlist>
            <callout arearefs="vd5-note-1-co" id="vd5-note-1">
              <para> This excerpt shows how to calculate wind roll angle, phi, from angle-of-attack
              and angle-of-sideslip; it comes from the Apollo
              <indexterm><primary>Apollo</primary></indexterm>aerodynamics data book <citation><link
              linkend="NAA64">NAA64</link></citation>.
	      </para>
            </callout>
            <callout arearefs="vd5-note-2-co" id="vd5-note-2">
              <para> 
		The <sgmltag>csymbol</sgmltag> element is provided by MathML-2 as a means to extend
		the function set of MathML-2. An extension for <emphasis>atan2</emphasis> is the
		only function defined at present but others may be added to the set in the future.
		Note the specific URI that uniquely identifies this function; it is also the URL
		(web address) of the documentation of the interpretation of the
		<emphasis>atan2</emphasis> function.
	      </para>
            </callout>
            <callout arearefs="vd5-note-3-co" id="vd5-note-3">
              <para> BETA is the <sgmltag>varID</sgmltag> of a previously defined variable. </para>
            </callout>
            <callout arearefs="vd5-note-4-co" id="vd5-note-4">
              <para> ALPHA is the <sgmltag>varID</sgmltag> of a previously defined variable. </para>
            </callout>
          </calloutlist>
        </example>

      </sect3>

      <sect3 id="breakpointDef_overview">
        <title>The breakpoint set definition element</title>
        <titleabbrev><sgmltag>breakpointDef</sgmltag> overview</titleabbrev>

        <para>
	  The breakpoint set definition element, <link
	  linkend="breakpointDef"><sgmltag>breakpointDef</sgmltag></link>, is used to define a list
	  of comma- or white space-separated values that define the coordinate values along one axis
	  of a gridded linear function value table. It contains a mandatory <sgmltag>bpID</sgmltag>
	  attribute, an optional <sgmltag>name</sgmltag> and units-of-measure attributes, an
	  optional text <sgmltag>description</sgmltag> element, and the comma- or
	  white space-separated list of floating-point values in the <sgmltag>bpVals</sgmltag>
	  element. This list must be monotonically increasing in value.
	  <indexterm>
	    <primary sortas="breakpointDef">'breakpointDef' element</primary>
	    <secondary>overview</secondary>
	  </indexterm>
	</para>

        <programlisting>
    <link linkend="breakpointDef">breakpointDef</link> : bpID, [name, units]
        <link linkend="description">description</link>? :
        <link linkend="bpVals">bpVals</link> :
            {character data of comma- or white space-separated breakpoints}
        </programlisting>

        <variablelist>
          <title><link linkend="breakpointDef">
              <sgmltag>breakpointDef</sgmltag>
            </link> attributes:</title>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="bpID">'bpID' attribute</primary>
		<secondary>of 'breakpointDef' element</secondary>
	      </indexterm>
              <sgmltag>bpID</sgmltag>
            </term>
            <listitem>
              <para>An internal reference that is unique within the file.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="name">'name' attribute</primary>
		<secondary>of 'breakpointDef' element</secondary>
	      </indexterm>
              <sgmltag>name</sgmltag>
            </term>
            <listitem>
              <para>A UNICODE name for the set (may be the same string as
                <sgmltag>bpID</sgmltag>).</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="units">'units' attribute</primary>
		<secondary>of 'breakpointDef' element</secondary>
	      </indexterm>
              <sgmltag>units</sgmltag>
            </term>
            <listitem>
              <para> The units-of-measure for the breakpoint values. See <xref linkend="uofm"/>
                below. </para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <title><link linkend="breakpointDef">
              <sgmltag>breakpointDef</sgmltag>
            </link> sub-elements:</title>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="description">'description' element</primary>
	      </indexterm>
              <link linkend="description">
                <sgmltag>description</sgmltag>
              </link>
            </term>
            <listitem>
              <para>An optional text description of the breakpoint set.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="bpVals">'bpVals' element</primary>
		<secondary>as child of 'breakpointDef' element</secondary>
	      </indexterm>
              <link linkend="bpVals">
                <sgmltag>bpVals</sgmltag>
              </link>
            </term>
            <listitem>
              <para>
		A comma- or white space-separated, monotonically increasing list of floating-point
		values.
	      </para>
            </listitem>
          </varlistentry>
        </variablelist>

        <example id="breakpointDef_example">
	  <?dbfo keep-together="auto"?>
          <title>Two <sgmltag>breakpointDef</sgmltag> examples in a DAVE-ML model excerpt</title>
          <para> 
	    As an example, two breakpoint sets are defined<indexterm><primary
	    sortas="breakpointDef">'breakpointDef'
	    element</primary><secondary>example of</secondary></indexterm> which are used in the
	    <link linkend="function"><sgmltag>function</sgmltag></link> element given below (<xref
	    linkend="function_example_1"/>). Breakpoint sets <varname>XMACH1_PTS</varname> and
	    <varname>DBFL_PTS</varname> contain values for Mach and lower body flap deflection,
	    respectively, which are used to look up function values in several gridded function
	    tables. One example is given below in <xref linkend="griddedTableDef_example"/>.
	  </para>
          <programlisting>
&lt;!--                          =====================                          --&gt;
&lt;!-- =========================   BREAKPOINT SETS   ========================= --&gt;
&lt;!--                          =====================                          --&gt;


  &lt;<link linkend="breakpointDef">breakpointDef</link> name="mach" bpID="XMACH1_PTS" units="nd"&gt;  <co id="bpd-note-1-co" linkends="bpd-note-1"/>
    &lt;<link linkend="description">description</link>&gt;
      Mach number breakpoints for all aero data tables
    &lt;/description&gt;
    &lt;<link linkend="bpVals">bpVals</link>&gt;
        0.3, 0.6, 0.8, 0.9, 0.95, 1.1, 1.2, 1.6, 2.0, 2.5, 3.0, 3.5, 4.0   <co id="bpd-note-2-co" linkends="bpd-note-2"/>
    &lt;/bpVals&gt;
  &lt;/breakpointDef&gt;

  &lt;<link linkend="breakpointDef">breakpointDef</link> name="Lower body flap" bpID="DBFL_PTS" units="deg"&gt;    <co id="bpd-note-3-co" linkends="bpd-note-3"/>
    &lt;<link linkend="description">description</link>&gt;Lower body flap deflections breakpoints for tables&lt;/description&gt;
    &lt;<link linkend="bpVals">bpVals</link>&gt;0., 15., 30., 45., 60.&lt;/bpVals&gt;
  &lt;/breakpointDef&gt;

          </programlisting>
          <calloutlist>
            <callout arearefs="bpd-note-1-co" id="bpd-note-1">
              <para>This <sgmltag>breakpointDef</sgmltag> element describes a Mach breakpoint set
                uniquely identified as <varname>XMACH1_PTS</varname> with no associated units of
                measure.</para>
            </callout>
            <callout arearefs="bpd-note-2-co" id="bpd-note-2">
              <para>The breakpoint values are given as a comma- or white space-separated list and
              must be in monotonically increasing numerical order.</para>
            </callout>
            <callout arearefs="bpd-note-3-co" id="bpd-note-3">
              <para>
		This breakpoint set defines the breakpoints for lower body flap deflection.
	      </para>
            </callout>
          </calloutlist>
        </example>
      </sect3>

      <sect3 id="griddedTableDef_overview">
        <title>The gridded table definition element</title>
        <titleabbrev><sgmltag>griddedTableDef</sgmltag> overview</titleabbrev>

        <para> 
	  The <link linkend="griddedTableDef"><sgmltag>griddedTableDef</sgmltag></link> element
	  defines a multi-dimensional table of values corresponding with the value of an arbitrary
	  function at each intersection of a set of specified independent input values. The
	  coordinates along each dimension are defined in separate <link
	  linkend="breakpointDef"><sgmltag>breakpointDef</sgmltag></link> elements that are
	  referenced within this element by <link linkend="bpRef"><sgmltag>bpRef</sgmltag></link>s,
	  one for each dimension.
	  <indexterm>
	    <primary sortas="griddedTableDef">'griddedTableDef' element</primary>
	    <secondary>overview</secondary>
	  </indexterm>
	</para>

        <para> 
	  The data contained within the data table definition are a comma- or white space-separated
	  set of floating-point values. This list of values represents a multi-dimensional array
	  whose size is inferred from the length of each breakpoint vector. For example, a 2D table
	  that is a function of an eight-element Mach breakpoint set and a ten-element
	  angle-of-attack breakpoint set is expected to contain 80 (8 x 10) comma- or
	  white space-separated values.
	</para>

        <para> By convention, the <link linkend="breakpointRefs">
            <sgmltag>breakpointRefs</sgmltag>
          </link> are listed in order such that the last breakpoint set varies most rapidly in the
          associated data table listing. See <xref linkend="point_order"/> below. </para>

        <para> An optional <link linkend="uncertainty">
            <sgmltag>uncertainty</sgmltag>
          </link> element may be provided that represents the statistical variation in the values
          presented. See <xref linkend="statistics" xrefstyle="template:Section %n"/> for more
          information about this element. </para>

        <programlisting>
    <link linkend="griddedTableDef">griddedTableDef</link> : [name, gtID, units]
        <link linkend="description">description</link>?
          {description of table in character data}
        EITHER
            <link linkend="provenanceRef">provenanceRef</link>? : provID
        OR
            <link linkend="provenance">provenance</link>? : [provID]
                <link linkend="author">author</link>+ : name, org, [email]
                    <link linkend="contactInfo">contactInfo</link>* : [contactInfoType, contactLocation]
                        {text describing contact information}
                <link linkend="creationDate">creationDate</link> : date {in YYYY-MM-DD format}
                <link linkend="documentRef">documentRef</link>* : [docID,] refID
                <link linkend="modificationRef">modificationRef</link>* : modID
                <link linkend="description">description</link>?
        <link linkend="breakpointRefs">breakpointRefs</link> :
            <link linkend="bpRef">bpRef</link>+ : bpID
        <link linkend="uncertainty">uncertainty</link>? : effect
            (<link linkend="normalPDF">normalPDF</link> : numSigmas | <link linkend="uniformPDF">uniformPDF</link>)
        <link linkend="dataTable">dataTable</link>
            {character data of comma- or white space-separated table values}

        </programlisting>

        <variablelist>
          <title><link linkend="griddedTableDef">
              <sgmltag>griddedTableDef</sgmltag>
            </link> attributes:</title>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="gtID">'gtID' attribute</primary>
		<secondary>of 'griddedTableDef' element</secondary>
	      </indexterm>
              <sgmltag>gtID</sgmltag>
            </term>
            <listitem>
              <para>An internal reference that is unique within the file.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="name">'name' attribute</primary>
		<secondary>of 'griddedTableDef' element</secondary>
	      </indexterm>
              <sgmltag>name</sgmltag>
            </term>
            <listitem>
              <para>A UNICODE name for the table (may be the same string as
                <sgmltag>gtID</sgmltag>).</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="units">'units' attribute</primary>
		<secondary>of 'griddedTableDef' element</secondary>
	      </indexterm>
              <sgmltag>units</sgmltag>
            </term>
            <listitem>
              <para> The units-of-measure of the table's output signal. See <xref linkend="uofm"/>
                below. </para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <title><link linkend="griddedTableDef">
              <sgmltag>griddedTableDef</sgmltag>
            </link> sub-elements:</title>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="description">'description' element</primary>
		<secondary>as child of 'griddedTableDef' element</secondary>
	      </indexterm>
              <link linkend="description">
                <sgmltag>description</sgmltag>
              </link>
            </term>
            <listitem>
              <para>The optional <link linkend="description">description</link> element allows the
                author to describe the data contained within this
                <sgmltag>griddedTable</sgmltag>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="provenance">'provenance' element</primary>
		<secondary>as child of 'griddedTableDef' element</secondary>
	      </indexterm>
              <link linkend="provenance">
                <sgmltag>provenance</sgmltag>
              </link>
            </term>
            <listitem>
              <para>The optional <link linkend="provenance">provenance</link> element allows the
                author to describe the source and history of the data within this
                  <sgmltag>griddedTable</sgmltag>. Alternatively, a <link linkend="provenanceRef">
                  <sgmltag>provenanceRef</sgmltag>
                </link> reference can be made to a previously defined
                <sgmltag>provenance</sgmltag>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="breakpointRefs">'breakpointRefs' element</primary>
		<secondary>as child of 'griddedTableDef' element</secondary>
	      </indexterm>
              <link linkend="breakpointRefs">
                <sgmltag>breakpointRefs</sgmltag>
              </link>
            </term>
            <listitem>
              <para> The mandatory <link linkend="breakpointRefs">
                  <sgmltag>breakpointRefs</sgmltag></link> element contains separate <link
                  linkend="bpRef"><sgmltag>bpRef</sgmltag></link> elements, each pointing to a
                  separately defined <link
                  linkend="breakpointDef"><sgmltag>breakpointDef</sgmltag></link>. Thus, the
                  independent coordinates associated with this function table are defined elsewhere
                  and only a reference is given here. The order of appearance of the <link
                  linkend="bpRef"><sgmltag>bpRef</sgmltag></link>s is important; see the text
                  above. </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="uncertainty">'uncertainty' element</primary>
		<secondary>as child of 'griddedTableDef' element</secondary>
	      </indexterm>
              <link linkend="uncertainty">
                <sgmltag>uncertainty</sgmltag>
              </link>
            </term>
            <listitem>
              <para> 
		This optional element, if present, describes the uncertainty of this parameter.  See
		<xref linkend="statistics" xrefstyle="template:Section %n"/> for more information
		about this element.
	      </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="dataTable">'dataTable' element</primary>
		<secondary>as child of 'griddedTableDef' element</secondary>
	      </indexterm>
              <link linkend="dataTable">
                <sgmltag>dataTable</sgmltag>
              </link>
            </term>
            <listitem>
              <para>
		The numeric values of the function at the function vertices specified by the
		breakpoint sets are contained within this element, in a single comma- or
		white space-separated list, representing an unraveled multi-dimensional table.
		Parsing this list and storing it in the appropriate array representation is up to
		the implementer. By convention, the last breakpoint value increases most rapidly.
	      </para>
            </listitem>
          </varlistentry>

        </variablelist>

        <example id="griddedTableDef_example">
	  <?dbfo keep-together="auto"?>
          <title>
	    An excerpt showing an example of a <sgmltag>griddedTableDef</sgmltag> element
	  </title>

          <para> 
	    This nonlinear function table<indexterm><primary
	    sortas="griddedTableDef">'griddedTableDef'
	    element</primary><secondary>example of</secondary></indexterm> is used by a subsequent
	    <sgmltag>function</sgmltag> in <xref linkend="function_example_1"
	    xrefstyle="template:Example %n"/> to specify an output value based on two input values:
	    body flap deflection and Mach number. This table is defined outside of a <link
	    linkend="function"><sgmltag>function</sgmltag></link> element because this particular
	    function table is used by two functions: one for the left-lower body flap and one for
	    the lower-right body flap; thus, their actual independent (input) variable values might
	    be different.
	  </para>

          <programlisting>
        &lt;!-- ==================================== --&gt;     <co id="gtd-note-1-co" linkends="gtd-note-1"/>
        &lt;!-- Lower Body Flap Tables (definitions) --&gt;
        &lt;!-- ==================================== --&gt;

  &lt;griddedTableDef name="CLBFL0" gtID="CLBFL0_table"&gt;     <co id="gtd-note-2-co" linkends="gtd-note-2"/>
    &lt;<link linkend="description">description</link>&gt;      <co id="gtd-note-3-co" linkends="gtd-note-3"/>
        Lower body flap contribution to lift coefficient,
        polynomial constant term
    &lt;/description&gt;
    &lt;<link linkend="provenance">provenance</link>&gt;        <co id="gtd-note-4-co" linkends="gtd-note-4"/>
      &lt;<link linkend="author">author</link> name="Bruce Jackson" org="NASA Langley Research Center" email="e.b.jackson@larc.nasa.gov"/&gt;
      &lt;<link linkend="creationDate">creationDate</link> date="2003-01-31"/&gt;
      &lt;<link linkend="documentRef">documentRef</link> docID="REF01"/&gt;
    &lt;/provenance&gt;
    &lt;<link linkend="breakpointRefs">breakpointRefs</link>&gt; <co id="gtd-note-5-co" linkends="gtd-note-5"/>
      &lt;<link linkend="bpRef">bpRef</link> bpID="DBFL_PTS"/&gt;
      &lt;<link linkend="bpRef">bpRef</link> bpID="XMACH1_PTS"/&gt;
    &lt;/breakpointRefs&gt;
    &lt;<link linkend="dataTable">dataTable</link>&gt; &lt;!-- last breakpoint (XMACH) changes most rapidly --&gt; <co id="gtd-note-6-co" linkends="gtd-note-6"/>
&lt;!-- CLBFL0 POINTS  --&gt;
&lt;!-- DBFL =        0.0       --&gt;
 0.00000E+00 , 0.00000E+00 , 0.00000E+00 , 0.00000E+00 , 0.00000E+00 ,
 0.00000E+00 , 0.00000E+00 , 0.00000E+00 , 0.00000E+00 , 0.00000E+00 ,
 0.00000E+00 , 0.00000E+00 , 0.00000E+00 ,
&lt;!-- DBFL =       15.0       --&gt; <co id="gtd-note-7-co" linkends="gtd-note-7"/>
-0.86429E-02 ,-0.10256E-01 ,-0.11189E-01 ,-0.12121E-01 ,-0.13520E-01 ,
-0.86299E-02 ,-0.53679E-02 , 0.76757E-02 , 0.11300E-01 , 0.62992E-02 ,
 0.51902E-02 , 0.38813E-02 , 0.37366E-02 ,
&lt;!-- DBFL =       30.0       --&gt;
 0.22251E-01 , 0.26405E-01 , 0.28805E-01 , 0.31206E-01 , 0.34806E-01 ,
 0.31321E-01 , 0.28996E-01 , 0.19698E-01 , 0.18808E-01 , 0.12755E-01 ,
 0.10804E-01 , 0.98493E-02 , 0.83719E-02 ,
&lt;!-- DBFL =       45.0       --&gt;
   .
   . [other points in table]
   .
    &lt;/dataTable&gt;
  &lt;/griddedTableDef&gt;
          </programlisting>

          <calloutlist>
            <callout arearefs="gtd-note-1-co" id="gtd-note-1">
              <para>Comments are good practice for human readers</para>
            </callout>
            <callout arearefs="gtd-note-2-co" id="gtd-note-2">
              <para>
                <sgmltag>name</sgmltag> is used for documentation purposes; <sgmltag>gtID</sgmltag>
                is intended for automatic wiring (autocode) tools. </para>
            </callout>
            <callout arearefs="gtd-note-3-co" id="gtd-note-3">
              <para>
		Descriptions make for good practice whenever possible. Here we explain the contents
		of the function represented by the data points.
	      </para>
            </callout>
            <callout arearefs="gtd-note-4-co" id="gtd-note-4">
              <para><sgmltag>provenance</sgmltag> is the story of the origin of the data.</para>
            </callout>
            <callout arearefs="gtd-note-5-co" id="gtd-note-5">
              <para> These <sgmltag>bpRef</sgmltag>s are in the same order as the table is wrapped
                (see text above) and must be reflected in the referencing function in the same
                order. In this excerpt, the referencing function must list the
                  <sgmltag>independentVarRefs</sgmltag> such that the signal that represents delta
                body flap (<varname>DBFL</varname>) must precede the reference to the signal that
                represents Mach number (<varname>XMACH</varname>). </para>
            </callout>
            <callout arearefs="gtd-note-6-co" id="gtd-note-6">
              <para>The points listed within the <sgmltag>dataTable</sgmltag> element are given as
                if the last <sgmltag>bpRef</sgmltag> varies most rapidly. See the discussion
                above.</para>
            </callout>
            <callout arearefs="gtd-note-7-co" id="gtd-note-7">
              <para>Embedded comments are a good practice.</para>
            </callout>
          </calloutlist>
        </example>
      </sect3>

      <sect3 id="ungriddedTableDef_overview">
        <title>The ungridded table definition element</title>
        <titleabbrev><sgmltag>ungriddedTableDef</sgmltag> overview</titleabbrev>

        <para> 
	  The <link linkend="ungriddedTableDef"><sgmltag>ungriddedTableDef</sgmltag></link> element
	  defines a set of non-orthogonal data points, along with their independent values
	  (coordinates), corresponding with the dependent value of an arbitrary function.
	  <indexterm>
	    <primary sortas="ungriddedTableDef">'ungriddedTableDef' element</primary>
	    <secondary>overview</secondary>
	  </indexterm>
	</para>
        <para> A 'non-orthogonal' data set, as opposed to a gridded or 'orthogonal' data set, means
          that the independent values are not laid out in an orthogonal grid. This form must be used
          if the dependent coordinates in any table dimension cannot be expressed by a single
          monotonically increasing vector. </para>
        <para> See the excerpts below for two instances of ungridded data. </para>
        <para> An optional <link linkend="uncertainty">
            <sgmltag>uncertainty</sgmltag>
          </link> element may be provided that represents the statistical variation in the values
          presented. See the section on <link linkend="statistics">Statistics</link> below for more
          information about this element. </para>

        <programlisting>
    <link linkend="ungriddedTableDef">ungriddedTableDef</link> : [utID, name, units]
        <link linkend="description">description</link>? :
            {description character data}
        EITHER
            <link linkend="provenanceRef">provenanceRef</link>? : provID
        OR
            <link linkend="provenance">provenance</link>? : [provID]
                <link linkend="author">author</link>+ : name, org, [email]
                    <link linkend="contactInfo">contactInfo</link>* : [contactInfoType, contactLocation]
                        {text describing contact information}
                <link linkend="creationDate">creationDate</link> : date {in YYYY-MM-DD format}
                <link linkend="documentRef">documentRef</link>* : [docID,] refID
                <link linkend="modificationRef">modificationRef</link>* : modID
                <link linkend="description">description</link>?
        <link linkend="uncertainty">uncertainty</link>? : effect
            (<link linkend="normalPDF">normalPDF</link> : numSigmas) | (<link linkend="uniformPDF">uniformPDF</link> : bounds+)
        <link linkend="dataPoint">dataPoint</link>+ :
            {coordinate/value sets as character data}
        </programlisting>

        <variablelist>
          <title><link linkend="ungriddedTableDef">
              <sgmltag>ungriddedTableDef</sgmltag>
            </link> attributes:</title>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="utID">'utID' attribute</primary>
		<secondary>of 'ungriddedTableDef' element</secondary>
	      </indexterm>
              <sgmltag>utID</sgmltag>
            </term>
            <listitem>
              <para>An internal reference that is unique within the file</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="name">'name' attribute</primary>
		<secondary>of 'ungriddedTableDef' element</secondary>
	      </indexterm>
              <sgmltag>name</sgmltag>
            </term>
            <listitem>
              <para>An optional UNICODE name for the table (may be the same string as
                  <sgmltag>utID</sgmltag>).</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="units">'units' attribute</primary>
		<secondary>of 'ungriddedTableDef' element</secondary>
	      </indexterm>
              <sgmltag>units</sgmltag>
            </term>
            <listitem>
              <para>Optional units-of-measure for the table's output signal.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <title><link linkend="ungriddedTableDef">
              <sgmltag>ungriddedTableDef</sgmltag>
            </link> sub-elements:</title>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="description">'description' element</primary>
		<secondary>as child of 'ungriddedTableDef' element</secondary>
	      </indexterm>
              <link linkend="description">
                <sgmltag>description</sgmltag>
              </link>
            </term>
            <listitem>
              <para>The optional <link linkend="description">description</link> element allows the
                author to describe the data contained within this
                <sgmltag>ungriddedTable</sgmltag>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="provenance">'provenance' element</primary>
		<secondary>as child of 'ungriddedTableDef' element</secondary>
	      </indexterm>
              <link linkend="provenance">
                <sgmltag>provenance</sgmltag>
              </link>
            </term>
            <listitem>
              <para>The optional <link linkend="provenance">provenance</link> element allows the
                author to describe the source and history of the data within this
                  <sgmltag>ungriddedTable</sgmltag>. Alternatively, a <link linkend="provenanceRef">
                  <sgmltag>provenanceRef</sgmltag>
                </link> reference can be made to a previously defined provenance.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="uncertainty">'uncertainty' element</primary>
		<secondary>as child of 'ungriddedTableDef' element</secondary>
	      </indexterm>
              <link linkend="uncertainty">
                <sgmltag>uncertainty</sgmltag>
              </link>
            </term>
            <listitem>
              <para> This optional element, if present, describes the uncertainty of this parameter.
                See the section on <link linkend="statistics">Statistics</link> below for more
                information about this element. </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="dataPoint">'dataPoint' element</primary>
		<secondary>as child of 'ungriddedTableDef' element</secondary>
	      </indexterm>
              <link linkend="dataPoint">
                <sgmltag>dataPoint</sgmltag>
              </link>
            </term>
            <listitem>
              <para>One or more sets of coordinate and output numeric values of the function at
                various locations within its input space. This element includes one coordinate for
                each function input variable. Parsing this information into a usable interpolative
                function is up to the implementer. By convention, the coordinates are listed in the
                same order that they appear in the parent function.</para>
            </listitem>
          </varlistentry>

        </variablelist>

        <example id="twoD_ungriddedTableDef_example">
	  <?dbfo keep-together="auto"?>
          <title> 
	    An excerpt showing an <sgmltag>ungriddedTableDef</sgmltag> element, encoding the data
	    depicted in <xref linkend="twoD_ungriddedTable_figure" xrefstyle="template:Figure %n"/>.
	  </title>
          <para> 
	    This 2D function table is an example<indexterm><primary
	    sortas="ungriddedTableDef">'ungriddedTableDef'
	    element</primary><secondary>example of</secondary></indexterm> provided by Dr. Peter
	    Grant of the University of Toronto. Such a table definition would be used in a
	    subsequent <sgmltag>function</sgmltag> to describe how an output variable would be
	    defined based on two independent input variables. The function table does not indicate
	    which input and output variables are represented; this information is supplied by the
	    <sgmltag>function</sgmltag> element later so that a single function table can be reused
	    by multiple functions.
	  </para>

          <programlisting>

 &lt;ungriddedTableDef name="CLBASIC as function of flap angle and angle-of-
        attack" utID="CLBAlfaFlap_Table" units="nd"&gt;
   &lt;description&gt;
     CL basic as a function of flap angle and angle-of-attack. Note the alpha 
     used in this table is with respect to the wing design plane (in degrees). 
     Flap is in degrees as well.
   &lt;/description&gt;

   &lt;provenance&gt;
     &lt;author name="Peter Grant" org="UTIAS"/&gt;  <co id="ug2dtd-note-1-co" linkends="ug2dtd-note-1"/>
     &lt;creationDate date="2006-11-01"/&gt;
     &lt;documentRef refID="PRG1" /&gt;
   &lt;/provenance&gt;

   &lt;!--For ungridded tables you provide a list of dataPoints--&gt; <co id="ug2dtd-note-2-co" linkends="ug2dtd-note-2"/>
        &lt;dataPoint&gt; 1.0 -5.00  -0.44 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;   <co id="ug2dtd-note-3-co" linkends="ug2dtd-note-3"/>
        &lt;dataPoint&gt; 1.0  10.00  0.95 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 1.0  12.00  1.12 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 1.0  14.00  1.26 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 1.0  15.00  1.32 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 1.0  17.00  1.41 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 5.0 -5.00  -0.55 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 5.0  0.00  -0.03 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 5.0  5.00   0.50 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 5.0  10.00  1.02 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 5.0  12.00  1.23 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 5.0  14.00  1.44 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 5.0  16.00  1.63 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 5.0  17.00  1.70 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 5.0  18.00  1.75 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint modID='A'&gt; 10.0 -5.00 -0.40 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt; <co id="ug2dtd-note-4-co" linkends="ug2dtd-note-4"/>
        &lt;dataPoint&gt; 10.0 14.00  1.57 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 10.0 15.00  1.66 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 10.0 16.00  1.75 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 10.0 17.00  1.80 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        &lt;dataPoint&gt; 10.0 18.00  1.84 &lt;!-- flap, alfawdp, CLB--&gt;&lt;/dataPoint&gt;
        
&lt;/ungriddedTableDef&gt;
          </programlisting>

          <calloutlist>
            <callout arearefs="ug2dtd-note-1-co" id="ug2dtd-note-1">
              <para>Example courtesy of Dr. Peter Grant, U. Toronto</para>
            </callout>
            <callout arearefs="ug2dtd-note-2-co" id="ug2dtd-note-2">
              <para>Comments are a good idea for human readers</para>
            </callout>
            <callout arearefs="ug2dtd-note-3-co" id="ug2dtd-note-3">
              <para> 
		For a 2D table such as this one, data points give two columns of independent
		breakpoint values and a third column of function values at those breakpoints.
	      </para>
            </callout>
            <callout arearefs="ug2dtd-note-4-co" id="ug2dtd-note-4">
              <para> The <sgmltag>modID</sgmltag> attribute implies this point was edited during
                modification 'A' of this model, as described in the file header information. </para>
            </callout>
          </calloutlist>
        </example>

        <figure id="twoD_ungriddedTable_figure">
          <title> The 2D lift function given in <xref
              linkend="twoD_ungriddedTableDef_example" xrefstyle="template:Example %n"/>
          </title>
          <mediaobject>
            <imageobject role="fo-fop">
              <imagedata fileref="figures/prg_2Dungridded.png" format="PNG" contentdepth="100%"
                width="100%" scalefit="1"/>
            </imageobject>
            <imageobject role="html">
              <imagedata fileref="figures/prg_2Dungridded.png" format="PNG" width="60%"/>
            </imageobject>
          </mediaobject>
        </figure>

        <example id="threeD_ungriddedTableDef_example">
	  <?dbfo keep-together="auto"?>
          <title>
	    An excerpt from a sample aerodynamics model giving an example of a 3D
	    <sgmltag>ungriddedTableDef</sgmltag> element, encoding the data shown in <xref
	    linkend="threeD_ungriddedTable_figure" xrefstyle="template:Figure %n"/>.
	  </title>

          <para> 
	    In this example<indexterm><primary
	    sortas="ungriddedTableDef">'ungriddedTableDef'
	    element</primary><secondary>example of</secondary></indexterm>, the dependent
	    coordinates all vary in each dimension.
	  </para>

          <programlisting>
     &lt;!--===================================--&gt;  <co id="ug3dtd-note-1-co" linkends="ug3dtd-note-1"/>
     &lt;!--  Three-D Table Definition Example --&gt;
     &lt;!--===================================--&gt;

     &lt;ungriddedTableDef name="yawMomentCoefficientTable1" units="nd" utID="yawMomentCoefficientTable1"&gt;
                &lt;!--  alpha,     beta,      delta:     yawMomentCoeff --&gt;    <co id="ug3dtd-note-2-co" linkends="ug3dtd-note-2"/>
       &lt;dataPoint&gt; -1.8330592 -5.3490387 -4.7258599 -0.00350641&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -1.9302179 -4.9698462 0.2798654  -0.0120538&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -2.1213095 -5.0383145 5.2146443  -0.0207089&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 0.2522004  -4.9587161 -5.2312860 -0.000882368&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 0.3368831  -5.0797159 -0.3370540 -0.0111846&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 0.2987289  -4.9691198 5.2868938  -0.0208758&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 1.8858257  -5.2077654 -4.7313074 -0.00219842&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 1.8031083  -4.7072954 0.0541231  -0.0111726&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 1.7773659  -5.0317988 5.1507477  -0.0208074&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 3.8104785  -5.2982162 -4.7152852 -0.00225906&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 4.2631596  -5.1695257 -0.1343410 -0.0116563&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 4.0470946  -5.2541017 5.0686926  -0.0215506&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -1.8882611 0.2422452  -5.1959304 0.0113462&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -2.1796091 0.0542085  0.2454711  -0.000253915&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -2.2699103 -0.3146657 4.8638859  -0.00875431&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 0.0148579  0.1095599  -4.9639500 0.0105144&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -0.1214591 -0.0047960 0.2788827  -0.000487753&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 0.0610233  0.2029588  5.0831767  -0.00816086&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 1.7593356  -0.0149007 -5.0494446 0.0106762&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 1.9717048  -0.0870861 0.0763833  -0.000332616&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 2.0228263  -0.2962294 5.1777078  -0.0093807&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 4.0567507  -0.2948622 -5.1002243 0.010196&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 3.6534822  0.2163747  0.1369900  0.000312733&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 3.6848003  0.0884533  4.8214805  -0.00809437&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -2.3347682 5.2288720  -4.7193014 0.02453&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -2.3060350 4.9652745  0.2324610  0.0133447&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -1.8675176 5.0754646  5.1169942  0.00556052&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 0.0004379  5.1220145  -5.2734993 0.0250468&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -0.1977035 4.7462188  0.0664495  0.0124083&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -0.1467742 5.0470092  5.1806131  0.00475277&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 1.6599338  4.9352809  -5.1210532 0.0242646&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 2.2719825  4.8865093  0.0315210  0.0125658&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 2.0406858  5.3253471  5.2880688  0.00491779&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 4.0179983  5.0826426  -4.9597629 0.0243518&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 4.2863811  4.8806558  -0.2877697 0.0128886&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 3.9289361  5.2246849  4.9758705  0.00471241&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -2.2809763 9.9844584  -4.8800790 0.0386951&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -2.0733070 9.9204337  0.0241722  0.027546&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -1.7624546 9.9153493  5.1985794  0.0188357&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 0.2279962  9.8962508  -4.7811258 0.0375762&lt;/dataPoint&gt;
       &lt;dataPoint&gt; -0.2800363 10.3004593 0.1413907  0.028144&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 0.0828562  9.9008011  5.2962722  0.0179398&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 1.8262230  10.0939436 -4.6710211 0.037712&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 1.7762123  10.1556398 -0.1307093 0.0278079&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 2.2258599  9.8009720  4.6721747  0.018244&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 3.7892651  9.8017197  -4.8026383 0.0368199&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 4.0150716  9.6815531  -0.0630955 0.0252014&lt;/dataPoint&gt;
       &lt;dataPoint&gt; 4.1677953  9.8754433  5.1776223  0.0164312&lt;/dataPoint&gt;
     &lt;/ungriddedTableDef&gt;
          </programlisting>

          <calloutlist>
            <callout arearefs="ug3dtd-note-1-co" id="ug3dtd-note-1">
              <para>Example courtesy of Mr. Geoff Brian<indexterm><primary>Brian,
              Geoffrey</primary></indexterm>,
              DSTO<indexterm><primary>DSTO</primary></indexterm></para>
            </callout>
            <callout arearefs="ug3dtd-note-2-co" id="ug3dtd-note-2">
              <para> 
		In this example, columns are labeled with an <acronym>XML</acronym>
		comment for human readers. Actual association of each input
		(alpha, beta and delta) and the single output (yawing
		moment) to the respective input and output signals
		is mechanized in any subsequent function definition(s).
	      </para>
            </callout>
          </calloutlist>
        </example>

        <figure id="threeD_ungriddedTable_figure">
          <title>The 3D function given in the <link
              linkend="threeD_ungriddedTableDef_example">previous example</link></title>
          <graphic fileref="figures/gb_3Dungridded.png"/>
        </figure>

      </sect3>

      <sect3 id="function_overview">
        <title>The function definition element</title>
        <titleabbrev><sgmltag>function</sgmltag> overview</titleabbrev>

        <para>
	  The <link linkend="function"><sgmltag>function</sgmltag></link> element connects
	  breakpoint sets (for gridded tables), independent variables, and data tables (gridded or
	  ungridded) to their respective output variable.
	  <indexterm>
	    <primary sortas="function">'function' element</primary>
	    <secondary>overview</secondary>
	  </indexterm>
	</para>

        <programlisting>
    <link linkend="function">function</link> : name
        <link linkend="description">description</link>? :
            {text description of the function}
        EITHER
            <link linkend="provenanceRef">provenanceRef</link>? : provID
        OR
            <link linkend="provenance">provenance</link>? : [provID]
                <link linkend="author">author</link>+ : name, org, [email]
                    <link linkend="contactInfo">contactInfo</link>* : [contactInfoType, contactLocation]
                        {text describing contact information}
                <link linkend="creationDate">creationDate</link> : date {in YYYY-MM-DD format}
                <link linkend="documentRef">documentRef</link>* : [docID,] refID
                <link linkend="modificationRef">modificationRef</link>* : modID
                <link linkend="description">description</link>?
        EITHER 
        (
          <link linkend="independentVarPts">independentVarPts</link>+ : varID, [name, units, sign, extrapolate, interpolate]
              {input values as character data}
          <link linkend="dependentVarPts">dependentVarPts</link> : varID, [name, units, sign]
              {output values as character data}
        ) 
        OR 
        (
          <link linkend="independentVarRef">independentVarRef</link>+ : varID, [min, max, extrapolate, interpolate]
          <link linkend="dependentVarRef">dependentVarRef</link> : varID
          <link linkend="functionDefn">functionDefn</link> : [name]
              CHOICE OF
              (
                  <link linkend="griddedTableRef">griddedTableRef</link> : gtID
              OR
                  <link linkend="griddedTableDef">griddedTableDef</link> : [name, gtID, units]
                    <link linkend="description">description</link>?
                        {text description of table}
                    (<link linkend="provenance">provenance</link> | <link linkend="provenanceRef">provenanceRef</link>)?   {as described earlier}
                    <link linkend="breakpointRefs">breakpointRefs</link>
                        <link linkend="bpRef">bpRef</link>+ : bpID
                    <link linkend="uncertainty">uncertainty</link>? : effect
                        (<link linkend="normalPDF">normalPDF</link> : numSigmas) | (<link linkend="uniformPDF">uniformPDF</link> : bounds+)
                    <link linkend="dataTable">dataTable</link>
                        {gridded data table as character data}
              OR
                  <link linkend="ungriddedTableRef">ungriddedTableRef</link> : utID
              OR
                  <link linkend="ungriddedTableDef">ungriddedTableDef</link> : [name, utID, units]
                    <link linkend="description">description</link>?
                        {text description of table}
                    (<link linkend="provenance">provenance</link> | <link linkend="provenanceRef">provenanceRef</link>)?   {as described earlier}
                    <link linkend="uncertainty">uncertainty</link>? : effect
                        (<link linkend="normalPDF">normalPDF</link> : numSigmas) | (<link linkend="uniformPDF">uniformPDF</link> : bounds+)
                    <link linkend="dataPoint">dataPoint</link>+
                        {coordinate/value sets as character data}
              )
        )
        </programlisting>

        <variablelist>
          <title><link linkend="function">
              <sgmltag>function</sgmltag>
            </link> attributes:</title>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="name">'name' attribute</primary>
		<secondary>of 'function' element</secondary>
	      </indexterm>
              <sgmltag>name</sgmltag>
            </term>
            <listitem>
              <para>A UNICODE name for the function.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist>
          <title><link linkend="function">
              <sgmltag>function</sgmltag>
            </link> sub-elements:</title>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="description">'description' element</primary>
		<secondary>as child of 'function' element</secondary>
	      </indexterm>
              <link linkend="description">
                <sgmltag>description</sgmltag>
              </link>
            </term>
            <listitem>
              <para>The optional <link linkend="description">description</link> element allows the
                author to describe the data contained within this
                <sgmltag>function</sgmltag>.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="provenance">'provenance' element</primary>
		<secondary>as child of 'function' element</secondary>
	      </indexterm>
              <link linkend="provenance">
                <sgmltag>provenance</sgmltag>
              </link>
            </term>
            <listitem>
              <para>The optional <link linkend="provenance">provenance</link> element allows the
                author to describe the source and history of the data within this
                  <sgmltag>function</sgmltag>. Alternatively, a <link linkend="provenanceRef">
                  <sgmltag>provenanceRef</sgmltag>
                </link> reference can be made to a previously defined provenance.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="independentVarPts">'independentVarPts' element</primary>
		<secondary>as child of 'function' element</secondary>
	      </indexterm>
              <link linkend="independentVarPts">
                <sgmltag>independentVarPts</sgmltag>
              </link>
            </term>
            <listitem>
              <para> 
		If the author chooses, she can express a linearly interpolated functions by
		specifying the independent (breakpoint) value sets as one or more
		<sgmltag>independentVarPts</sgmltag> which are comma- or white space-separated,
		monotonically increasing floating-point coordinate values corresponding to the
		<sgmltag>dependentVarPts</sgmltag>. In the case of multiple dimensions, more than
		one <sgmltag>independentVarPts</sgmltag> must be specified, one for each
		dimension. The mandatory <sgmltag>varID</sgmltag> attribute is used to connect each
		<link linkend="independentVarPts"><sgmltag>independentVarPts</sgmltag></link> set
		with an input variable.
	      </para>
              <para> 
		An optional <sgmltag>interpolate</sgmltag> attribute specifies the preference for
		using linear, quadratic, or cubic relaxed splines for calculating dependent values
		when the independent arguments are in between specified values. When not specified,
		the expectation would be to use a linear spline interpolation between points. The
		performance of interpolation of various orders is left up to the processing
		application.  See <xref linkend="interpolation" xrefstyle="template:Section %n"/>.
	      </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="dependentVarPts">'dependentVarPts' element</primary>
		<secondary>as child of 'function' element</secondary>
	      </indexterm>
              <link linkend="dependentVarPts">
                <sgmltag>dependentVarPts</sgmltag>
              </link>
            </term>
            <listitem>
              <para> This element goes along with the previous element to specify a function table.
              Only one <sgmltag>dependentVarPts</sgmltag> may be specified. If the function is
              multi-dimensional, the convention is the last breakpoint dimension changes most
              rapidly in this comma- or white space-separated list of floating-point output
              values. The mandatory <sgmltag>varID</sgmltag> attribute is used to connect this
              table's output to an output variable. </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="independentVarRef">'independentVarRef' element</primary>
		<secondary>as child of 'function' element</secondary>
	      </indexterm>
              <link linkend="independentVarRef">
                <sgmltag>independentVarRef</sgmltag>
              </link>
            </term>
            <listitem>
              <para> 
		One or more of these elements refers to separately defined <link
		linkend="variableDef"><sgmltag>variableDef</sgmltag></link>s. The order of
		specification is important and must match the order in which breakpoint sets are
		specified or the order of coordinates in ungridded table coordinate/value sets.
	      </para>
              <para>
		An optional <sgmltag>interpolate</sgmltag> attribute specifies the preference for
		using discrete, linear, quadratic, or cubic splines for calculating dependent values
		when the independent arguments are in between specified values. When not specified,
		the default expectation would be a linear spline interpolation between points. The
		performance of interpolation of various orders is left up to the implementer. See
		<xref linkend="interpolation" xrefstyle="template:Section %n"/>.
	      </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="dependentVarRef">'dependentVarRef' element</primary>
		<secondary>as child of 'function' element</secondary>
	      </indexterm>
              <link linkend="dependentVarRef">
                <sgmltag>dependentVarRef</sgmltag>
              </link>
            </term>
            <listitem>
              <para> 
		A single <sgmltag>dependentVarRef</sgmltag> must be specified to connect the output
		of this function to a particular <sgmltag>variableDef</sgmltag>.
	      </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="functionDefn">'functionDefn' element</primary>
		<secondary>as child of 'function' element</secondary>
	      </indexterm>
              <link linkend="functionDefn">
                <sgmltag>functionDefn</sgmltag>
              </link>
            </term>
            <listitem>
              <para> This element identifies either a separately specified data table definition or
                specifies a private table, either gridded or ungridded. </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="griddedTableRef">'griddedTableRef' element</primary>
		<secondary>as child of 'function' element</secondary>
	      </indexterm>
              <link linkend="griddedTableRef">
                <sgmltag>griddedTableRef</sgmltag>
              </link>
            </term>
            <listitem>
              <para>If not defining a simple function table, the author may use this element to
                point to a separately specified <sgmltag>griddedTableDef</sgmltag> element.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="ungriddedTableRef">'ungriddedTableRef' element</primary>
		<secondary>as child of 'function' element</secondary>
	      </indexterm>
              <link linkend="ungriddedTableRef">
                <sgmltag>ungriddedTableRef</sgmltag>
              </link>
            </term>
            <listitem>
              <para>If not using a simple function table, the author may use this element to point
                to separately specified <sgmltag>ungriddedTableDef</sgmltag> element.</para>
            </listitem>
          </varlistentry>

        </variablelist>

        <example id="function_example_1">
	  <?dbfo keep-together="auto"?>
          <title>
	    An excerpt giving the example of a function which refers to a previously defined
	    <sgmltag>griddedTableDef</sgmltag>
	  </title>
          <para>
	    This example<indexterm><primary sortas="function">'function'
	    element</primary><secondary>example of</secondary></indexterm> ties the input variables
	    <varname>DBFLL</varname> and <varname>XMACH</varname> into output variable
	    <varname>CLBFLLO</varname> through a function called <varname>CLBFLO_fn</varname>, which
	    is represented by the linear interpolation of the gridded table previously defined by
	    the <varname>CLBFL0_table</varname> <sgmltag>griddedTableDef</sgmltag> (see the <link
	    linkend="griddedTableDef_example">griddedTableDef example</link> above).
	  </para>

          <programlisting>
      &lt;!-- ============================== --&gt;
      &lt;!-- Lower left body flap functions --&gt;
      &lt;!-- ============================== --&gt;

  &lt;<link linkend="function">function</link> name="CLBFLL0"&gt;
    &lt;<link linkend="description">description</link>&gt;
      Lower left body flap lookup function for lift, polynomial constant term.
    &lt;/description&gt;
    &lt;<link linkend="independentVarRef">independentVarRef</link> varID="DBFLL"  min="0.0" max="60." extrapolate="neither"/&gt; <co id="fn1-note-1-co" linkends="fn1-note-1"/>
    &lt;<link linkend="independentVarRef">independentVarRef</link> varID="XMACH" min="0.3" max="4.0" extrapolate="neither"/&gt;
    &lt;<link linkend="dependentVarRef">dependentVarRef</link> varID="CLBFLL0"/&gt; <co id="fn1-note-2-co" linkends="fn1-note-2"/>
    &lt;<link linkend="functionDefn">functionDefn</link> name="CLBFL0_fn"&gt;
      &lt;<link linkend="griddedTableRef">griddedTableRef</link> gtID="CLBFL0_table"/&gt; <co id="fn1-note-3-co" linkends="fn1-note-3"/>
    &lt;/functionDefn&gt;
  &lt;/function&gt;
          </programlisting>
          <calloutlist>
            <callout arearefs="fn1-note-1-co" id="fn1-note-1">
              <para> 
		The independent variables must be given in the order of least-rapidly changing to
		most-rapidly changing values in the previously defined function table. The
		processing application needs to pay attention to the <sgmltag>extrapolate</sgmltag>
		attribute, which specifies how to treat a variable whose value exceeds the stated
		limits on input. See <xref linkend="interpolation" xrefstyle="template:Section
		%n"/>.
	      </para>
            </callout>
            <callout arearefs="fn1-note-2-co" id="fn1-note-2">
              <para>The dependent variable (identified as <varname>CLBFLL0</varname>) is the output
                variable for this function. <varname>CLBFLL0</varname> must have been declared
                previously with a <sgmltag>variableDef</sgmltag> element.</para>
            </callout>
            <callout arearefs="fn1-note-3-co" id="fn1-note-3">
              <para>This is a reference to the previously declared
                  <sgmltag>griddedTableDef</sgmltag>.</para>
            </callout>
          </calloutlist>
        </example>

        <example id="function_example_2">
	  <?dbfo keep-together="auto"?>
          <title>A <sgmltag>function</sgmltag> with an internal table</title>
          <para> 
	    In this example<indexterm><primary sortas="function">'function'
	    element</primary><secondary>example of with internal table</secondary></indexterm>, the
	    function <varname>CLRUD0</varname> returns, in the variable <varname>CLRUD0</varname>,
	    the value of function <varname>CLRUD0_fn</varname> represented by gridded
	    <varname>CLRUD0_table</varname>. The inputs to the function are
	    <varname>abs_rud</varname> and <varname>XMACH</varname> which are used to normalize
	    breakpoint sets <varname>DRUD_PTS</varname> and <varname>XMACH1_PTS</varname>
	    respectively. The input variables are limited between 0.0 to 30.0 and 0.3 to 4.0,
	    respectively.
	  </para>

          <programlisting>
      &lt;!-- ================ --&gt;
      &lt;!-- Rudder functions --&gt;
      &lt;!-- ================ --&gt;

&lt;!-- The rudder functions are only used once, so their table
     definitions are internal to the function definition.
--&gt; <co id="fn2-note-1-co" linkends="fn2-note-1"/>

  &lt;function name="CLRUD0_fn"&gt; <co id="fn2-note-2-co" linkends="fn2-note-2"/>
    &lt;description&gt;
        Rudder contribution to lift coefficient,
        polynomial multiplier for constant term.
    &lt;/description&gt;
    &lt;provenance&gt; <co id="fn2-note-3-co" linkends="fn2-note-3"/>
      &lt;author name="Bruce Jackson" org="NASA Langley Research Center" email="e.b.jackson@larc.nasa.gov"/&gt;
      &lt;creationDate date="2003-01-31"/&gt;
      &lt;documentRef docID="REF01"/&gt;
    &lt;/provenance&gt;
    &lt;independentVarRef varID="abs_rud"  min="0.0" max="30." extrapolate="neither"/&gt;
    &lt;independentVarRef varID="XMACH" min="0.3" max="4.0" extrapolate="neither"/&gt;
    &lt;dependentVarRef varID="CLRUD0"/&gt; <co id="fn2-note-4-co" linkends="fn2-note-4"/>

    &lt;functionDefn name="CLRUD0_fn_defn"&gt;
      &lt;griddedTableDef name="CLRUD0_table"&gt; <co id="fn2-note-5-co" linkends="fn2-note-5"/>
        &lt;breakpointRefs&gt;
          &lt;bpRef bpID="DRUD_PTS"/&gt;
          &lt;bpRef bpID="XMACH1_PTS"/&gt;
        &lt;/breakpointRefs&gt;
        &lt;dataTable&gt; &lt;!-- last breakpoint changes most rapidly --&gt;
&lt;!-- CLRUD0  POINTS  --&gt;
&lt;!-- RUD =    0.0    --&gt;
 0.00000E+00 , 0.00000E+00 , 0.00000E+00 , 0.00000E+00 , 0.00000E+00 ,
 0.00000E+00 , 0.00000E+00 , 0.00000E+00 , 0.00000E+00 , 0.00000E+00 ,
 0.00000E+00 , 0.00000E+00 , 0.00000E+00 ,
&lt;!-- RUD =   15.0    --&gt;
-0.13646E-01 , 0.26486E-01 , 0.16977E-01 ,-0.16891E-01 , 0.10682E-01 ,
 0.75071E-02 , 0.53891E-02 ,-0.30802E-02 ,-0.59013E-02 ,-0.95733E-02 ,
 0.00000E+00 , 0.00000E+00 , 0.00000E+00 ,
&lt;!-- RUD =   30.0    --&gt;
-0.12709E-02 , 0.52971E-01 , 0.33953E-01 ,-0.33782E-01 , 0.21364E-01 ,
 0.15014E-01 , 0.10778E-01 ,-0.61604E-02 ,-0.11803E-01 ,-0.19147E-01 ,
 0.00000E+00 , 0.00000E+00 , 0.00000E+00 
        &lt;/dataTable&gt;
      &lt;/griddedTable&gt;
    &lt;/functionDefn&gt;
  &lt;/function&gt;
          </programlisting>
          <calloutlist>
            <callout arearefs="fn2-note-1-co" id="fn2-note-1">
              <para>This comment helps humans understand the reason for an embedded table.</para>
            </callout>
            <callout arearefs="fn2-note-2-co" id="fn2-note-2">
              <para>
		The <sgmltag>name</sgmltag> attribute is used for documentation purposes, not for
		internal variable linkage.
	      </para>
            </callout>
            <callout arearefs="fn2-note-3-co" id="fn2-note-3">
              <para>
		The <sgmltag>provenance</sgmltag> element is required by the AIAA standard <link
		linkend="AIAA10"><citation>AIAA10</citation></link>.
	      </para>
            </callout>
            <callout arearefs="fn2-note-4-co" id="fn2-note-4">
              <para>
		The <sgmltag>varID</sgmltag> attribute is used to link the output of this function
		with a previously defined variable as given in <xref linkend="variableDef_example_2"
		xrefstyle="template:Example %n"/>.
	      </para>
            </callout>
            <callout arearefs="fn2-note-5-co" id="fn2-note-5">
              <para>This example has an embedded gridded table.</para>
            </callout>
          </calloutlist>

        </example>

        <example id="function_example_3">
	  <?dbfo keep-together="auto"?>
          <title>A simple 1D <sgmltag>function</sgmltag></title>
          <para> 
	    At the other end of the spectrum, a simple 1D nonlinear function<indexterm><primary
	    sortas="function">'function' element</primary><secondary>example of
	    simple</secondary></indexterm> can be defined with no reuse, as shown below; however,
	    multiple-dimension functions are supported by adding additional
	    <sgmltag>independentVarPts</sgmltag> definitions.
	  </para>
          <programlisting>
&lt;function name="CL"&gt;
  &lt;independentVarPts varID="alpdeg"&gt; <co id="fn3-note-1-co" linkends="fn3-note-1"/>
   -4.0, 0., 4.0, 8.0, 12.0, 16.0
  &lt;/independentVarPts&gt;
  &lt;dependentVarPts varID="cl"&gt; <co id="fn3-note-2-co" linkends="fn3-note-2"/>
    0.0, 0.2, 0.4, 0.8, 1.0, 1.2
  &lt;/dependentVarPts&gt;
&lt;/function&gt;
          </programlisting>
          <calloutlist>
            <callout arearefs="fn3-note-1-co" id="fn3-note-1">
              <para> Breakpoints in angle-of-attack are listed here. </para>
            </callout>
            <callout arearefs="fn3-note-2-co" id="fn3-note-2">
              <para> Values of <varname>cl</varname> are given, corresponding to the angle-of-attack
                breakpoints given previously. </para>
            </callout>
          </calloutlist>
        </example>

      </sect3>

      <sect3 id="checkData_overview">
        <title>The checkData element</title>
        <titleabbrev><sgmltag>checkData</sgmltag> overview</titleabbrev>

        <para>
	  The <link linkend="checkData"><sgmltag>checkData</sgmltag></link> element contains one or
	  more input/output vector pairs (and optionally a dump of internal values) for the encoded
	  model to assist in verification and debugging of the implementation. 
	  <indexterm>
	    <primary sortas="checkData">'checkData' element</primary>
	    <secondary>overview</secondary>
	  </indexterm>
	</para>

        <programlisting>
    <link linkend="checkData">checkData</link>
      <link linkend="staticShot">staticShot</link>+ : name, [refID]
            <link linkend="description">description</link>?
                {text description of the static test case}
                    (<link linkend="provenance">provenance</link> | <link linkend="provenanceRef">provenanceRef</link>)?   {as defined previously}
            <link linkend="checkInputs">checkInputs</link>
                <link linkend="signal">signal</link>+
                    <link linkend="signalName">signalName</link>
                    <link linkend="signalUnits">signalUnits</link>
                    <link linkend="signalValue">signalValue</link>
            <link linkend="internalValues">internalValues</link>?
                <link linkend="signal">signal</link>+
                    <link linkend="varID">varID</link> 
                    <link linkend="signalValue">signalValue</link>
            <link linkend="checkOutputs">checkOutputs</link>
                <link linkend="signal">signal</link>+
                    <link linkend="signalName">signalName</link>
                    <link linkend="signalUnits">signalUnits</link>
                    <link linkend="signalValue">signalValue</link>
                    <link linkend="tol">tol</link>

        </programlisting>

        <variablelist>
          <title><sgmltag>checkData</sgmltag> sub-elements:</title>
          <varlistentry>
            <term>
	      <indexterm>
		<primary sortas="staticShot">'staticShot' element</primary>
		<secondary>as child of 'checkData' element</secondary>
	      </indexterm>
              <sgmltag>staticShot</sgmltag>
            </term>
            <listitem>
              <para> 
		One or more check-case data sets, each of which contain mandatory sub-elements <link
		linkend="checkInputs"><sgmltag>checkInputs</sgmltag></link> and <link
		linkend="checkOutputs"><sgmltag>checkOutputs</sgmltag> vectors</link> (with required
		match tolerances), and optional <link
		linkend="provenance"><sgmltag>provenance</sgmltag></link>, <link
		linkend="provenanceRef"><sgmltag>provenanceRef</sgmltag></link>, <link
		linkend="description"><sgmltag>description</sgmltag></link> and <link
		linkend="internalValues"><sgmltag>internalValues</sgmltag></link> sub-elements.
	      </para>
            </listitem>
          </varlistentry>
        </variablelist>

        <example id="checkData_example_1">
	  <?dbfo keep-together="auto"?>
          <title>Check-case data set excerpt</title>
          <para>
	    A DAVE-ML file excerpt<indexterm><primary
	    sortas="checkData">'checkData' element</primary><secondary>example
	    of</secondary><tertiary>without internal values</tertiary></indexterm> specifying a
	    check-case data set example for a simple model
	  </para>

          <programlisting>
  &lt;checkData&gt;
    &lt;staticShot name="Nominal" refID="NOTE1"&gt; <co id="chk1-note-1-co" linkends="chk1-note-1"/>
      &lt;description&gt;An example static check of a simple DAVE-ML model&lt;/description&gt;
      &lt;checkInputs&gt;  <co id="chk1-note-2-co" linkends="chk1-note-2"/>
        &lt;signal&gt;  <co id="chk1-note-3-co" linkends="chk1-note-3"/>
          &lt;signalName&gt;trueAirspeed&lt;/signalName&gt;
          &lt;signalUnits&gt;f_s&lt;/signalUnits&gt;
          &lt;signalValue&gt; 300.000&lt;/signalValue&gt;
        &lt;/signal&gt;
        &lt;signal&gt; 
          &lt;signalName&gt;angleOfAttack&lt;/signalName&gt;
          &lt;signalUnits&gt;deg&lt;/signalUnits&gt;
          &lt;signalValue&gt;   5.000&lt;/signalValue&gt;
        &lt;/signal&gt;
         .
         .       (similar input signals omitted)
         .
        &lt;signal&gt;
          &lt;signalName&gt;delta elevator&lt;/signalName&gt; 
          &lt;signalUnits&gt;deg&lt;/signalUnits&gt;
          &lt;signalValue&gt;   0.000&lt;/signalValue&gt;
        &lt;/signal&gt;
      &lt;/checkInputs&gt;
      &lt;checkOutputs&gt; <co id="chk1-note-4-co" linkends="chk1-note-4"/>
        &lt;signal&gt;  <co id="chk1-note-5-co" linkends="chk1-note-5"/>
          &lt;signalName&gt;CX&lt;/signalName&gt;
          &lt;signalUnits&gt;nd&lt;/signalUnits&gt;
          &lt;signalValue&gt;-0.00400000000000&lt;/signalValue&gt;
          &lt;tol&gt;0.000001&lt;/tol&gt;
        &lt;/signal&gt;
         .
         .       (similar output signals omitted)
         .
      &lt;/checkOutputs&gt;
    &lt;/staticShot&gt;
    &lt;staticShot name="Positive pitch rate"&gt; <co id="chk1-note-6-co" linkends="chk1-note-6"/>
      &lt;checkInputs&gt; 
         .
         .       (similar input and output signal information omitted)
         .
      &lt;/checkOutputs&gt;
    &lt;/staticShot&gt;
    &lt;staticShot name="Positive elevator"&gt;
      &lt;checkInputs&gt; 
         .
         .       (similar input and output signal information omitted)
         .
      &lt;/checkOutputs&gt;
    &lt;/staticShot&gt;
  &lt;/checkData&gt;
          </programlisting>
          <calloutlist>
            <callout arearefs="chk1-note-1-co" id="chk1-note-1">
              <para> 
		This first check-case refers to a note given in the file header; this is useful to
		document the source of the check-case values.
	      </para>
            </callout>
            <callout arearefs="chk1-note-2-co" id="chk1-note-2">
              <para>
		The <sgmltag>checkInputs</sgmltag> element defines the input variable values, by
		variable name, as well as units (so they can be verified).
	      </para>
            </callout>
            <callout arearefs="chk1-note-3-co" id="chk1-note-3">
              <para> 
		Multiple <sgmltag>signal</sgmltag> elements are usually given; taken together, these
		scalar <sgmltag>signals</sgmltag>s represent the check-case input "vector."
              </para>
            </callout>
            <callout arearefs="chk1-note-4-co" id="chk1-note-4">
              <para>
		The <sgmltag>checkOutputs</sgmltag> element defines output variable values that
		should result from the specified input values.
	      </para>
            </callout>
            <callout arearefs="chk1-note-5-co" id="chk1-note-5">
              <para> 
		Note the included tolerance value, indicating the absolute value tolerance within
		which the output values must match the check-case data values.
	      </para>
            </callout>
            <callout arearefs="chk1-note-6-co" id="chk1-note-6">
              <para> 
		Multiple check-cases may be specified; this one differs from the previous check-case
		due to an increase in the pitching-rate input.
	      </para>
            </callout>
          </calloutlist>
        </example>

        <example id="checkData_example_2">
	  <?dbfo keep-together="auto"?>
          <title>A second <sgmltag>checkData</sgmltag> example with internal values</title>
	  <para>
	    This example shows another check-case; this one includes intermediate values as an aide
	    to debugging a new implementation.<indexterm><primary sortas="checkData">'checkData'
	    element</primary><secondary>example of</secondary><tertiary>with internal
	    values</tertiary></indexterm>
	  </para>
          <programlisting>
  &lt;checkData&gt;
    &lt;( provenance | provenanceRef )?&gt;
    &lt;staticShot name="Skewed inputs"&gt;
      &lt;description&gt;
        Another example static check; this one includes all the internal, intermediate calculations
        to assist in debugging the implementation.
      &lt;/description&gt;
      &lt;checkInputs&gt; 
        &lt;signal&gt; 
          &lt;signalName&gt;trueAirspeed&lt;/signalName&gt;
          &lt;signalUnits&gt;f_s&lt;/signalUnits&gt;\
          &lt;signalValue&gt; 300.000&lt;/signalValue&gt;
        &lt;/signal&gt;
        &lt;signal&gt;
          &lt;signalName&gt;angleOfAttack&lt;/signalName&gt;
          &lt;signalUnits&gt;deg&lt;/signalUnits&gt;
          &lt;signalValue&gt;  16.200&lt;/signalValue&gt;
        &lt;/signal&gt;
         .
         .       (similar input values omitted)
         .
        &lt;signal&gt;
          &lt;signalName&gt;bodyPositionOfCmWrtMrc&lt;/signalName&gt;
          &lt;signalUnits&gt;fracMAC&lt;/signalUnits&gt;
          &lt;signalValue&gt;   0.123&lt;/signalValue&gt;
        &lt;/signal&gt;
      &lt;/checkInputs&gt;
      &lt;internalValues&gt; <co id="chk2-note-1-co" linkends="chk1-note-1"/>
        &lt;signal&gt;
          &lt;varID&gt;vt&lt;/varID&gt;
          &lt;signalValue&gt;300.0&lt;/signalValue&gt;
        &lt;/signal&gt;
        &lt;signal&gt;
          &lt;varID&gt;alpha&lt;/varID&gt;
          &lt;signalValue&gt;16.2&lt;/signalValue&gt;
        &lt;/signal&gt;
         .
         .       (similar internal values omitted)
         .
      &lt;/internalValues&gt;
      &lt;checkOutputs&gt;
        &lt;signal&gt;
          &lt;signalName&gt;aeroBodyForceCoefficient_X&lt;/signalName&gt;
          &lt;signalValue&gt; 0.04794994533333&lt;/signalValue&gt;
          &lt;signalUnits&gt;nd&lt;/signalUnits&gt;
          &lt;tol&gt;0.000001&lt;/tol&gt;
        &lt;/signal&gt;
        &lt;signal&gt;
          &lt;signalName&gt;aeroBodyForceCoefficient_Z&lt;/signalName&gt;
          &lt;signalValue&gt;-0.72934852554344&lt;/signalValue&gt;
          &lt;signalUnits&gt;nd&lt;/signalUnits&gt;
          &lt;tol&gt;0.000001&lt;/tol&gt;
        &lt;/signal&gt;
        &lt;signal&gt;
          &lt;signalName&gt;aeroBodyMomentCoefficient_Pitch&lt;/signalName&gt;
          &lt;signalValue&gt;-0.10638585796503&lt;/signalValue&gt;
          &lt;signalUnits&gt;nd&lt;/signalUnits&gt;
          &lt;tol&gt;0.000001&lt;/tol&gt;
        &lt;/signal&gt;
      &lt;/checkOutputs&gt;
    &lt;/staticShot&gt;
  &lt;/checkData&gt;
            
          </programlisting>
          <calloutlist>
            <callout arearefs="chk2-note-1-co" id="chk2-note-1">
              <para> 
		The <sgmltag>internalValues</sgmltag> element, if present, usually is a list of all
		model-defined internal variable values. This is normally not required for a model
		exchange, but such information is very useful to aide in debugging the
		implementation by the recipient.
	      </para>
            </callout>
          </calloutlist>
        </example>

      </sect3>

    </sect2>

    <sect2 id="interpolation">
      <title>Function interpolation/extrapolation</title>
      <titleabbrev>Interpolation</titleabbrev>
      <para> 
	It is possible to specify the method of interpolation to be used for nonlinear
        function tables by use of the <sgmltag>interpolate</sgmltag> attribute of the <link
        linkend="independentVarPts">
        <sgmltag>independentVarPts</sgmltag></link> and <link linkend="independentVarRef">
        <sgmltag>independentVarRef</sgmltag></link> elements. This attribute, combined with the
        <sgmltag>extrapolate</sgmltag> flag, provides several different ways of realizing the
        intermediate values of the function when not at one of the specified intersections of
        independent values.
	<indexterm>
	  <primary sortas="interpolate">'interpolate' attribute</primary>
	  <secondary>overview</secondary>
	</indexterm>
	<indexterm>
	  <primary sortas="extrapolate">'extrapolate' attribute</primary>
	  <secondary>overview</secondary>
	</indexterm>
      </para>
      <variablelist>
	<title>Possible values for the <sgmltag>interpolate</sgmltag> attribute are:</title>
	<varlistentry>
	  <term>
	    <sgmltag>discrete</sgmltag>
	  </term>
	  <listitem>
	    <para>Output uses value associated with nearest breakpoint</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <sgmltag>floor</sgmltag>
	  </term>
	  <listitem>
	    <para>Output uses value associated with next (numerically higher) breakpoint</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <sgmltag>ceiling</sgmltag>
	  </term>
	  <listitem>
	    <para>Output uses value associated with last (numerically lower) breakpoint</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <sgmltag>linear</sgmltag> (default)
	  </term>
	  <listitem>
	    <para>Output is linearly interpolated between breakpoints</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <sgmltag>quadraticSpline</sgmltag>
	  </term>
	  <listitem>
	    <para>Output follows a quadratic spline fit through values associated with two nearby breakpoints</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <sgmltag>cubicSpline</sgmltag>
	  </term>
	  <listitem>
	    <para>Output follows a cubic spline fit through values associated with three nearby breakpoints</para>
	  </listitem>
	</varlistentry>
      </variablelist>

      <variablelist>
	<title>Possible values for the <sgmltag>extrapolate</sgmltag> attribute are:</title>
	<varlistentry>
	  <term>
	    <sgmltag>neither</sgmltag> (default)
	  </term>
	  <listitem>
	    <para>
	      Output is held constant at value associated with closest end of breakpoints if the
	      input value is outside the limits of the associated breakpoint set
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <sgmltag>min</sgmltag>
	  </term>
	  <listitem>
	    <para>
	      Output follows extrapolated values of function if the input is below the minimum
	      breakpoint value
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <sgmltag>max</sgmltag>
	  </term>
	  <listitem>
	    <para>
	      Output follows extrapolated values of function if the input is above maximum
	      breakpoint value
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <sgmltag>both</sgmltag>
	  </term>
	  <listitem>
	    <para>
	      Output follows extrapolated values of function if the input is outside the limits of
	      the associated breakpoint set
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>

      <para> 
	Implementation of the specific interpolation algorithm is left up to the implementer. One
	reference is the Wikipedia entry on interpolation <link
	linkend="wiki01"><citation>wiki01</citation></link>.
      </para>
      <para>
	The following implementation notes are suggested: 
	<itemizedlist>
          <listitem>
            <para>
	      An infinite set of quadratic interpolations are possible; it is suggested to use the
	      one that minimizes either the deviation from a linear interpolation or the slope error
	      at any edge.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      For cubic interpolation, the natural cubic spline (which has a second derivative of
	      zero at each end) is recommended when the <sgmltag>extrapolate</sgmltag> attribute is
	      <sgmltag>none</sgmltag>. When the <sgmltag>extrapolate</sgmltag> attribute is
	      <sgmltag>both</sgmltag>, a clamped cubic spline that matches the extrapolated slope of
	      the last two data points is suggested.
	    </para>
          </listitem>
          <listitem>
            <para> 
	      For the discrete interpolation values (<sgmltag>discrete</sgmltag>,
	      <sgmltag>ceiling</sgmltag>, or <sgmltag>floor</sgmltag>), the value of the
	      <sgmltag>extrapolate</sgmltag> attribute is meaningless.
	    </para>
          </listitem>
        </itemizedlist>
      </para>
      <para>
	For discrete interpolation, 
	<itemizedlist>
	  <listitem>
	    <para>
	      <sgmltag>discrete</sgmltag> implies the change between output values occurs midway between independent
	      breakpoint values, as shown in the top plot of <xref
	      linkend="discrete_interpolation_figure" xrefstyle="template:Figure %n"/>.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      <sgmltag>ceiling</sgmltag> means the output takes on the value of the next-higher
	      dependent variable breakpoint as soon as each independent breakpoint value is passed
	      (assuming the input value is increasing) as shown in the middle plot of <xref
	      linkend="discrete_interpolation_figure" xrefstyle="template:Figure %n"/>.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      <sgmltag>floor</sgmltag> means the output retains the value of the last dependent
	      variable breakpoint until the next independent breakpoint value is reached (assuming
	      the input value is increasing) as shown in the bottom plot of <xref
	      linkend="discrete_interpolation_figure" xrefstyle="template:Figure %n"/>.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
      <para>
	The default value for <sgmltag>interpolate</sgmltag> is <sgmltag>linear</sgmltag>.  The
	default value for <sgmltag>extrapolate</sgmltag> is <sgmltag>neither</sgmltag>.
      </para>
      <para>
	Figures <xref linkend="discrete_interpolation_figure" xrefstyle="template:%n"/> and <xref
	linkend="interpolation_figure" xrefstyle="template:%n"/> below give nine different examples
	for a 1D table whose independent values are [1, 3, 4, 6, 7.5] with dependent
	values of [2, 6, 5, 7, 1.5].
      </para>
      <figure id="discrete_interpolation_figure">
        <title> Example of the three discrete enumeration values of <sgmltag>interpolate</sgmltag>
          attribute of the <sgmltag>independentVarPts</sgmltag> and
            <sgmltag>independentVarRef</sgmltag> elements for a 1D
          function table. </title>
        <mediaobject>
          <imageobject role="fo-fop">
            <imagedata fileref="figures/interp_discrete.jpg" format="JPG" contentdepth="100%"
              width="100%" scalefit="1"/>
          </imageobject>
          <imageobject role="html">
            <imagedata fileref="figures/interp_discrete.png" format="PNG"/>
          </imageobject>
        </mediaobject>
      </figure>
      <figure id="interpolation_figure">
        <title> Examples of the three higher-order interpolation methods showing the effect of the
            <sgmltag>interpolate</sgmltag> attribute of the
            <sgmltag>independentVarPts</sgmltag> and
            <sgmltag>independentVarRef</sgmltag> elements for a 1D
          function table. </title>
        <mediaobject>
          <imageobject role="fo-fop">
            <imagedata fileref="figures/interp.jpg" format="JPG" contentdepth="100%" width="100%"
              scalefit="1"/>
          </imageobject>
          <imageobject role="html">
            <imagedata fileref="figures/interp.png" format="PNG"/>
          </imageobject>
        </mediaobject>
      </figure>
    </sect2>

    <sect2 id="statistics">
      <title>Statistical information encoding</title>
      <titleabbrev>Statistics</titleabbrev>
      <para> 
	Statistical measures of variation of certain parameters and functions can be embedded in a
	DAVE-ML model in several ways. This information is captured in an <link
	linkend="uncertainty"> <sgmltag>uncertainty</sgmltag></link> element, which can be
	referenced by <link linkend="variableDef_overview"><sgmltag>variableDef</sgmltag></link>,
	<link linkend="griddedTableDef"><sgmltag>griddedTableDef</sgmltag></link> and <link
	linkend="ungriddedTableDef"><sgmltag>ungriddedTableDef</sgmltag></link> elements.  For
	maximum modeling flexibility, it is possible to add uncertainty to the independent value
	arguments to a function or calculation, to the output of a function itself, as well as to
	any output signal.  Applying uncertainty at more than one location in a calculation change
	is probably not a good practice, however.
	<indexterm>
	  <primary sortas="uncertainty">'uncertainty' element</primary>
	  <secondary>discussion</secondary>
	</indexterm>
	<indexterm>
	  <primary>statistics</primary>
	  <secondary>encoding for</secondary>
	</indexterm>
      </para>
      <para>
	Details on providing the random values for uncertainties is left to the implementer.
      </para>
      <para> Uncertainty in the value of a parameter or function is given in one of two ways,
        depending on the appropriate probability distribution function (<acronym>PDF</acronym>): as
        a Gaussian or normal distribution (bell curve) or as a uniform (evenly spread) distribution.
        One of these distributions is selected by including either a <link linkend="normalPDF">
          <sgmltag>normalPDF</sgmltag>
        </link> or a <link linkend="uniformPDF">
          <sgmltag>uniformPDF</sgmltag>
        </link> element within the <link linkend="uncertainty">
          <sgmltag>uncertainty</sgmltag>
        </link> element. </para>
      <para> 
	Linear correlation between the randomness of two or more variables or functions can be
	specified. Although the correlation between parameters does not have a dependency direction
	(i.e., the statistical uncertainty of one parameter is specified in terms of the other
	parameter, therefore the calculation order does not matter), correlation is customarily
	specified as a dependency of one random variable on the value of another random
	variable. <link linkend="correlatesWith"> <sgmltag>correlatesWith</sgmltag> </link>
	identifies variables or functions whose uncertainty 'depends' on the current value of this
	variable or parameter; the <link linkend="correlation"> <sgmltag>correlation</sgmltag>
	</link> sub-element specifies the correlation coefficient and identifies the (previously
	calculated) random variable or function on which the correlation depends.
      </para>
      <para> These correlation sub-elements only apply to normal (Gaussian) probability distribution
        functions. </para>
      <para> Each of these distribution description elements contain additional information, as
        described below. </para>

      <programlisting>
    <link linkend="uncertainty">uncertainty</link> : effect=['additive'|'multiplicative'|'percentage'|'absolute']
      EITHER
        <link linkend="normalPDF">normalPDF</link> : numSigmas=['1'|'2'|'3']
            <link linkend="bounds">bounds</link> { scalar value representing the one, two or three sigma bound }: 
            (<link linkend="correlatesWith">correlatesWith</link>* : varID |
             <link linkend="correlation">correlation</link>* : varID, corrCoef )
      OR
        <link linkend="uniformPDF">uniformPDF</link>
            <link linkend="bounds">bounds</link> { one or two scalar values for abs. or min/max bounds }
      </programlisting>

      <variablelist>
        <title><link linkend="uncertainty">
            <sgmltag>uncertainty</sgmltag>
          </link> attributes:</title>
        <varlistentry>
          <term>
	    <indexterm>
	      <primary sortas="effect">'effect' attribute</primary>
	      <secondary>of 'uncertainty' element</secondary>
	    </indexterm>
            <sgmltag>effect</sgmltag>
          </term>
          <listitem>
            <para>Indicates, by choice of four enumerated values, how the uncertainty is modeled: as
              an additive, multiplicative, or percentage variation from the nominal value, or a
              specific number (absolute).</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <variablelist>
        <title><link linkend="uncertainty">
            <sgmltag>uncertainty</sgmltag>
          </link> sub-elements:</title>
        <varlistentry>
          <term>
	    <indexterm>
	      <primary sortas="normalPDF">'normalPDF' element</primary>
		<secondary>as child of 'uncertainty' element</secondary>
	    </indexterm>
            <sgmltag>normalPDF</sgmltag>
          </term>
          <listitem>
            <para> If present, the uncertainty in the parameter value has a probability distribution
              that is Gaussian (bell-shaped). A single parameter representing the additive
              (&plusmn; some value), percentage (&plusmn; some %) of variation from the
              nominal value in terms of 1, 2, 3, or more standard deviations (sigmas) is specified.
              Note:  multiplicative and absolute bounds do not make much sense. </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
	    <indexterm>
	      <primary sortas="uniformPDF">'uniformPDF' element</primary>
	      <secondary>as child of 'uncertainty' element</secondary>
	    </indexterm>
            <sgmltag>uniformPDF</sgmltag>
          </term>
          <listitem>
            <para> If present, the uncertainty in the parameter or function value has a uniform
              likelihood of taking on any value between symmetric or asymmetric boundaries, which
              are specified in terms of additive (either &plusmn;x or +x/-y), multiplicative,
              percentage, or absolute variations. If absolute, the specified range of values must
              bracket the nominal value. For this element, the <link linkend="bounds">
                <sgmltag>bounds</sgmltag>
              </link> sub-element may contain one or two values, in which case the boundaries are
              symmetric or asymmetric. </para>
          </listitem>
        </varlistentry>
      </variablelist>

      <example id="uncertainty_example_1">
	<?dbfo keep-together="auto"?>
        <title>A variable with absolute uncertainty bounds</title>
        <para> 
	  This example<indexterm><primary sortas="uncertainty">'uncertainty'
	  element</primary><secondary>example of</secondary><tertiary>with absolute
	  bounds</tertiary></indexterm> shows how to specify that a constant parameter can take on a
	  specified range of values with uniform probability distribution. The nominal value of the
	  minimum drag coefficient is specified to be 0.005, but when performing parametric
	  variations, it is allowed to take on values between 0.001 and 0.01.
	</para>

        <programlisting>
&lt;DAVEfunc&gt;
    &lt;fileHeader&gt;
      .
      .
      .
    &lt;/fileHeader&gt;
    &lt;variableDef name="CD zero" varID="CDo" units="nd" initialValue="0.005"&gt;     <co id="uncert1-note-1-co" linkends="uncert1-note-1"/>
        &lt;description&gt;
            Minimum coefficient of drag with an 
            asymmetric uniform uncertainty band
        &lt;/description&gt;
        &lt;isOutput/&gt;
        &lt;uncertainty effect="absolute"&gt;    <co id="uncert1-note-2-co" linkends="uncert1-note-2"/>
            &lt;uniformPDF&gt;
                &lt;bounds&gt;0.001&lt;/bounds&gt;
                &lt;bounds&gt;0.010&lt;/bounds&gt;
            &lt;/uniformPDF&gt;
        &lt;/uncertainty&gt;
    &lt;/variableDef&gt;
 &lt;/DAVEfunc&gt;
        </programlisting>
        <calloutlist>
          <callout arearefs="uncert1-note-1-co" id="uncert1-note-1">
            <para> We declare the parameter <varname>CDo</varname> as having a nominal value of
              0.005. </para>
          </callout>
          <callout arearefs="uncert1-note-2-co" id="uncert1-note-2">
            <para> When parametric variations are applied, the value of <varname>CDo</varname> can
              vary uniformly between 0.001 and 0.010. </para>
          </callout>
        </calloutlist>
      </example>

      <example id="uncertainty_example_2">
	<?dbfo keep-together="auto"?>
        <title>10% uncertainty applied to output variable with a uniform distribution</title>
        <para>
	  This example<indexterm><primary sortas="uncertainty">'uncertainty'
	  element</primary><secondary>example
	  of</secondary><tertiary>percentage</tertiary></indexterm> shows how to specify that a
	  variable has a 10% uniformly distributed uncertainty band. In this example, the output
	  variable comes from a nonlinear 1D function and the uncertainty is applied to the output
	  of the table.
	</para>

        <programlisting>
&lt;DAVEfunc&gt;
    &lt;fileHeader&gt;
       .
       .
       .
    &lt;/fileHeader&gt;
    &lt;variableDef name="angleOfAttack" varID="Alpha_deg" units="deg"&gt;
        &lt;isStdAIAA/&gt;
    &lt;/variableDef&gt;
    &lt;variableDef name="Cm_u" varID="Cm_u" units="nd"&gt;
        &lt;description&gt;
            Coefficient of pitching moment with 10 percent 
            symmetric uniform uncertainty band
        &lt;/description&gt;
        &lt;isOutput/&gt;
        &lt;uncertainty effect="percentage"&gt;    <co id="uncert2-note-1-co" linkends="uncert2-note-1"/>
            &lt;uniformPDF&gt;
                &lt;bounds&gt;10.0&lt;/bounds&gt;
            &lt;/uniformPDF&gt;
        &lt;/uncertainty&gt;
    &lt;/variableDef&gt;
    &lt;breakpointDef bpID="ALP"&gt;
        &lt;bpVals&gt;0, 5, 10, 15, 20, 25, 30, 35&lt;/bpVals&gt;
    &lt;/breakpointDef&gt;
    &lt;function name="Nominal Cm"&gt;
        &lt;description&gt;
            Nominal pitching moment values prior to application 
            of uncertainty
        &lt;/description&gt;
        &lt;independentVarRef varID="Alpha_deg"/&gt;
        &lt;dependentVarRef varID="Cm_u"/&gt;
        &lt;functionDefn&gt;   <co id="uncert2-note-2-co" linkends="uncert2-note-2"/>
            &lt;griddedTableDef&gt;
                &lt;breakpointRefs&gt;
                    &lt;bpRef bpID="ALP"/&gt;
                &lt;/breakpointRefs&gt;
                &lt;dataTable&gt;
5.2, 4.3, 3.1, 1.8, 0.3, 0.1, 0.0, -0.1
                &lt;/dataTable&gt;
            &lt;/griddedTableDef&gt;
        &lt;/functionDefn&gt;
    &lt;/function&gt;
&lt;/DAVEfunc&gt;
        </programlisting>
        <calloutlist>
          <callout arearefs="uncert2-note-1-co" id="uncert2-note-1">
            <para> We declare the output variable <varname>Cm_u</varname> as having the uncertainty
              of &plusmn;10% uniform distribution. </para>
          </callout>
          <callout arearefs="uncert2-note-2-co" id="uncert2-note-2">
            <para> This function gives the nominal values of <varname>Cm_u</varname> as a
              1D function of angle-of-attack (alpha). </para>
          </callout>
        </calloutlist>
      </example>

      <example id="uncertainty_example_3">
	<?dbfo keep-together="auto"?>
        <title>Asymmetric additive uncertainty applied to output variable with uniform
          distribution</title>
        <para> 
	  This example<indexterm><primary sortas="uncertainty">'uncertainty'
	  element</primary><secondary>example
	  of</secondary><tertiary>additive</tertiary></indexterm> shows how to specify that a
	  variable has an asymmetric, uniformly distributed, additive uncertainty band. In this
	  example, the output variable comes from a nonlinear 1D function and the uncertainty is
	  applied to the output of the table.
	</para>
        <programlisting>
&lt;DAVEfunc&gt;
    &lt;fileHeader&gt;
      .
      .
      .
    &lt;/fileHeader&gt;
    &lt;variableDef name="angleOfAttack" varID="Alpha_deg" units="deg"&gt;
        &lt;isStdAIAA/&gt;
    &lt;/variableDef&gt;
    &lt;variableDef name="Cm_u" varID="Cm_u" units="nd"&gt;
        &lt;description&gt;
            Coefficient of pitching moment with an 
            asymmetric uniform uncertainty band
        &lt;/description&gt;
        &lt;isOutput/&gt;
        &lt;uncertainty effect="additive"&gt;  <co id="uncert3-note-1-co" linkends="uncert3-note-1"/>
            &lt;uniformPDF&gt;
                &lt;bounds&gt;-0.50&lt;/bounds&gt;
                &lt;bounds&gt;0.00&lt;/bounds&gt;
            &lt;/uniformPDF&gt;
        &lt;/uncertainty&gt;
    &lt;/variableDef&gt;
    &lt;breakpointDef bpID="ALP"&gt;
        &lt;bpVals&gt;0, 5, 10, 15, 20, 25, 30, 35&lt;/bpVals&gt;
    &lt;/breakpointDef&gt;
    &lt;function name="Nominal Cm"&gt;
        &lt;description&gt;
            Nominal pitching moment values prior to application 
            of uncertainty
        &lt;/description&gt;
        &lt;independentVarRef varID="Alpha_deg"/&gt;
        &lt;dependentVarRef varID="Cm_u"/&gt;   <co id="uncert3-note-2-co" linkends="uncert3-note-2"/>
        &lt;functionDefn&gt;
            &lt;griddedTableDef&gt;
                &lt;breakpointRefs&gt;
                    &lt;bpRef bpID="ALP"/&gt;
                &lt;/breakpointRefs&gt;
                &lt;dataTable&gt;
5.2, 4.3, 3.1, 1.8, 0.3, 0.1, 0.0, -0.1
                &lt;/dataTable&gt;
            &lt;/griddedTableDef&gt;
        &lt;/functionDefn&gt;
    &lt;/function&gt;
&lt;/DAVEfunc&gt;
        </programlisting>
        <calloutlist>
          <callout arearefs="uncert3-note-1-co" id="uncert3-note-1">
            <para> We declare the output variable <varname>Cm_u</varname> varies by as much as &#8722;0.5
              to +0.0 about the nominal value. This delta value is in the same units as the nominal
              value (i.e. it is not a multiplier or percentage but an additive delta to the nominal
              value which comes from the 1D <varname>Cm_u</varname> function table
              description). </para>
          </callout>
          <callout arearefs="uncert3-note-2-co" id="uncert3-note-2">
            <para> This function gives the nominal values of <varname>Cm_u</varname> as a
              1D function of angle-of-attack (alpha). </para>
          </callout>
        </calloutlist>
      </example>

      <example id="uncertainty_example_4">
	<?dbfo keep-together="auto"?>
        <title>A 1D point-by-point, Gaussian distribution function</title>
        <para>
	  In this example<indexterm><primary sortas="uncertainty">'uncertainty'
	  element</primary><secondary>example of</secondary><tertiary>normal
	  distribution</tertiary></indexterm>, a Gaussian (normal) distribution function is applied
	  to <emphasis>each</emphasis> point in a 1D function table, with the 3-sigma value
	  expressed as a multiplier of the nominal value.
	</para>

        <programlisting>
&lt;DAVEfunc&gt;
    &lt;fileHeader&gt;
       .
       .
       .
    &lt;/fileHeader&gt;
    &lt;variableDef name="angleOfAttack" varID="Alpha_deg" units="deg"&gt;
        &lt;isStdAIAA/&gt;
    &lt;/variableDef&gt;
    &lt;variableDef name="Cm_u" varID="Cm_u" units="nd"&gt;
        &lt;description&gt;
            Coefficient of pitching moment with 10 percent 
            symmetric uniform uncertainty band
        &lt;/description&gt;
        &lt;isOutput/&gt;
    &lt;/variableDef&gt;
    &lt;breakpointDef bpID="ALP"&gt;
        &lt;bpVals&gt;0, 5, 10, 15, 20, 25, 30, 35&lt;/bpVals&gt;
    &lt;/breakpointDef&gt;
  &lt;function name="Uncertain Cm"&gt;
    &lt;independentVarRef varID="Alpha_deg"/&gt;
    &lt;dependentVarRef varID="Cm_u"/&gt;
    &lt;functionDefn&gt;
      &lt;griddedTableDef&gt;
        &lt;breakpointRefs&gt;
          &lt;bpRef bpID="ALP"/&gt;
        &lt;/breakpointRefs&gt;
        &lt;uncertainty effect="multiplicative"&gt;  <co id="uncert4-note-1-co" linkends="uncert4-note-1"/>
          &lt;normalPDF numSigmas="3"&gt;  <co id="uncert4-note-2-co" linkends="uncert4-note-2"/>
            &lt;bounds&gt;
              &lt;dataTable&gt;  <co id="uncert4-note-3-co" linkends="uncert4-note-3"/>
                0.10, 0.08, 0.06, 0.05, 0.05, 0.06, 0.07, 0.12
              &lt;/dataTable&gt;
            &lt;/bounds&gt;
          &lt;/normalPDF&gt;
        &lt;/uncertainty&gt;
        &lt;dataTable&gt;   <co id="uncert4-note-4-co" linkends="uncert4-note-4"/>
          5.2, 4.3, 3.1, 1.8, 0.3, 0.1, 0.0, -0.1
        &lt;/dataTable&gt;
      &lt;/griddedTableDef&gt;
    &lt;/functionDefn&gt;
  &lt;/function&gt;
&lt;/DAVEfunc&gt;
        </programlisting>
        <calloutlist>
          <callout arearefs="uncert4-note-1-co" id="uncert4-note-1">
            <para> This declares the statistical uncertainty bounds of the <varname>Cm_u</varname>
              dependent variable will be expressed as a multiplication of the nominal value. </para>
          </callout>
          <callout arearefs="uncert4-note-2-co" id="uncert4-note-2">
            <para> This declares that the probability distribution is a normal distribution and the
              bounds represent 3-sigma (99.7%) confidence bounds. </para>
          </callout>
          <callout arearefs="uncert4-note-3-co" id="uncert4-note-3">
            <para> This table lists three-sigma bounds of each point of the <varname>Cm_u</varname>
              function as a table. The table must have the same dimensions and independent variable
              arguments as the nominal function; it is in effect an overlay to the nominal function
              table, but the values represent the bounds as multiples of the nominal function value.
            </para>
          </callout>
          <callout arearefs="uncert4-note-4-co" id="uncert4-note-4">
            <para> This table defines the nominal values of the function; these values will be used
              if the random variable associated with the uncertainty of this function is zero or
              undefined by the application. </para>
          </callout>
        </calloutlist>
      </example>

      <example id="uncertainty_example_5">
	<?dbfo keep-together="auto"?>
        <title>Two nonlinear functions with correlated uncertainty</title>
        <para>
	  In this example<indexterm><primary sortas="uncertainty">'uncertainty'
	  element</primary><secondary>example of</secondary><tertiary>with
	  correlation</tertiary></indexterm>, uncertainty in pitching-moment coefficient varies in
	  direct correlation with lift coefficient uncertainty.
	</para>

        <programlisting>
&lt;DAVEfunc&gt;
    &lt;fileHeader&gt; . . . &lt;/fileHeader&gt;
    &lt;variableDef name="angleOfAttack" varID="Alpha_deg" units="deg"&gt;
        &lt;isStdAIAA/&gt;
    &lt;/variableDef&gt;
    &lt;variableDef name="CL_u" varID="CL_u" units="nd"&gt;
        &lt;description&gt; Coefficient of lift with a symmetric Gaussian uncertainty 
            of 20%; correlates with Cm uncertainty. &lt;/description&gt;
        &lt;uncertainty effect="multiplicative"&gt;    <co id="uncert5-note-1-co" linkends="uncert5-note-1"/>
            &lt;normalPDF numSigmas="3"&gt;
                &lt;bounds&gt;0.20&lt;/bounds&gt;
                &lt;correlatesWith varID="Cm_u"/&gt;   <co id="uncert5-note-2-co" linkends="uncert5-note-2"/>
            &lt;/normalPDF&gt;
        &lt;/uncertainty&gt;
    &lt;/variableDef&gt;
    &lt;variableDef name="Cm_u" varID="Cm_u" units="nd"&gt;
        &lt;description&gt; Coefficient of pitching moment with a symmetric Gaussian uncertainty
            distribution of 30%; correlates directly with lift uncertainty. &lt;/description&gt;
        &lt;isOutput/&gt;
        &lt;uncertainty effect="percentage"&gt;        <co id="uncert5-note-3-co" linkends="uncert5-note-3"/>
            &lt;normalPDF numSigmas="3"&gt;
                &lt;bounds&gt;30&lt;/bounds&gt;
                &lt;correlation varID="CL_u" corrCoef="1.0"/&gt;  <co id="uncert5-note-4-co" linkends="uncert5-note-4"/>
            &lt;/normalPDF&gt;
        &lt;/uncertainty&gt;
    &lt;/variableDef&gt;
    &lt;breakpointDef bpID="ALP"&gt;
        &lt;bpVals&gt;0, 5, 10, 15, 20, 25, 30, 35&lt;/bpVals&gt;
    &lt;/breakpointDef&gt;
    &lt;function name="Nominal CL"&gt;
        &lt;description&gt; Nominal lift coefficient values prior to uncertainty &lt;/description&gt;
        &lt;independentVarRef varID="Alpha_deg"/&gt;
        &lt;dependentVarRef varID="CL_u"/&gt;
        &lt;functionDefn&gt;
            &lt;griddedTableDef&gt;
                &lt;breakpointRefs&gt;&lt;bpRef bpID="ALP"/&gt;&lt;/breakpointRefs&gt;
                &lt;dataTable&gt; 0.0, 0.1, 0.2, 0.3, 0.4, 0.45, 0.5, 0.45 &lt;/dataTable&gt;
            &lt;/griddedTableDef&gt;
        &lt;/functionDefn&gt;
    &lt;/function&gt;
    &lt;function name="Nominal Cm"&gt;
        &lt;description&gt; Nominal pitching moment values prior to uncertainty &lt;/description&gt;
        &lt;independentVarRef varID="Alpha_deg"/&gt;
        &lt;dependentVarRef varID="Cm_u"/&gt;
        &lt;functionDefn&gt;
            &lt;griddedTableDef&gt;
                &lt;breakpointRefs&gt;&lt;bpRef bpID="ALP"/&gt;&lt;/breakpointRefs&gt;
                &lt;dataTable&gt; 5.2, 4.3, 3.1, 1.8, 0.3, 0.1, 0.0, -0.1 &lt;/dataTable&gt;
            &lt;/griddedTableDef&gt;
        &lt;/functionDefn&gt;
    &lt;/function&gt;
&lt;/DAVEfunc&gt;
        </programlisting>

        <calloutlist>
          <callout arearefs="uncert5-note-1-co" id="uncert5-note-1">
            <para> 
	      Lift coefficient has a nominal value that varies with angle-of-attack according to a
	      nonlinear 1D table (given in the "Nominal CL" table defined in this
	      example). When performing parametric variations, <varname>CL_u</varname> can take on a
	      multiplicative variation of up to 20% (3-sigma) with a Gaussian distribution.
	    </para>
          </callout>
          <callout arearefs="uncert5-note-2-co" id="uncert5-note-2">
            <para> 
	      This element indicates that the variation of lift coefficient correlates directly with
	      the variation in pitching moment coefficient.
	    </para>
          </callout>
          <callout arearefs="uncert5-note-3-co" id="uncert5-note-3">
            <para> 
	      Pitching-moment coefficient has a nominal value that varies as a function of
	      angle-of-attack, according to a nonlinear 1D table (given in the "Nominal Cm" table
	      defined in this example). When performing parametric variations,
	      <varname>Cm_u</varname> can take on a 30% variation (3-sigma) with a Gaussian
	      distribution.
	    </para>
          </callout>
          <callout arearefs="uncert5-note-4-co" id="uncert5-note-4">
            <para> This element indicates that the variation of pitching moment correlates directly
              with the variation in lift coefficient. </para>
          </callout>
        </calloutlist>
      </example>

    </sect2>

    <sect2 id="conventions">
      <title>Additional DAVE-ML conventions</title>
      <titleabbrev>Conventions</titleabbrev>

      <para>
	To facilitate the interpretation of DAVE-ML packages, the following conventions are
	proposed. Failure to follow any of these conventions should be noted prominently in the data
	files and any cover documentation.
      </para>

      <sect3 id="point_order">
        <title>Ordering of points</title>
        <titleabbrev>Point order</titleabbrev>
        <para> 
	  In listing data points in multi-dimensional table definitions, the sequence should be such
	  that the last dimension changes most rapidly. In other words, a table that is a function
	  of <emphasis>f(a,b,c)</emphasis> should list the value for <emphasis>f(1,1,1)</emphasis>,
	  then <emphasis>f(1,1,2)</emphasis>, etc. This may be different than, say, a Fortran DATA,
	  Matlab&reg; script or C++ initialization statement; the responsibility for mapping the
	  data in the correct sequence in the model realization is left up to the implementer.
	  <indexterm><primary>points, ordering of</primary></indexterm>
        </para>
	<para>
	  <xref linkend="table_order_figure" xrefstyle="template:Figure %n"/> below shows how a
	  3D table is represented as an unraveled list of points.
	</para>
	<figure id="table_order_figure">
	  <title>An unraveled list compared to the original 3D table</title>
	  <mediaobject>
	    <imageobject role="fo-fop">
	      <imagedata fileref="figures/unraveled_table.png" format="PNG" width="100%"/>
	    </imageobject>
	    <imageobject role="html">
	      <imagedata fileref="figures/unraveled_table.png" format="PNG" width="100%"/>
	    </imageobject>
	  </mediaobject>
	</figure>
      </sect3>

      <sect3 id="locus">
        <title>Locus of action of moments</title>
        <titleabbrev>Moment Reference</titleabbrev>

        <para>It is recommended that all force and moments be considered to act around a defined
          reference point, given in aircraft coordinates. It is further recommended that all
          subsystem models (aerodynamic, propulsive, alighting gear) provide total forces and
          moments about this reference point and leave the transfer of moments to the center of mass
          to the equations of motion.
	  <indexterm><primary>moment reference center</primary></indexterm>
	</para>

      </sect3>

      <sect3 id="decomp">
        <title>Decomposition of flight dynamics subsystems</title>
        <titleabbrev>Subsystem decomposition</titleabbrev>

        <para>It is recommended that a vehicle's flight dynamics reactions be modeled, at least at
          the highest level, as aerodynamic, propulsive, and landing/arresting/launch gear models.
          This is common practice in most aircraft simulation environments familiar to the
          authors.
	  <indexterm><primary>subsystems</primary></indexterm>
	</para>

      </sect3>

      <sect3 id="date_format_note">
        <title>Date format in DAVE-ML</title>
        <titleabbrev>Date format</titleabbrev>

        <para>
	  The recommended way of representing dates in DAVE-ML documentation, especially date
	  attributes and creation date elements, is numerically in the order YYYY-MM-DD. Thus, July
	  15, 2003 is given as 2003-07-15. This formatting convention conforms to the ISO-8601
	  standard for representing dates. <link linkend="ISO8601"><citation>ISO8601</citation></link>
	  <indexterm><primary>date format</primary></indexterm>
	</para>

      </sect3>

      <sect3 id="signs">
        <title>Common sign convention notation</title>
        <titleabbrev>Sign conventions</titleabbrev>

	<para>
	  A convention for indicating positive sign conventions for measurements is included in
	  Annex A of the draft AIAA Flight Dynamics Model Exchange Standard <link
	  linkend="AIAA10"><citation>AIAA10</citation></link>. These acronyms, if applicable, should
	  be used whenever possible to enhance communications.
	  <indexterm><primary>sign convention</primary></indexterm>
	</para>
      </sect3>

      <sect3 id="uofm">
        <title>Units-of-measure abbreviation</title>
        <titleabbrev>Units</titleabbrev>
        <para> 
	  Each variable definition includes a mandatory <sgmltag>units</sgmltag>
	  attribute. This attribute gives the units-of-measure for the signal represented by the
	  variable and either 'nd' (for non-dimensional) or blank if the signal is a dimensionless
	  quantity or flag. In addition, the use of 'fract' to indicate a fraction (0-1) or 'pct' to
	  indicate a percentage (0-100 or more) is encouraged.
	</para>
        <para> 
	  Informally, this attribute can take on any reasonable abbreviation for a set of units that
	  might be understandable by the intended audience, in either set of units (English or
	  ISO). For greater re-usability, it is recommended that the set of measurements listed in
	  the <emphasis>AIAA Flight Dynamics Model Exchange Standard</emphasis> <link
	  linkend="AIAA10"><citation>AIAA10</citation></link> (of which this document is a part) be
	  used.  The Standard recommends how to encode powers of units (f_s2 for ft/sec^2, for
	  example).
	  <indexterm><primary>units-of-measure</primary></indexterm>
        </para>
      </sect3>
      <sect3 id="identifiers">
	<title>Internal identifiers</title>
	<titleabbrev>XML Identifiers</titleabbrev>
	<para>
	  Identifiers are used throughout DAVE-ML to connect signals, functions, modification
	  records and reference documents with each other, e.g., <sgmltag>utID</sgmltag>,
	  <sgmltag>gtID</sgmltag>, <sgmltag>bpID</sgmltag>, <sgmltag>refID</sgmltag>, etc. These
	  identifiers are character strings that must comply with the <acronym>XML</acronym>
	  specification for Names <link linkend="W3C-XML"><citation>W3C-XML</citation></link>. They
	  must start with a character or underbar, may not start with "xml" or "XML," and may not
	  contain colons, among other restrictions. In addition, the identifiers must be unique
	  within a single DAVE-ML file. See the <acronym>XML</acronym> <xref linkend="W3C-XML"
	  xrefstyle="template:XML specification"/> for more information regarding valid
	  <acronym>XML</acronym> Names. 

	  <indexterm><primary>ID strings</primary></indexterm>
	</para>
      </sect3>

      <sect3 id="namespaces">
        <title><acronym>DAVE-ML</acronym> Namespace</title>
        <titleabbrev>Namespace</titleabbrev>
        <para> 
	  The <acronym>XML</acronym> standard allows for namespace domains, in which element names
	  belong to either the empty (null) namespace or to a namespace that belongs to a particular
	  <acronym>XML</acronym> grammar. Namespaces are identified by a uniform resource identifier
	  (URI) that is fashioned, similar to a URL, in order that uniqueness is guaranteed.
	</para>
	<para>
	  The DAVE-ML namespace should be defined in the top-level element as follows:
	  <programlisting>
          &lt;DAVEfunc xmlns="http://daveml.org/2010/DAVEML"&gt;
	  </programlisting>
	  This will allow DAVE-ML models to be embedded in other <acronym>XML</acronym> documents
	  without confusion.  Note that this general URI is not a URL; HTTP queries at that address
	  may not lead to any useful information. 
	  <indexterm><primary>namespace, XML</primary></indexterm>
	  <indexterm><primary>XML namespace</primary></indexterm>
	</para>
        <para> 
	  The <sgmltag>reference</sgmltag> element can include two elements that belong to
	  the World-Wide Web Consortium (W3C)'s XLINK protocol <citation><link
	  linkend="W3C-XLINK">W3C-XLINK</link></citation>; they are defined with an
	  <sgmltag>xlink:</sgmltag> prefix which actually refers to the namespace uniquely defined
	  with the <sgmltag>http://www.w3c.org/1999/xlink</sgmltag> URI. If external links to
	  documents will be included in a DAVE-ML document, the top-level element (currently
	  <sgmltag>reference</sgmltag>) <emphasis>must</emphasis> include a namespace
	  declaration (which looks like, but technically is not, an attribute):
          <programlisting>
          &lt;reference xmlns:xlink="http://www.w3.org/1999/xlink"&gt;
          </programlisting>
	</para>
        <para> Similarly, the MathML-2 elements are normally defined in a MathML namespace, so any
          calculation defined using MathML-2 notation should be conducted inside the MathML namespace:
          <programlisting>
          &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
	  </programlisting>
        </para>

      </sect3>

    </sect2>

    <sect2 id="growth">
      <title>Planned major elements</title>
      <titleabbrev>Future</titleabbrev>

      <para>Additional major elements may be defined to support the goal of rapid exchange of
        simulation models, including <itemizedlist>

	  <listitem>
	    <para>
	      Support for vector and matrix variables and math operations.
	    </para>
	  </listitem>

          <listitem>
            <para>
	      Subsystem models, to support hierarchical decomposition and problem
              abstraction.
	    </para>
          </listitem>

          <listitem>
            <para>State variables, both discrete and continuous, to support dynamic models.</para>
          </listitem>

          <listitem>
            <para>Dynamic (time-history) data file format, to allow for validation check-cases for
              dynamic models</para>
          </listitem>

        </itemizedlist>
	<indexterm><primary>future plans</primary></indexterm>
      </para>
    </sect2>

  </sect1>

  <?hard-pagebreak?>

  <sect1 id="info">
    <title>Further information</title>
    <titleabbrev>More information</titleabbrev>
    <beginpage/>

    <para>
      Further information, background, and the latest <acronym>DTD</acronym> and example models of some
      aircraft data packages can be found at the DAVE-ML web site: <ulink
      url="http://daveml.org"/>
    </para>

  </sect1>

  <?hard-pagebreak?>

  &DAVEfunc_ref_auto;

  <?hard-pagebreak?>

  <ackno revisionflag="changed"> 
    The editors would like to acknowledge the contributions, encouragement and helpful suggestions
    for steering the evolution of DAVE-ML from the following individuals:

    Trey Arthur (NASA Langley Research Center),                               <indexterm><primary>Arthur, Jarvis A., III</primary></indexterm>
    Jon Berndt (Jacobs Sverdrup),                                             <indexterm><primary>Berndt, Jon S.</primary></indexterm>
    Geoff Brian (Australian DSTO),                                            <indexterm><primary>Brian, Geoffrey J.</primary></indexterm>
    Randy Brumbaugh (Indigo Innovations),                                     <indexterm><primary>Brumbaugh, Randy</primary></indexterm>
    Carey Buttrill (NASA Langley Research Center),                            <indexterm><primary>Buttrill, Carey S.</primary></indexterm>
    Giovanni Cignoni (University of Pisa),                                    <indexterm><primary>Cignoni, Giovanni A.</primary></indexterm>
    Bill Cleveland (NASA Ames Research Center),                               <indexterm><primary>Cleveland, William</primary></indexterm>
    Zack Crues (NASA Johnson Space Center),                                   <indexterm><primary>Crues, Edwin Z.</primary></indexterm>
    Rob Falck (NASA Glenn Research Center),                                   <indexterm><primary>Falck, Robert D.</primary></indexterm>
    Jeremy Furtek (Delphi Research),                                          <indexterm><primary>Furtek, Jeremy</primary></indexterm>
    Peter Grant (UTIAS),                                                      <indexterm><primary>Grant, Peter</primary></indexterm> 
    David Hasan (L-3 Communications, Houston),                                <indexterm><primary>Hasan, David A.</primary></indexterm>
    Bruce Hildreth (J.F. Taylor, Inc, Lexington Park),                        <indexterm><primary>Hildreth, Bruce L.</primary></indexterm>
    Missy Hill (UNISYS),                                                      <indexterm><primary>Hill, Melissa</primary></indexterm>
    Matt Jessick (L-3 Communications, Houston),                               <indexterm><primary>Jessick, Matthew V.</primary></indexterm>
    Hilary Keating (Fortburn Pty. Ltd.),                                      <indexterm><primary>Keating, Hilary</primary></indexterm>
    Dennis Linse (SAIC),                                                      <indexterm><primary>Linse, Dennis J.</primary></indexterm> 
    Bill Othon (NASA Johnson Space Center),                                   <indexterm><primary>Othon, William L.</primary></indexterm> 
    Mike Madden (NASA Langley Research Center),                               <indexterm><primary>Madden, Michael M.</primary></indexterm>
    Greg McCarthy (NASA Dryden Flight Research Center),                       <indexterm><primary>McCarthy, Thomas G.</primary></indexterm>
    Dana McMinn (NASA Langley Research Center),                               <indexterm><primary>McMinn, J. Dana</primary></indexterm>
    Dan Murri (NASA Engineering and Safety Center, Hampton),                  <indexterm><primary>Murri, Daniel G.</primary></indexterm>
    Dan Newman (formerly Ball Aerospace, now Quantitative Aeronautics),       <indexterm><primary>Newman, Daniel M.</primary></indexterm>
    John Penn (L-3 Communcations, Houston)                                    <indexterm><primary>Penn, John M.</primary></indexterm>
    Riley Rainey (SDS International),                                         <indexterm><primary>Rainey, Riley</primary></indexterm>
    Mike Red (NASA Johnson Space Center),                                     <indexterm><primary>Red, Michael T.</primary></indexterm>
    Brent York (formerly NAVAIR, now Indra Systems, Inc.),                    <indexterm><primary>York, Brent</primary></indexterm>
      and
    Curtis Zimmerman (NASA Marshall Space Flight Center).                     <indexterm><primary>Zimmerman, Curtis J.</primary></indexterm>
  </ackno>

  <?hard-pagebreak?>

  <bibliography id="biblio">
    <title>References</title>
    <titleabbrev>References</titleabbrev>

    <bibliomixed id="Acevedo07">
      <bibliomset relation="paper"> : <surname>Acevedo</surname>, <firstname>Amanda</firstname>;
          <surname>Arnold</surname>, <firstname>Jason</firstname>; <surname>Othon</surname>,
          <firstname>William</firstname>; and <surname>Berndt</surname>, <firstname>Jon</firstname>
        : <title role="paper">ANTARES: Spacecraft Simulation for Multiple User Communities and
          Facilities</title>. <subtitle>AIAA 2007-6888</subtitle>, presented at the AIAA Modeling
        and Simulation Technologies Conference, 20 August 2007, Hilton Head, South Carolina.
      </bibliomset>
    </bibliomixed>

    <bibliomixed id="AIAA92">
      <bibliomset relation="book"> : <corpauthor>American Institute of Aeronautics and
          Astronautics</corpauthor> : <title>American National Standard: Recommended Practice for
          Atmospheric and Space Flight Vehicle Coordinate Systems</title>. <subtitle>ANSI/AIAA
          R-004-1992</subtitle>
      </bibliomset>
    </bibliomixed>

    <bibliomixed id="AIAA01">
      <bibliomset relation="article"> : <corpauthor>AIAA Flight
      Simulation Technical Committee</corpauthor> : <title><ulink
      url="http://daveml.nasa.gov/AIAA_stds/SimParNames_May_2007_v2.pdf">Standard
      Simulation Variable Names</ulink></title>,
      <subtitle>Draft</subtitle>, <pubdate>May 2007</pubdate>
      </bibliomset>
    </bibliomixed>

    <bibliomixed id="AIAA03">
      <bibliomset relation="article"> : <corpauthor>AIAA Modeling and Simulation Technical
      Committee</corpauthor> : <title><ulink
      url="http://daveml.nasa.gov/AIAA_stds/SimDataExchange_Jan2003.pdf">Standards for the Exchange
      of Simulation Modeling Data</ulink></title>, <subtitle>Preliminary Draft</subtitle>,
      <pubdate>Jan 2003</pubdate>
      </bibliomset>
    </bibliomixed>

    <bibliomixed id="AIAA10">
      <bibliomset relation="book"> : <corpauthor>American Institute of Aeronautics and
      Astronautics</corpauthor> : <title><ulink
      url="http://info.aiaa.org/Standards/AS/DAVE">American National Standard: Flight Dynamics Model
      Exchange Standard (Draft)</ulink></title>. <subtitle>BSR/AIAA S-119-201x</subtitle>
      </bibliomset>
    </bibliomixed>

    <bibliomixed id="Brian05">
      <bibliomset relation="paper"> : <surname>Brian</surname>, <firstname>Geoff</firstname>;
          <surname>Young</surname>, <firstname>Michael</firstname>; <surname>Newman</surname>,
          <firstname>Daniel</firstname>; <surname>Curtin</surname>, <firstname>Robert</firstname>;
        and <surname>Keating</surname>, <firstname>Hilary</firstname> : <title role="paper">
          <ulink url="http://www.siaa.asn.au/get/2411855949.pdf"> The Quest for a Unified Aircraft
            Dataset Format </ulink>
        </title>. Presented at the Simulation Industry Association of Australia, 2005. </bibliomset>
    </bibliomixed>

    <bibliomixed id="Durak06">
      <bibliomset relation="paper"> : <surname>Durak</surname>, <firstname>Umut</firstname>;
          <surname>Oguztuzun</surname>, <firstname>Halit</firstname>; and <surname>Ider</surname>,
          <firstname>S. Kemal</firstname> : <title role="paper"> An Ontology for Trajectory
          Simulation </title>. Proceedings of the 2006 Winter Simulation Conference, 2006.
      </bibliomset>
    </bibliomixed>

    <bibliomixed id="Hildreth94">
      <bibliomset relation="paper"> : <surname>Hildreth</surname>, <firstname>B. L.</firstname>:
      <title role="paper">A Process for the Development of Simulation Standards</title>.
      <subtitle>AIAA 94-3430</subtitle>, presented at the AIAA Flight Simulation Technologies
      Conference, August 1994, Baltimore, Maryland.</bibliomset>
    </bibliomixed>

    <bibliomixed id="Hildreth98">
      <bibliomset relation="paper"> : <surname>Hildreth</surname>, <firstname>Bruce L.</firstname>:
      <title role="paper">The Draft AIAA Flight Mechanics Modeling Standard: An Opportunity for
      Industry Feedback</title>.  <subtitle>AIAA 98-4576</subtitle>, presented at the AIAA Modeling
      and Simulation Technologies Conference, August 1998, Boston, Massachusetts.</bibliomset>
    </bibliomixed>

    <bibliomixed id="Hildreth08">
      <bibliomset relation="paper"> : <surname>Hildreth</surname>, <firstname>Bruce</firstname>;
      <surname>Linse</surname>, <firstname>Dennis J.</firstname>; and <surname>Dicola</surname>,
      <firstname>John</firstname> : <title role="paper">Pseudo Six Degree of Freedom (6DOF) Models
      for Higher Fidelity Constructive Simulations</title>.  <subtitle>AIAA 2008-6857</subtitle>,
      presented at the AIAA Modeling and Simulation Technologies Conference, 18 August 2008,
      Honolulu, Hawaii. </bibliomset>
    </bibliomixed>

    <bibliomixed id="Hill07">
      <bibliomset relation="paper"> : <surname>Hill</surname>, <firstname>Melissa A.</firstname>;
      and <surname>Jackson</surname>, <firstname>E. Bruce</firstname> : <title role="paper"><ulink
      url="http://http://daveml/papers/2007_AIAA_DaveMLTranslator_paper.pdf"> The DaveMLTranslator:
      An Interface for DAVE-ML Aerodynamic Models </ulink></title>. <subtitle>AIAA
      2007-6890</subtitle>, presented at the AIAA Modeling and Simulation Technologies Conference,
      20 August 2007, Hilton Head, South Carolina. </bibliomset>
    </bibliomixed>

    <bibliomixed id="ISO8601">
      <bibliomset relation="article"> : <corpauthor>International Organization for
      Standards</corpauthor> : <title><ulink
      url="http://www.iso.ch/iso/en/CatalogueDetailPage.CatalogueDetail?CSNUMBER=40874&amp;ICS1=1&amp;ICS2=140&amp;ICS3=30">Data
      elements and interchange formats - Information interchange - Representation of dates and
      times</ulink></title> <productnumber>ISO 8601:2000</productnumber>, <pubdate>2000</pubdate>
      </bibliomset>
    </bibliomixed>

    <bibliomixed id="Jackson04">
      <bibliomset relation="paper"> : <surname>Jackson</surname>, <firstname>E. Bruce</firstname>;
          <surname>Hildreth</surname>, <firstname>Bruce L.</firstname>; <surname>York</surname>,
          <firstname>Brent W.</firstname>; and <surname>Cleveland</surname>,
          <firstname>William</firstname> : <title role="paper">
          <ulink url="http://dscb.larc.nasa.gov/DCBStaff/ebj/Papers/aiaa-04-5038-DAVEdemo1.pdf">
            Evaluation of a Candidate Flight Dynamics Model Simulation Standard Exchange Format
          </ulink>
        </title>. <subtitle>AIAA 2004-5038</subtitle>, presented at the AIAA Modeling and Simulation
        Technologies Conference, 17 August 2004, Providence, Rhode Island. </bibliomset>
    </bibliomixed>

    <bibliomixed id="Jackson02">
      <bibliomset relation="paper"> : <surname>Jackson</surname>, <firstname>E. Bruce</firstname>;
        and <surname>Hildreth</surname>, <firstname>Bruce L.</firstname> : <title role="paper">
          <ulink url="http://techreports.larc.nasa.gov/ltrs/PDF/2002/aiaa/NASA-aiaa-2002-4482.pdf">
            Flight Dynamic Model Exchange using XML </ulink>
        </title>. <subtitle>AIAA 2002-4482</subtitle>, presented at the AIAA Modeling and Simulation
        Technology Conference, 5 August 2002, Monterey, California. </bibliomset>
    </bibliomixed>

    <bibliomixed id="Lin04">
      <bibliomset relation="article"> : <surname>Lin</surname>, <firstname>Risheng</firstname>; and
      <surname>Afjeh</surname>, <firstname>Abdollah A.</firstname> : <title
      role="article">Development of XML Databinding Integration for Web-Enabled Aircraft Engine
      Simulation</title>. </bibliomset>
      <bibliomset relation="journal">
        <title>J. Computing and Information Science and Engineering</title>
        <volumenum>4</volumenum>
        <issuenum>3</issuenum>
        <publishername>American Society of Mechanical Engineers</publishername>
        <pubdate>September 2004</pubdate>
      </bibliomset>
    </bibliomixed>

    <bibliomixed id="NAA64">
      <bibliomset relation="report"> : <corpauthor>North American Aviation</corpauthor> : 
      <title>Aerodynamic Data Manual for Project Apollo</title>
        <productnumber>SID 64-174C</productnumber>, <pubdate>1964</pubdate>
      </bibliomset>
    </bibliomixed>

    <bibliomixed id="W3C-XLINK">
      <bibliomset relation="article"> : <corpauthor>World Wide Web Consortium (W3C)</corpauthor> :
      <title><ulink url="http://www.w3.org/TR/xlink/">W3C Recommendation: XML Linking Language
      (XLink) Version 1.0</ulink></title> <pubdate>2001-06-27</pubdate>
      </bibliomset>
    </bibliomixed>

    <bibliomixed id="W3C-XML">
      <bibliomset relation="article"> : <corpauthor>World Wide Web Consortium (W3C)</corpauthor> :
      <title><ulink url="http://www.w3.org/TR/xml/">W3C Recommendation: Extensible Markup Language
      (XML) 1.0</ulink></title>
      <pubdate>2008-11-26</pubdate>
      </bibliomset>
    </bibliomixed>

    <bibliomixed id="wiki01">
      <bibliomset relation="article"> : <corpauthor>Combined wisdom of the Internet</corpauthor> :
      <title><ulink
      url="http://en.wikipedia.org/wiki/Spline_interpolation">http://wikipedia.org/wiki/Spline_interpolation:
      "Spline Interpolation"</ulink></title><pubdate>Cited 2006</pubdate>
      </bibliomset>
    </bibliomixed>

  </bibliography>

  <?hard-pagebreak?>

  <index/>

</article>
